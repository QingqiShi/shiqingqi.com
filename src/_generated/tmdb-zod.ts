// Generated by ts-to-zod
import { z } from "zod";

export const operationsSchema = z.object({
  "search-movie": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        include_adult: z.boolean().optional(),
        language: z.string().optional(),
        primary_release_year: z.string().optional(),
        page: z.number().optional(),
        region: z.string().optional(),
        year: z.string().optional(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "discover-movie": z.object({
    parameters: z.object({
      query: z
        .object({
          certification: z
            .string()
            .optional()
            .describe("use in conjunction with `region`"),
          "certification.gte": z
            .string()
            .optional()
            .describe("use in conjunction with `region`"),
          "certification.lte": z
            .string()
            .optional()
            .describe("use in conjunction with `region`"),
          certification_country: z
            .string()
            .optional()
            .describe(
              "use in conjunction with the `certification`, `certification.gte` and `certification.lte` filters",
            ),
          include_adult: z.boolean().optional(),
          include_video: z.boolean().optional(),
          language: z.string().optional(),
          page: z.number().optional(),
          primary_release_year: z.number().optional(),
          "primary_release_date.gte": z.string().optional(),
          "primary_release_date.lte": z.string().optional(),
          region: z.string().optional(),
          "release_date.gte": z.string().optional(),
          "release_date.lte": z.string().optional(),
          sort_by: z
            .union([
              z.literal("original_title.asc"),
              z.literal("original_title.desc"),
              z.literal("popularity.asc"),
              z.literal("popularity.desc"),
              z.literal("revenue.asc"),
              z.literal("revenue.desc"),
              z.literal("primary_release_date.asc"),
              z.literal("title.asc"),
              z.literal("title.desc"),
              z.literal("primary_release_date.desc"),
              z.literal("vote_average.asc"),
              z.literal("vote_average.desc"),
              z.literal("vote_count.asc"),
              z.literal("vote_count.desc"),
            ])
            .optional(),
          "vote_average.gte": z.number().optional(),
          "vote_average.lte": z.number().optional(),
          "vote_count.gte": z.number().optional(),
          "vote_count.lte": z.number().optional(),
          watch_region: z
            .string()
            .optional()
            .describe(
              "use in conjunction with `with_watch_monetization_types ` or `with_watch_providers `",
            ),
          with_cast: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_companies: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_crew: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_genres: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_keywords: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_origin_country: z.string().optional(),
          with_original_language: z.string().optional(),
          with_people: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_release_type: z
            .number()
            .optional()
            .describe(
              "possible values are: [1, 2, 3, 4, 5, 6] can be a comma (`AND`) or pipe (`OR`) separated query, can be used in conjunction with `region`",
            ),
          "with_runtime.gte": z.number().optional(),
          "with_runtime.lte": z.number().optional(),
          with_watch_monetization_types: z
            .string()
            .optional()
            .describe(
              "possible values are: [flatrate, free, ads, rent, buy] use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query",
            ),
          with_watch_providers: z
            .string()
            .optional()
            .describe(
              "use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query",
            ),
          without_companies: z.string().optional(),
          without_genres: z.string().optional(),
          without_keywords: z.string().optional(),
          without_watch_providers: z.string().optional(),
          year: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-details": z.object({
    parameters: z.object({
      query: z
        .object({
          append_to_response: z
            .string()
            .optional()
            .describe(
              "comma separated list of endpoints within this namespace, 20 items max",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              adult: z.boolean().default(true),
              backdrop_path: z.string().optional(),
              belongs_to_collection: z.unknown().optional(),
              budget: z.number().default(0),
              genres: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              homepage: z.string().optional(),
              id: z.number().default(0),
              imdb_id: z.string().optional(),
              original_language: z.string().optional(),
              original_title: z.string().optional(),
              overview: z.string().optional(),
              popularity: z.number().default(0),
              poster_path: z.string().optional(),
              production_companies: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    logo_path: z.string().optional(),
                    name: z.string().optional(),
                    origin_country: z.string().optional(),
                  }),
                )
                .optional(),
              production_countries: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              release_date: z.string().optional(),
              revenue: z.number().default(0),
              runtime: z.number().default(0),
              spoken_languages: z
                .array(
                  z.object({
                    english_name: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              status: z.string().optional(),
              tagline: z.string().optional(),
              title: z.string().optional(),
              video: z.boolean().default(true),
              vote_average: z.number().default(0),
              vote_count: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-details": z.object({
    parameters: z.object({
      query: z
        .object({
          append_to_response: z
            .string()
            .optional()
            .describe(
              "comma separated list of endpoints within this namespace, 20 items max",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              adult: z.boolean().default(true),
              backdrop_path: z.string().optional(),
              created_by: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    credit_id: z.string().optional(),
                    name: z.string().optional(),
                    gender: z.number().default(0),
                    profile_path: z.string().optional(),
                  }),
                )
                .optional(),
              episode_run_time: z.array(z.number()).optional(),
              first_air_date: z.string().optional(),
              genres: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              homepage: z.string().optional(),
              id: z.number().default(0),
              in_production: z.boolean().default(true),
              languages: z.array(z.string()).optional(),
              last_air_date: z.string().optional(),
              last_episode_to_air: z
                .object({
                  id: z.number().default(0),
                  name: z.string().optional(),
                  overview: z.string().optional(),
                  vote_average: z.number().default(0),
                  vote_count: z.number().default(0),
                  air_date: z.string().optional(),
                  episode_number: z.number().default(0),
                  production_code: z.string().optional(),
                  runtime: z.number().default(0),
                  season_number: z.number().default(0),
                  show_id: z.number().default(0),
                  still_path: z.string().optional(),
                })
                .optional(),
              name: z.string().optional(),
              next_episode_to_air: z.unknown().optional(),
              networks: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    logo_path: z.string().optional(),
                    name: z.string().optional(),
                    origin_country: z.string().optional(),
                  }),
                )
                .optional(),
              number_of_episodes: z.number().default(0),
              number_of_seasons: z.number().default(0),
              origin_country: z.array(z.string()).optional(),
              original_language: z.string().optional(),
              original_name: z.string().optional(),
              overview: z.string().optional(),
              popularity: z.number().default(0),
              poster_path: z.string().optional(),
              production_companies: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    logo_path: z.string().optional(),
                    name: z.string().optional(),
                    origin_country: z.string().optional(),
                  }),
                )
                .optional(),
              production_countries: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              seasons: z
                .array(
                  z.object({
                    air_date: z.string().optional(),
                    episode_count: z.number().default(0),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    season_number: z.number().default(0),
                    vote_average: z.number().default(0),
                  }),
                )
                .optional(),
              spoken_languages: z
                .array(
                  z.object({
                    english_name: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              status: z.string().optional(),
              tagline: z.string().optional(),
              type: z.string().optional(),
              vote_average: z.number().default(0),
              vote_count: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "search-tv": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        first_air_date_year: z
          .number()
          .optional()
          .describe(
            "Search only the first air date. Valid values are: 1000..9999",
          ),
        include_adult: z.boolean().optional(),
        language: z.string().optional(),
        page: z.number().optional(),
        year: z
          .number()
          .optional()
          .describe(
            "Search the first air date and all episode air dates. Valid values are: 1000..9999",
          ),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "search-multi": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        include_adult: z.boolean().optional(),
        language: z.string().optional(),
        page: z.number().optional(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    title: z.string().optional(),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    release_date: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "search-person": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        include_adult: z.boolean().optional(),
        language: z.string().optional(),
        page: z.number().optional(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    known_for: z
                      .array(
                        z.object({
                          adult: z.boolean().default(true),
                          backdrop_path: z.string().optional(),
                          id: z.number().default(0),
                          title: z.string().optional(),
                          original_language: z.string().optional(),
                          original_title: z.string().optional(),
                          overview: z.string().optional(),
                          poster_path: z.string().optional(),
                          media_type: z.string().optional(),
                          genre_ids: z.array(z.number()).optional(),
                          popularity: z.number().default(0),
                          release_date: z.string().optional(),
                          video: z.boolean().default(true),
                          vote_average: z.number().default(0),
                          vote_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "configuration-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              images: z
                .object({
                  base_url: z.string().optional(),
                  secure_base_url: z.string().optional(),
                  backdrop_sizes: z.array(z.string()).optional(),
                  logo_sizes: z.array(z.string()).optional(),
                  poster_sizes: z.array(z.string()).optional(),
                  profile_sizes: z.array(z.string()).optional(),
                  still_sizes: z.array(z.string()).optional(),
                })
                .optional(),
              change_keys: z.array(z.string()).optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-details": z.object({
    parameters: z.object({
      query: z
        .object({
          append_to_response: z
            .string()
            .optional()
            .describe(
              "comma separated list of endpoints within this namespace, 20 items max",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              _id: z.string().optional(),
              air_date: z.string().optional(),
              episodes: z
                .array(
                  z.object({
                    air_date: z.string().optional(),
                    episode_number: z.number().default(0),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    overview: z.string().optional(),
                    production_code: z.string().optional(),
                    runtime: z.number().default(0),
                    season_number: z.number().default(0),
                    show_id: z.number().default(0),
                    still_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    crew: z
                      .array(
                        z.object({
                          department: z.string().optional(),
                          job: z.string().optional(),
                          credit_id: z.string().optional(),
                          adult: z.boolean().default(true),
                          gender: z.number().default(0),
                          id: z.number().default(0),
                          known_for_department: z.string().optional(),
                          name: z.string().optional(),
                          original_name: z.string().optional(),
                          popularity: z.number().default(0),
                          profile_path: z.string().optional(),
                        }),
                      )
                      .optional(),
                    guest_stars: z
                      .array(
                        z.object({
                          character: z.string().optional(),
                          credit_id: z.string().optional(),
                          order: z.number().default(0),
                          adult: z.boolean().default(true),
                          gender: z.number().default(0),
                          id: z.number().default(0),
                          known_for_department: z.string().optional(),
                          name: z.string().optional(),
                          original_name: z.string().optional(),
                          popularity: z.number().default(0),
                          profile_path: z.string().optional(),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
              name: z.string().optional(),
              overview: z.string().optional(),
              id: z.number().default(0),
              poster_path: z.string().optional(),
              season_number: z.number().default(0),
              vote_average: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-details": z.object({
    parameters: z.object({
      query: z
        .object({
          append_to_response: z
            .string()
            .optional()
            .describe(
              "comma separated list of endpoints within this namespace, 20 items max",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              air_date: z.string().optional(),
              crew: z
                .array(
                  z.object({
                    department: z.string().optional(),
                    job: z.string().optional(),
                    credit_id: z.string().optional(),
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                  }),
                )
                .optional(),
              episode_number: z.number().default(0),
              guest_stars: z
                .array(
                  z.object({
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                  }),
                )
                .optional(),
              name: z.string().optional(),
              overview: z.string().optional(),
              id: z.number().default(0),
              production_code: z.string().optional(),
              runtime: z.number().default(0),
              season_number: z.number().default(0),
              still_path: z.string().optional(),
              vote_average: z.number().default(0),
              vote_count: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "discover-tv": z.object({
    parameters: z.object({
      query: z
        .object({
          "air_date.gte": z.string().optional(),
          "air_date.lte": z.string().optional(),
          first_air_date_year: z.number().optional(),
          "first_air_date.gte": z.string().optional(),
          "first_air_date.lte": z.string().optional(),
          include_adult: z.boolean().optional(),
          include_null_first_air_dates: z.boolean().optional(),
          language: z.string().optional(),
          page: z.number().optional(),
          screened_theatrically: z.boolean().optional(),
          sort_by: z
            .union([
              z.literal("first_air_date.asc"),
              z.literal("first_air_date.desc"),
              z.literal("name.asc"),
              z.literal("name.desc"),
              z.literal("original_name.asc"),
              z.literal("original_name.desc"),
              z.literal("popularity.asc"),
              z.literal("popularity.desc"),
              z.literal("vote_average.asc"),
              z.literal("vote_average.desc"),
              z.literal("vote_count.asc"),
              z.literal("vote_count.desc"),
            ])
            .optional(),
          timezone: z.string().optional(),
          "vote_average.gte": z.number().optional(),
          "vote_average.lte": z.number().optional(),
          "vote_count.gte": z.number().optional(),
          "vote_count.lte": z.number().optional(),
          watch_region: z
            .string()
            .optional()
            .describe(
              "use in conjunction with `with_watch_monetization_types ` or `with_watch_providers `",
            ),
          with_companies: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_genres: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_keywords: z
            .string()
            .optional()
            .describe("can be a comma (`AND`) or pipe (`OR`) separated query"),
          with_networks: z.number().optional(),
          with_origin_country: z.string().optional(),
          with_original_language: z.string().optional(),
          "with_runtime.gte": z.number().optional(),
          "with_runtime.lte": z.number().optional(),
          with_status: z
            .string()
            .optional()
            .describe(
              "possible values are: [0, 1, 2, 3, 4, 5], can be a comma (`AND`) or pipe (`OR`) separated query",
            ),
          with_watch_monetization_types: z
            .string()
            .optional()
            .describe(
              "possible values are: [flatrate, free, ads, rent, buy] use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query",
            ),
          with_watch_providers: z
            .string()
            .optional()
            .describe(
              "use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query",
            ),
          without_companies: z.string().optional(),
          without_genres: z.string().optional(),
          without_keywords: z.string().optional(),
          without_watch_providers: z.string().optional(),
          with_type: z
            .string()
            .optional()
            .describe(
              "possible values are: [0, 1, 2, 3, 4, 5, 6], can be a comma (`AND`) or pipe (`OR`) separated query",
            ),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    backdrop_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-images": z.object({
    parameters: z.object({
      query: z
        .object({
          include_image_language: z
            .string()
            .optional()
            .describe(
              "specify a comma separated list of ISO-639-1 values to query, for example: `en,null`",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              backdrops: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.unknown().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
              id: z.number().default(0),
              logos: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
              posters: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-images": z.object({
    parameters: z.object({
      query: z
        .object({
          include_image_language: z
            .string()
            .optional()
            .describe(
              "specify a comma separated list of ISO-639-1 values to query, for example: `en,null`",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              backdrops: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.unknown().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
              id: z.number().default(0),
              logos: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
              posters: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-images": z.object({
    parameters: z.object({
      query: z
        .object({
          include_image_language: z
            .string()
            .optional()
            .describe(
              "specify a comma separated list of ISO-639-1 values to query, for example: `en,null`",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              posters: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-images": z.object({
    parameters: z.object({
      query: z
        .object({
          include_image_language: z
            .string()
            .optional()
            .describe(
              "specify a comma separated list of ISO-639-1 values to query, for example: `en,null`",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              stills: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.unknown().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "trending-all": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z
            .string()
            .optional()
            .describe("`ISO-639-1`-`ISO-3166-1` code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        time_window: z.union([z.literal("day"), z.literal("week")]),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    title: z.string().optional(),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    release_date: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "trending-movies": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z
            .string()
            .optional()
            .describe("`ISO-639-1`-`ISO-3166-1` code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        time_window: z.union([z.literal("day"), z.literal("week")]),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    title: z.string().optional(),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    release_date: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "trending-tv": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z
            .string()
            .optional()
            .describe("`ISO-639-1`-`ISO-3166-1` code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        time_window: z.union([z.literal("day"), z.literal("week")]),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    first_air_date: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-account-states": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
          guest_session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              favorite: z.boolean().default(true),
              rated: z
                .object({
                  value: z.number().default(0),
                })
                .optional(),
              watchlist: z.boolean().default(true),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-account-states": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
          guest_session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              favorite: z.boolean().default(true),
              rated: z
                .object({
                  value: z.number().default(0),
                })
                .optional(),
              watchlist: z.boolean().default(true),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-account-states": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
          guest_session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              favorite: z.boolean().default(true),
              rated: z
                .object({
                  value: z.number().default(0),
                })
                .optional(),
              watchlist: z.boolean().default(true),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "trending-people": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z
            .string()
            .optional()
            .describe("`ISO-639-1`-`ISO-3166-1` code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        time_window: z.union([z.literal("day"), z.literal("week")]),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    media_type: z.string().optional(),
                    popularity: z.number().default(0),
                    gender: z.number().default(0),
                    known_for_department: z.string().optional(),
                    profile_path: z.string().optional(),
                    known_for: z
                      .array(
                        z.object({
                          adult: z.boolean().default(true),
                          backdrop_path: z.string().optional(),
                          id: z.number().default(0),
                          title: z.string().optional(),
                          original_language: z.string().optional(),
                          original_title: z.string().optional(),
                          overview: z.string().optional(),
                          poster_path: z.string().optional(),
                          media_type: z.string().optional(),
                          genre_ids: z.array(z.number()).optional(),
                          popularity: z.number().default(0),
                          release_date: z.string().optional(),
                          video: z.boolean().default(true),
                          vote_average: z.number().default(0),
                          vote_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-alternative-titles": z.object({
    parameters: z.object({
      query: z
        .object({
          country: z
            .string()
            .optional()
            .describe("specify a ISO-3166-1 value to filter the results"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              titles: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    title: z.string().optional(),
                    type: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-changes": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              changes: z
                .array(
                  z.object({
                    key: z.string().optional(),
                    items: z
                      .array(
                        z.object({
                          id: z.string().optional(),
                          action: z.string().optional(),
                          time: z.string().optional(),
                          iso_639_1: z.string().optional(),
                          iso_3166_1: z.string().optional(),
                          value: z
                            .object({
                              poster: z
                                .object({
                                  file_path: z.string().optional(),
                                })
                                .optional(),
                            })
                            .optional(),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    cast_id: z.number().default(0),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    credit_id: z.string().optional(),
                    department: z.string().optional(),
                    job: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-external-ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              imdb_id: z.string().optional(),
              wikidata_id: z.unknown().optional(),
              facebook_id: z.string().optional(),
              instagram_id: z.unknown().optional(),
              twitter_id: z.unknown().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-keywords": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              keywords: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-lists": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    description: z.string().optional(),
                    favorite_count: z.number().default(0),
                    id: z.number().default(0),
                    item_count: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    list_type: z.string().optional(),
                    name: z.string().optional(),
                    poster_path: z.unknown().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-recommendations": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.record(z.never()),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-release-dates": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    release_dates: z
                      .array(
                        z.object({
                          certification: z.string().optional(),
                          descriptors: z.array(z.unknown()).optional(),
                          iso_639_1: z.string().optional(),
                          note: z.string().optional(),
                          release_date: z.string().optional(),
                          type: z.number().default(0),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-reviews": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    author: z.string().optional(),
                    author_details: z
                      .object({
                        name: z.string().optional(),
                        username: z.string().optional(),
                        avatar_path: z.string().optional(),
                        rating: z.unknown().optional(),
                      })
                      .optional(),
                    content: z.string().optional(),
                    created_at: z.string().optional(),
                    id: z.string().optional(),
                    updated_at: z.string().optional(),
                    url: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-similar": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              translations: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                    english_name: z.string().optional(),
                    data: z
                      .object({
                        homepage: z.string().optional(),
                        overview: z.string().optional(),
                        runtime: z.number().default(0),
                        tagline: z.string().optional(),
                        title: z.string().optional(),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-videos": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    iso_639_1: z.string().optional(),
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                    key: z.string().optional(),
                    site: z.string().optional(),
                    size: z.number().default(0),
                    type: z.string().optional(),
                    official: z.boolean().default(true),
                    published_at: z.string().optional(),
                    id: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-watch-providers": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .object({
                  AE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AL: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AR: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BA: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BE: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BG: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BH: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CA: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CL: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CO: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CV: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DK: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EC: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EE: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EG: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ES: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      ads: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FJ: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FR: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GF: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HN: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HR: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      ads: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ID: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IE: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IL: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IN: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IQ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IS: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IT: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JM: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JP: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  KR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  KW: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LT: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LV: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MD: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MU: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MX: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MZ: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NL: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NO: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  OM: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PE: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PL: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PT: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  QA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RU: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SE: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SI: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SK: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SM: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SV: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TR: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TW: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  UG: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  US: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  UY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  VE: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  YE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ZA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                })
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-add-rating": z.object({
    parameters: z.object({
      query: z
        .object({
          guest_session_id: z.string().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.object({
        "Content-Type": z.string(),
      }),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-delete-rating": z.object({
    parameters: z.object({
      query: z
        .object({
          guest_session_id: z.string().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z
        .object({
          "Content-Type": z.string().optional(),
        })
        .optional(),
      path: z.object({
        movie_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-create-guest-session": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
              guest_session_id: z.string().optional(),
              expires_at: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-create-request-token": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
              expires_at: z.string().optional(),
              request_token: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-create-session": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
              session_id: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-create-session-from-v4-token": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
              session_id: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-delete-session": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "find-by-id": z.object({
    parameters: z.object({
      query: z.object({
        external_source: z.union([
          z.literal(""),
          z.literal("imdb_id"),
          z.literal("facebook_id"),
          z.literal("instagram_id"),
          z.literal("tvdb_id"),
          z.literal("tiktok_id"),
          z.literal("twitter_id"),
          z.literal("wikidata_id"),
          z.literal("youtube_id"),
        ]),
        language: z.string().optional(),
      }),
      header: z.never().optional(),
      path: z.object({
        external_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              movie_results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    title: z.string().optional(),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    release_date: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              person_results: z.array(z.unknown()).optional(),
              tv_results: z.array(z.unknown()).optional(),
              tv_episode_results: z.array(z.unknown()).optional(),
              tv_season_results: z.array(z.unknown()).optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-details": z.object({
    parameters: z.object({
      query: z
        .object({
          append_to_response: z
            .string()
            .optional()
            .describe(
              "comma separated list of endpoints within this namespace, 20 items max",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              adult: z.boolean().default(true),
              also_known_as: z.array(z.string()).optional(),
              biography: z.string().optional(),
              birthday: z.string().optional(),
              deathday: z.unknown().optional(),
              gender: z.number().default(0),
              homepage: z.unknown().optional(),
              id: z.number().default(0),
              imdb_id: z.string().optional(),
              known_for_department: z.string().optional(),
              name: z.string().optional(),
              place_of_birth: z.string().optional(),
              popularity: z.number().default(0),
              profile_path: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-changes": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              changes: z
                .array(
                  z.object({
                    key: z.string().optional(),
                    items: z
                      .array(
                        z.object({
                          id: z.string().optional(),
                          action: z.string().optional(),
                          time: z.string().optional(),
                          iso_639_1: z.string().optional(),
                          iso_3166_1: z.string().optional(),
                          value: z.string().optional(),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-changes": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              changes: z
                .array(
                  z.object({
                    key: z.string().optional(),
                    items: z
                      .array(
                        z.object({
                          id: z.string().optional(),
                          action: z.string().optional(),
                          time: z.string().optional(),
                          iso_639_1: z.string().optional(),
                          iso_3166_1: z.string().optional(),
                          value: z
                            .object({
                              poster: z
                                .object({
                                  file_path: z.string().optional(),
                                  iso_639_1: z.string().optional(),
                                })
                                .optional(),
                            })
                            .optional(),
                          original_value: z
                            .object({
                              poster: z
                                .object({
                                  file_path: z.string().optional(),
                                  iso_639_1: z.string().optional(),
                                })
                                .optional(),
                            })
                            .optional(),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              profiles: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.unknown().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-movie-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    credit_id: z.string().optional(),
                    department: z.string().optional(),
                    job: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-tv-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    episode_count: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    credit_id: z.string().optional(),
                    department: z.string().optional(),
                    episode_count: z.number().default(0),
                    job: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-combined-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                    media_type: z.string().optional(),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    credit_id: z.string().optional(),
                    department: z.string().optional(),
                    job: z.string().optional(),
                    media_type: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-external-ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              freebase_mid: z.string().optional(),
              freebase_id: z.string().optional(),
              imdb_id: z.string().optional(),
              tvrage_id: z.number().default(0),
              wikidata_id: z.string().optional(),
              facebook_id: z.string().optional(),
              instagram_id: z.string().optional(),
              tiktok_id: z.string().optional(),
              twitter_id: z.string().optional(),
              youtube_id: z.unknown().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-tagged-images": z.object({
    parameters: z.object({
      query: z
        .object({
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    file_path: z.string().optional(),
                    height: z.number().default(0),
                    id: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                    image_type: z.string().optional(),
                    media: z
                      .object({
                        adult: z.boolean().default(true),
                        backdrop_path: z.string().optional(),
                        id: z.number().default(0),
                        title: z.string().optional(),
                        original_language: z.string().optional(),
                        original_title: z.string().optional(),
                        overview: z.string().optional(),
                        poster_path: z.string().optional(),
                        media_type: z.string().optional(),
                        genre_ids: z.array(z.number()).optional(),
                        popularity: z.number().default(0),
                        release_date: z.string().optional(),
                        video: z.boolean().default(true),
                        vote_average: z.number().default(0),
                        vote_count: z.number().default(0),
                      })
                      .optional(),
                    media_type: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  translations: z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        person_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              translations: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                    english_name: z.string().optional(),
                    data: z
                      .object({
                        biography: z.string().optional(),
                        name: z.string().optional(),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-popular-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for: z
                      .array(
                        z.object({
                          adult: z.boolean().default(true),
                          backdrop_path: z.string().optional(),
                          genre_ids: z.array(z.number()).optional(),
                          id: z.number().default(0),
                          media_type: z.string().optional(),
                          original_language: z.string().optional(),
                          original_title: z.string().optional(),
                          overview: z.string().optional(),
                          poster_path: z.string().optional(),
                          release_date: z.string().optional(),
                          title: z.string().optional(),
                          video: z.boolean().default(true),
                          vote_average: z.number().default(0),
                          vote_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-popular-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          region: z.string().optional().describe("ISO-3166-1 code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-top-rated-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          region: z.string().optional().describe("ISO-3166-1 code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-upcoming-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          region: z.string().optional().describe("ISO-3166-1 code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              dates: z
                .object({
                  maximum: z.string().optional(),
                  minimum: z.string().optional(),
                })
                .optional(),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-now-playing-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          region: z.string().optional().describe("ISO-3166-1 code"),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              dates: z
                .object({
                  maximum: z.string().optional(),
                  minimum: z.string().optional(),
                })
                .optional(),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-airing-today-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          timezone: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    backdrop_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-on-the-air-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          timezone: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    backdrop_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-popular-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    backdrop_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-top-rated-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    backdrop_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "movie-latest-id": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              adult: z.boolean().default(true),
              backdrop_path: z.unknown().optional(),
              belongs_to_collection: z.unknown().optional(),
              budget: z.number().default(0),
              genres: z.array(z.unknown()).optional(),
              homepage: z.string().optional(),
              id: z.number().default(0),
              imdb_id: z.unknown().optional(),
              original_language: z.string().optional(),
              original_title: z.string().optional(),
              overview: z.string().optional(),
              popularity: z.number().default(0),
              poster_path: z.unknown().optional(),
              production_companies: z.array(z.unknown()).optional(),
              production_countries: z.array(z.unknown()).optional(),
              release_date: z.string().optional(),
              revenue: z.number().default(0),
              runtime: z.number().default(0),
              spoken_languages: z.array(z.unknown()).optional(),
              status: z.string().optional(),
              tagline: z.string().optional(),
              title: z.string().optional(),
              video: z.boolean().default(true),
              vote_average: z.number().default(0),
              vote_count: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-latest-id": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              adult: z.boolean().default(true),
              backdrop_path: z.unknown().optional(),
              created_by: z.array(z.unknown()).optional(),
              episode_run_time: z.array(z.unknown()).optional(),
              first_air_date: z.string().optional(),
              genres: z.array(z.unknown()).optional(),
              homepage: z.string().optional(),
              id: z.number().default(0),
              in_production: z.boolean().default(true),
              languages: z.array(z.unknown()).optional(),
              last_air_date: z.string().optional(),
              last_episode_to_air: z
                .object({
                  id: z.number().default(0),
                  name: z.string().optional(),
                  overview: z.string().optional(),
                  vote_average: z.number().default(0),
                  vote_count: z.number().default(0),
                  air_date: z.string().optional(),
                  episode_number: z.number().default(0),
                  production_code: z.string().optional(),
                  runtime: z.unknown().optional(),
                  season_number: z.number().default(0),
                  show_id: z.number().default(0),
                  still_path: z.unknown().optional(),
                })
                .optional(),
              name: z.string().optional(),
              next_episode_to_air: z.unknown().optional(),
              networks: z.array(z.unknown()).optional(),
              number_of_episodes: z.number().default(0),
              number_of_seasons: z.number().default(0),
              origin_country: z.array(z.string()).optional(),
              original_language: z.string().optional(),
              original_name: z.string().optional(),
              overview: z.string().optional(),
              popularity: z.number().default(0),
              poster_path: z.unknown().optional(),
              production_companies: z.array(z.unknown()).optional(),
              production_countries: z.array(z.unknown()).optional(),
              seasons: z
                .array(
                  z.object({
                    air_date: z.unknown().optional(),
                    episode_count: z.number().default(0),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.unknown().optional(),
                    season_number: z.number().default(0),
                  }),
                )
                .optional(),
              spoken_languages: z.array(z.unknown()).optional(),
              status: z.string().optional(),
              tagline: z.string().optional(),
              type: z.string().optional(),
              vote_average: z.number().default(0),
              vote_count: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-aggregate-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    roles: z
                      .array(
                        z.object({
                          credit_id: z.string().optional(),
                          character: z.string().optional(),
                          episode_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                    total_episode_count: z.number().default(0),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    jobs: z
                      .array(
                        z.object({
                          credit_id: z.string().optional(),
                          job: z.string().optional(),
                          episode_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                    department: z.string().optional(),
                    total_episode_count: z.number().default(0),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-alternative-titles": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    title: z.string().optional(),
                    type: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-content-ratings": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    descriptors: z.array(z.unknown()).optional(),
                    iso_3166_1: z.string().optional(),
                    rating: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    credit_id: z.string().optional(),
                    department: z.string().optional(),
                    job: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-episode-groups": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    description: z.string().optional(),
                    episode_count: z.number().default(0),
                    group_count: z.number().default(0),
                    id: z.string().optional(),
                    name: z.string().optional(),
                    network: z
                      .object({
                        id: z.number().default(0),
                        logo_path: z.string().optional(),
                        name: z.string().optional(),
                        origin_country: z.string().optional(),
                      })
                      .optional(),
                    type: z.number().default(0),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-external-ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              imdb_id: z.string().optional(),
              freebase_mid: z.string().optional(),
              freebase_id: z.string().optional(),
              tvdb_id: z.number().default(0),
              tvrage_id: z.number().default(0),
              wikidata_id: z.string().optional(),
              facebook_id: z.string().optional(),
              instagram_id: z.string().optional(),
              twitter_id: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-keywords": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    name: z.string().optional(),
                    id: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-recommendations": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    first_air_date: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-reviews": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    author: z.string().optional(),
                    author_details: z
                      .object({
                        name: z.string().optional(),
                        username: z.string().optional(),
                        avatar_path: z.string().optional(),
                        rating: z.number().default(0),
                      })
                      .optional(),
                    content: z.string().optional(),
                    created_at: z.string().optional(),
                    id: z.string().optional(),
                    updated_at: z.string().optional(),
                    url: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-screened-theatrically": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    episode_number: z.number().default(0),
                    season_number: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-similar": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              translations: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                    english_name: z.string().optional(),
                    data: z
                      .object({
                        name: z.string().optional(),
                        overview: z.string().optional(),
                        homepage: z.string().optional(),
                        tagline: z.string().optional(),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-videos": z.object({
    parameters: z.object({
      query: z
        .object({
          include_video_language: z
            .string()
            .optional()
            .describe(
              "filter the list results by language, supports more than one value by using a comma",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    iso_639_1: z.string().optional(),
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                    key: z.string().optional(),
                    site: z.string().optional(),
                    size: z.number().default(0),
                    type: z.string().optional(),
                    official: z.boolean().default(true),
                    published_at: z.string().optional(),
                    id: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-watch-providers": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .object({
                  AE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AT: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CA: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CL: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DE: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EC: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ES: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FI: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FR: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GF: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GQ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HN: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ID: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IL: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IQ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IT: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JM: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JP: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  KE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  KR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MD: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MX: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NL: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PL: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      ads: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SC: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SN: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SV: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TW: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  UG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  US: z
                    .object({
                      link: z.string().optional(),
                      free: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  UY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  VE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ZA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ZM: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                })
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-add-rating": z.object({
    parameters: z.object({
      query: z
        .object({
          guest_session_id: z.string().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.object({
        "Content-Type": z.string(),
      }),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-series-delete-rating": z.object({
    parameters: z.object({
      query: z
        .object({
          guest_session_id: z.string().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z
        .object({
          "Content-Type": z.string().optional(),
        })
        .optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-account-states": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
          guest_session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    episode_number: z.number().default(0),
                    rated: z
                      .object({
                        value: z.number().default(0),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-aggregate-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    roles: z
                      .array(
                        z.object({
                          credit_id: z.string().optional(),
                          character: z.string().optional(),
                          episode_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                    total_episode_count: z.number().default(0),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.unknown().optional(),
                    jobs: z
                      .array(
                        z.object({
                          credit_id: z.string().optional(),
                          job: z.string().optional(),
                          episode_count: z.number().default(0),
                        }),
                      )
                      .optional(),
                    department: z.string().optional(),
                    total_episode_count: z.number().default(0),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-changes-by-id": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        season_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              changes: z
                .array(
                  z.object({
                    key: z.string().optional(),
                    items: z
                      .array(
                        z.object({
                          id: z.string().optional(),
                          action: z.string().optional(),
                          time: z.string().optional(),
                          value: z
                            .object({
                              episode_id: z.number().default(0),
                              episode_number: z.number().default(0),
                            })
                            .optional(),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.unknown().optional(),
                    credit_id: z.string().optional(),
                    department: z.string().optional(),
                    job: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-external-ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              freebase_mid: z.string().optional(),
              freebase_id: z.string().optional(),
              tvdb_id: z.number().default(0),
              tvrage_id: z.unknown().optional(),
              wikidata_id: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              translations: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                    english_name: z.string().optional(),
                    data: z
                      .object({
                        name: z.string().optional(),
                        overview: z.string().optional(),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-season-videos": z.object({
    parameters: z.object({
      query: z
        .object({
          include_video_language: z
            .string()
            .optional()
            .describe(
              "filter the list results by language, supports more than one value by using a comma",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    iso_639_1: z.string().optional(),
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                    key: z.string().optional(),
                    site: z.string().optional(),
                    size: z.number().default(0),
                    type: z.string().optional(),
                    official: z.boolean().default(true),
                    published_at: z.string().optional(),
                    id: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-credits": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              cast: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                  }),
                )
                .optional(),
              crew: z
                .array(
                  z.object({
                    department: z.string().optional(),
                    job: z.string().optional(),
                    credit_id: z.string().optional(),
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                  }),
                )
                .optional(),
              guest_stars: z
                .array(
                  z.object({
                    character: z.string().optional(),
                    credit_id: z.string().optional(),
                    order: z.number().default(0),
                    adult: z.boolean().default(true),
                    gender: z.number().default(0),
                    id: z.number().default(0),
                    known_for_department: z.string().optional(),
                    name: z.string().optional(),
                    original_name: z.string().optional(),
                    popularity: z.number().default(0),
                    profile_path: z.string().optional(),
                  }),
                )
                .optional(),
              id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-external-ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              imdb_id: z.string().optional(),
              freebase_mid: z.string().optional(),
              freebase_id: z.string().optional(),
              tvdb_id: z.number().default(0),
              tvrage_id: z.number().default(0),
              wikidata_id: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              translations: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                    english_name: z.string().optional(),
                    data: z
                      .object({
                        name: z.string().optional(),
                        overview: z.string().optional(),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-videos": z.object({
    parameters: z.object({
      query: z
        .object({
          include_video_language: z
            .string()
            .optional()
            .describe(
              "filter the list results by language, supports more than one value by using a comma",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    iso_639_1: z.string().optional(),
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                    key: z.string().optional(),
                    site: z.string().optional(),
                    size: z.number().default(0),
                    type: z.string().optional(),
                    official: z.boolean().default(true),
                    published_at: z.string().optional(),
                    id: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-add-rating": z.object({
    parameters: z.object({
      query: z
        .object({
          guest_session_id: z.string().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.object({
        "Content-Type": z.string(),
      }),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-delete-rating": z.object({
    parameters: z.object({
      query: z
        .object({
          guest_session_id: z.string().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z
        .object({
          "Content-Type": z.string().optional(),
        })
        .optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
        episode_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-details": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              avatar: z
                .object({
                  gravatar: z
                    .object({
                      hash: z.string().optional(),
                    })
                    .optional(),
                  tmdb: z
                    .object({
                      avatar_path: z.string().optional(),
                    })
                    .optional(),
                })
                .optional(),
              id: z.number().default(0),
              iso_639_1: z.string().optional(),
              iso_3166_1: z.string().optional(),
              name: z.string().optional(),
              include_adult: z.boolean().default(true),
              username: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-lists": z.object({
    parameters: z.object({
      query: z
        .object({
          page: z.number().optional(),
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    description: z.string().optional(),
                    favorite_count: z.number().default(0),
                    id: z.number().default(0),
                    item_count: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    list_type: z.string().optional(),
                    name: z.string().optional(),
                    poster_path: z.unknown().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-get-favorites": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-favorite-tv": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-rated-movies": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    rating: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-rated-tv": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    rating: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-rated-tv-episodes": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    air_date: z.string().optional(),
                    episode_number: z.number().default(0),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    overview: z.string().optional(),
                    production_code: z.string().optional(),
                    runtime: z.number().default(0),
                    season_number: z.number().default(0),
                    show_id: z.number().default(0),
                    still_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    rating: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-watchlist-movies": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-watchlist-tv": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          session_id: z.string().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-add-favorite": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "account-add-to-watchlist": z.object({
    parameters: z.object({
      query: z
        .object({
          session_id: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        account_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "certification-movie-list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              certifications: z
                .object({
                  AU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  BG: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  BR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  CA: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  "CA-QC": z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  DE: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  DK: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  ES: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  FI: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  FR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  GB: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  HU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IN: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IT: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  LT: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  MY: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  NL: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  NO: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  NZ: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PH: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PT: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  RU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  SE: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  US: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  KR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  SK: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  TH: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  MX: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  ID: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  TR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  AR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  GR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  TW: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  ZA: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  SG: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IE: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  JP: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  VI: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  CH: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IL: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  HK: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  MO: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  LV: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  LU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                })
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "certifications-tv-list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              certifications: z
                .object({
                  AU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  BR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  CA: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  "CA-QC": z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  DE: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  ES: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  FR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  GB: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  HU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  KR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  LT: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  NL: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PH: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PT: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  RU: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  SK: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  TH: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  US: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IT: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  FI: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  MY: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  NZ: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  NO: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  BG: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  MX: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IN: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  DK: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  SE: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  ID: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  TR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  AR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PL: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  MA: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  GR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  IL: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  TW: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  ZA: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  SG: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  PR: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                  VI: z
                    .array(
                      z.object({
                        certification: z.string().optional(),
                        meaning: z.string().optional(),
                        order: z.number().default(0),
                      }),
                    )
                    .optional(),
                })
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "changes-movie-list": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    adult: z.boolean().default(true),
                  }),
                )
                .optional(),
              page: z.number().default(0),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "changes-tv-list": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    adult: z.boolean().default(true),
                  }),
                )
                .optional(),
              page: z.number().default(0),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "changes-people-list": z.object({
    parameters: z.object({
      query: z
        .object({
          end_date: z.string().optional(),
          page: z.number().optional(),
          start_date: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    adult: z.boolean().default(true),
                  }),
                )
                .optional(),
              page: z.number().default(0),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "collection-details": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        collection_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              name: z.string().optional(),
              overview: z.string().optional(),
              poster_path: z.string().optional(),
              backdrop_path: z.string().optional(),
              parts: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    title: z.string().optional(),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                    media_type: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    popularity: z.number().default(0),
                    release_date: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "collection-images": z.object({
    parameters: z.object({
      query: z
        .object({
          include_image_language: z
            .string()
            .optional()
            .describe(
              "specify a comma separated list of ISO-639-1 values to query, for example: `en,null`",
            ),
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        collection_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              backdrops: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.unknown().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
              posters: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    height: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    file_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "collection-translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        collection_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              translations: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    iso_639_1: z.string().optional(),
                    name: z.string().optional(),
                    english_name: z.string().optional(),
                    data: z
                      .object({
                        title: z.string().optional(),
                        overview: z.string().optional(),
                        homepage: z.string().optional(),
                      })
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "company-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        company_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              description: z.string().optional(),
              headquarters: z.string().optional(),
              homepage: z.string().optional(),
              id: z.number().default(0),
              logo_path: z.string().optional(),
              name: z.string().optional(),
              origin_country: z.string().optional(),
              parent_company: z.unknown().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "company-alternative-names": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        company_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    name: z.string().optional(),
                    type: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "company-images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        company_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              logos: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    file_path: z.string().optional(),
                    height: z.number().default(0),
                    id: z.string().optional(),
                    file_type: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "credit-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        credit_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              credit_type: z.string().optional(),
              department: z.string().optional(),
              job: z.string().optional(),
              media: z
                .object({
                  adult: z.boolean().default(true),
                  backdrop_path: z.string().optional(),
                  id: z.number().default(0),
                  name: z.string().optional(),
                  original_language: z.string().optional(),
                  original_name: z.string().optional(),
                  overview: z.string().optional(),
                  poster_path: z.string().optional(),
                  media_type: z.string().optional(),
                  genre_ids: z.array(z.number()).optional(),
                  popularity: z.number().default(0),
                  first_air_date: z.string().optional(),
                  vote_average: z.number().default(0),
                  vote_count: z.number().default(0),
                  origin_country: z.array(z.string()).optional(),
                  character: z.string().optional(),
                  episodes: z.array(z.unknown()).optional(),
                  seasons: z
                    .array(
                      z.object({
                        air_date: z.string().optional(),
                        episode_count: z.number().default(0),
                        id: z.number().default(0),
                        name: z.string().optional(),
                        overview: z.string().optional(),
                        poster_path: z.string().optional(),
                        season_number: z.number().default(0),
                        show_id: z.number().default(0),
                      }),
                    )
                    .optional(),
                })
                .optional(),
              media_type: z.string().optional(),
              id: z.string().optional(),
              person: z
                .object({
                  adult: z.boolean().default(true),
                  id: z.number().default(0),
                  name: z.string().optional(),
                  original_name: z.string().optional(),
                  media_type: z.string().optional(),
                  popularity: z.number().default(0),
                  gender: z.number().default(0),
                  known_for_department: z.string().optional(),
                  profile_path: z.string().optional(),
                })
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "genre-movie-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              genres: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "genre-tv-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              genres: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "guest-session-rated-movies": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        guest_session_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    rating: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "guest-session-rated-tv": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        guest_session_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    origin_country: z.array(z.string()).optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    first_air_date: z.string().optional(),
                    name: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    rating: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "guest-session-rated-tv-episodes": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
          sort_by: z
            .union([z.literal("created_at.asc"), z.literal("created_at.desc")])
            .optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        guest_session_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    air_date: z.string().optional(),
                    episode_number: z.number().default(0),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    overview: z.string().optional(),
                    production_code: z.string().optional(),
                    runtime: z.number().default(0),
                    season_number: z.number().default(0),
                    show_id: z.number().default(0),
                    still_path: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    rating: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "watch-providers-available-regions": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    iso_3166_1: z.string().optional(),
                    english_name: z.string().optional(),
                    native_name: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "watch-providers-movie-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          watch_region: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    display_priorities: z
                      .object({
                        CA: z.number().default(0),
                        AE: z.number().default(0),
                        AR: z.number().default(0),
                        AT: z.number().default(0),
                        AU: z.number().default(0),
                        BE: z.number().default(0),
                        BO: z.number().default(0),
                        BR: z.number().default(0),
                        BG: z.number().default(0),
                        CH: z.number().default(0),
                        CL: z.number().default(0),
                        CO: z.number().default(0),
                        CR: z.number().default(0),
                        CZ: z.number().default(0),
                        DE: z.number().default(0),
                        DK: z.number().default(0),
                        EC: z.number().default(0),
                        EE: z.number().default(0),
                        EG: z.number().default(0),
                        ES: z.number().default(0),
                        FI: z.number().default(0),
                        FR: z.number().default(0),
                        GB: z.number().default(0),
                        GR: z.number().default(0),
                        GT: z.number().default(0),
                        HK: z.number().default(0),
                        HN: z.number().default(0),
                        HU: z.number().default(0),
                        ID: z.number().default(0),
                        IE: z.number().default(0),
                        IN: z.number().default(0),
                        IT: z.number().default(0),
                        JP: z.number().default(0),
                        LT: z.number().default(0),
                        LV: z.number().default(0),
                        MX: z.number().default(0),
                        MY: z.number().default(0),
                        NL: z.number().default(0),
                        NO: z.number().default(0),
                        NZ: z.number().default(0),
                        PE: z.number().default(0),
                        PH: z.number().default(0),
                        PL: z.number().default(0),
                        PT: z.number().default(0),
                        PY: z.number().default(0),
                        RU: z.number().default(0),
                        SA: z.number().default(0),
                        SE: z.number().default(0),
                        SG: z.number().default(0),
                        SK: z.number().default(0),
                        TH: z.number().default(0),
                        TR: z.number().default(0),
                        TW: z.number().default(0),
                        US: z.number().default(0),
                        VE: z.number().default(0),
                        ZA: z.number().default(0),
                        SI: z.number().default(0),
                        CV: z.number().default(0),
                        GH: z.number().default(0),
                        MU: z.number().default(0),
                        MZ: z.number().default(0),
                        UG: z.number().default(0),
                        IL: z.number().default(0),
                      })
                      .optional(),
                    display_priority: z.number().default(0),
                    logo_path: z.string().optional(),
                    provider_name: z.string().optional(),
                    provider_id: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "watch-provider-tv-list": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          watch_region: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              results: z
                .array(
                  z.object({
                    display_priorities: z
                      .object({
                        CA: z.number().default(0),
                        AE: z.number().default(0),
                        AR: z.number().default(0),
                        AT: z.number().default(0),
                        AU: z.number().default(0),
                        BE: z.number().default(0),
                        BO: z.number().default(0),
                        BR: z.number().default(0),
                        BG: z.number().default(0),
                        CH: z.number().default(0),
                        CL: z.number().default(0),
                        CO: z.number().default(0),
                        CR: z.number().default(0),
                        CZ: z.number().default(0),
                        DE: z.number().default(0),
                        DK: z.number().default(0),
                        EC: z.number().default(0),
                        EE: z.number().default(0),
                        EG: z.number().default(0),
                        ES: z.number().default(0),
                        FI: z.number().default(0),
                        FR: z.number().default(0),
                        GB: z.number().default(0),
                        GR: z.number().default(0),
                        GT: z.number().default(0),
                        HK: z.number().default(0),
                        HN: z.number().default(0),
                        HU: z.number().default(0),
                        ID: z.number().default(0),
                        IE: z.number().default(0),
                        IN: z.number().default(0),
                        IT: z.number().default(0),
                        JP: z.number().default(0),
                        LT: z.number().default(0),
                        LV: z.number().default(0),
                        MX: z.number().default(0),
                        MY: z.number().default(0),
                        NL: z.number().default(0),
                        NO: z.number().default(0),
                        NZ: z.number().default(0),
                        PE: z.number().default(0),
                        PH: z.number().default(0),
                        PL: z.number().default(0),
                        PT: z.number().default(0),
                        PY: z.number().default(0),
                        RU: z.number().default(0),
                        SA: z.number().default(0),
                        SE: z.number().default(0),
                        SG: z.number().default(0),
                        SK: z.number().default(0),
                        TH: z.number().default(0),
                        TR: z.number().default(0),
                        TW: z.number().default(0),
                        US: z.number().default(0),
                        VE: z.number().default(0),
                        ZA: z.number().default(0),
                        SI: z.number().default(0),
                        CV: z.number().default(0),
                        GH: z.number().default(0),
                        MU: z.number().default(0),
                        MZ: z.number().default(0),
                        UG: z.number().default(0),
                        IL: z.number().default(0),
                      })
                      .optional(),
                    display_priority: z.number().default(0),
                    logo_path: z.string().optional(),
                    provider_name: z.string().optional(),
                    provider_id: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "keyword-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        keyword_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              name: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "keyword-movies": z.object({
    parameters: z.object({
      query: z
        .object({
          include_adult: z.boolean().optional(),
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        keyword_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-details": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        list_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              created_by: z.string().optional(),
              description: z.string().optional(),
              favorite_count: z.number().default(0),
              id: z.string().optional(),
              items: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    genre_ids: z.array(z.number()).optional(),
                    id: z.number().default(0),
                    media_type: z.string().optional(),
                    original_language: z.string().optional(),
                    original_title: z.string().optional(),
                    overview: z.string().optional(),
                    popularity: z.number().default(0),
                    poster_path: z.string().optional(),
                    release_date: z.string().optional(),
                    title: z.string().optional(),
                    video: z.boolean().default(true),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                  }),
                )
                .optional(),
              item_count: z.number().default(0),
              iso_639_1: z.string().optional(),
              name: z.string().optional(),
              poster_path: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-delete": z.object({
    parameters: z.object({
      query: z.object({
        session_id: z.string(),
      }),
      header: z.never().optional(),
      path: z.object({
        list_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-check-item-status": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          movie_id: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        list_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              item_present: z.boolean().default(true),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-create": z.object({
    parameters: z.object({
      query: z.object({
        session_id: z.string(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_message: z.string().optional(),
              success: z.boolean().default(true),
              status_code: z.number().default(0),
              list_id: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-add-movie": z.object({
    parameters: z.object({
      query: z.object({
        session_id: z.string(),
      }),
      header: z.never().optional(),
      path: z.object({
        list_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string().optional(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-remove-movie": z.object({
    parameters: z.object({
      query: z.object({
        session_id: z.string(),
      }),
      header: z.never().optional(),
      path: z.object({
        list_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "list-clear": z.object({
    parameters: z.object({
      query: z.object({
        session_id: z.string(),
        confirm: z.boolean(),
      }),
      header: z.never().optional(),
      path: z.object({
        list_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "network-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        network_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              headquarters: z.string().optional(),
              homepage: z.string().optional(),
              id: z.number().default(0),
              logo_path: z.string().optional(),
              name: z.string().optional(),
              origin_country: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "details-copy": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        network_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .array(
                  z.object({
                    name: z.string().optional(),
                    type: z.string().optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "alternative-names-copy": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        network_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              logos: z
                .array(
                  z.object({
                    aspect_ratio: z.number().default(0),
                    file_path: z.string().optional(),
                    height: z.number().default(0),
                    id: z.string().optional(),
                    file_type: z.string().optional(),
                    vote_average: z.number().default(0),
                    vote_count: z.number().default(0),
                    width: z.number().default(0),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "review-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        review_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.string().optional(),
              author: z.string().optional(),
              author_details: z
                .object({
                  name: z.string().optional(),
                  username: z.string().optional(),
                  avatar_path: z.string().optional(),
                  rating: z.number().default(0),
                })
                .optional(),
              content: z.string().optional(),
              created_at: z.string().optional(),
              iso_639_1: z.string().optional(),
              media_id: z.number().default(0),
              media_title: z.string().optional(),
              media_type: z.string().optional(),
              updated_at: z.string().optional(),
              url: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-validate-key": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
              status_code: z.number().default(0),
              status_message: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
      401: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              status_code: z.number().default(0),
              status_message: z.string().optional(),
              success: z.boolean().default(true),
            }),
          }),
        })
        .describe("401"),
    }),
  }),
  "tv-season-watch-providers": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
        season_number: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              results: z
                .object({
                  AE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  AU: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  BS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CA: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CH: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CL: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  CZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DE: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  DZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EC: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  EG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ES: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  FR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GF: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GQ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  GT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HN: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  HU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ID: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IE: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IL: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IQ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  IT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JM: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  JP: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  KE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  KR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LB: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  LY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MD: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MX: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  MZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NL: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NO: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  NZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PL: z
                    .object({
                      link: z.string().optional(),
                      rent: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  PY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RO: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RS: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  RU: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SC: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SI: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SK: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SN: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  SV: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TH: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TR: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TT: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TW: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  TZ: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  UG: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  US: z
                    .object({
                      link: z.string().optional(),
                      buy: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      free: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  UY: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  VE: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ZA: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                  ZM: z
                    .object({
                      link: z.string().optional(),
                      flatrate: z
                        .array(
                          z.object({
                            logo_path: z.string().optional(),
                            provider_id: z.number().default(0),
                            provider_name: z.string().optional(),
                            display_priority: z.number().default(0),
                          }),
                        )
                        .optional(),
                    })
                    .optional(),
                })
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "configuration-countries": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.array(
              z.object({
                iso_3166_1: z.string().optional(),
                english_name: z.string().optional(),
                native_name: z.string().optional(),
              }),
            ),
          }),
        })
        .describe("200"),
    }),
  }),
  "configuration-jobs": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.array(
              z.object({
                department: z.string().optional(),
                jobs: z.array(z.string()).optional(),
              }),
            ),
          }),
        })
        .describe("200"),
    }),
  }),
  "configuration-languages": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.array(
              z.object({
                iso_639_1: z.string().optional(),
                english_name: z.string().optional(),
                name: z.string().optional(),
              }),
            ),
          }),
        })
        .describe("200"),
    }),
  }),
  "configuration-primary-translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.array(z.string()),
          }),
        })
        .describe("200"),
    }),
  }),
  "configuration-timezones": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.array(
              z.object({
                iso_3166_1: z.string().optional(),
                zones: z.array(z.string()).optional(),
              }),
            ),
          }),
        })
        .describe("200"),
    }),
  }),
  "authentication-create-session-from-login": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z
      .object({
        content: z.object({
          "application/json": z.object({
            RAW_BODY: z.string(),
          }),
        }),
      })
      .optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              success: z.boolean().default(true),
              expires_at: z.string().optional(),
              request_token: z.string().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "person-latest-id": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              adult: z.boolean().default(true),
              also_known_as: z.array(z.unknown()).optional(),
              biography: z.string().optional(),
              birthday: z.unknown().optional(),
              deathday: z.unknown().optional(),
              gender: z.number().default(0),
              homepage: z.unknown().optional(),
              id: z.number().default(0),
              imdb_id: z.unknown().optional(),
              known_for_department: z.unknown().optional(),
              name: z.string().optional(),
              place_of_birth: z.unknown().optional(),
              popularity: z.number().default(0),
              profile_path: z.unknown().optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-changes-by-id": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        episode_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              changes: z
                .array(
                  z.object({
                    key: z.string().optional(),
                    items: z
                      .array(
                        z.object({
                          id: z.string().optional(),
                          action: z.string().optional(),
                          time: z.string().optional(),
                          value: z.string().optional(),
                        }),
                      )
                      .optional(),
                  }),
                )
                .optional(),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "tv-episode-group-details": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.object({
        tv_episode_group_id: z.string(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              description: z.string().optional(),
              episode_count: z.number().default(0),
              group_count: z.number().default(0),
              groups: z
                .array(
                  z.object({
                    id: z.string().optional(),
                    name: z.string().optional(),
                    order: z.number().default(0),
                    episodes: z
                      .array(
                        z.object({
                          air_date: z.string().optional(),
                          episode_number: z.number().default(0),
                          id: z.number().default(0),
                          name: z.string().optional(),
                          overview: z.string().optional(),
                          production_code: z.string().optional(),
                          runtime: z.unknown().optional(),
                          season_number: z.number().default(0),
                          show_id: z.number().default(0),
                          still_path: z.string().optional(),
                          vote_average: z.number().default(0),
                          vote_count: z.number().default(0),
                          order: z.number().default(0),
                        }),
                      )
                      .optional(),
                    locked: z.boolean().default(true),
                  }),
                )
                .optional(),
              id: z.string().optional(),
              name: z.string().optional(),
              network: z
                .object({
                  id: z.number().default(0),
                  logo_path: z.string().optional(),
                  name: z.string().optional(),
                  origin_country: z.string().optional(),
                })
                .optional(),
              type: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "search-company": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        page: z.number().optional(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    logo_path: z.string().optional(),
                    name: z.string().optional(),
                    origin_country: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "search-collection": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        include_adult: z.boolean().optional(),
        language: z.string().optional(),
        page: z.number().optional(),
        region: z.string().optional(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    adult: z.boolean().default(true),
                    backdrop_path: z.string().optional(),
                    id: z.number().default(0),
                    name: z.string().optional(),
                    original_language: z.string().optional(),
                    original_name: z.string().optional(),
                    overview: z.string().optional(),
                    poster_path: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "search-keyword": z.object({
    parameters: z.object({
      query: z.object({
        query: z.string(),
        page: z.number().optional(),
      }),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    id: z.number().default(0),
                    name: z.string().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
  "lists-copy": z.object({
    parameters: z.object({
      query: z
        .object({
          language: z.string().optional(),
          page: z.number().optional(),
        })
        .optional(),
      header: z.never().optional(),
      path: z.object({
        series_id: z.number(),
      }),
      cookie: z.never().optional(),
    }),
    requestBody: z.never().optional(),
    responses: z.object({
      200: z
        .object({
          headers: z.record(z.unknown()),
          content: z.object({
            "application/json": z.object({
              id: z.number().default(0),
              page: z.number().default(0),
              results: z
                .array(
                  z.object({
                    description: z.string().optional(),
                    favorite_count: z.number().default(0),
                    id: z.number().default(0),
                    item_count: z.number().default(0),
                    iso_639_1: z.string().optional(),
                    iso_3166_1: z.string().optional(),
                    name: z.string().optional(),
                    poster_path: z.unknown().optional(),
                  }),
                )
                .optional(),
              total_pages: z.number().default(0),
              total_results: z.number().default(0),
            }),
          }),
        })
        .describe("200"),
    }),
  }),
});

export const webhooksSchema = z.record(z.never());

export const componentsSchema = z.object({
  schemas: z.never(),
  responses: z.never(),
  parameters: z.never(),
  requestBodies: z.never(),
  headers: z.never(),
  pathItems: z.never(),
});

export const defsSchema = z.record(z.never());

export const pathsSchema = z.object({
  "/3/search/movie": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-movie"].describe(
      "Search for movies by their original, translated and alternative titles.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/discover/movie": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["discover-movie"].describe(
      "Find movies using over 30 filters and sort options.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-details"].describe(
      "Get the top level details of a movie by ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-details"].describe(
      "Get the details of a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/search/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-tv"].describe(
      "Search for TV shows by their original, translated and also known as names.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/search/multi": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-multi"].describe(
      "Use multi search when you want to search for movies, TV shows and people in a single request.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/search/person": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-person"].describe(
      "Search for people by their name and also known as names.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/configuration": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["configuration-details"].describe(
      "Query the API configuration details.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-details"].describe(
      "Query the details of a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}": z.object(
    {
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-details"].describe(
        "Query the details of a TV episode.",
      ),
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    },
  ),
  "/3/discover/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["discover-tv"].describe(
      "Find TV shows using over 30 filters and sort options.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-images"].describe(
      "Get the images that belong to a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-images"].describe(
      "Get the images that belong to a TV series.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-images"].describe(
      "Get the images that belong to a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/images":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-images"].describe(
        "Get the images that belong to a TV episode.",
      ),
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/trending/all/{time_window}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["trending-all"].describe(
      "Get the trending movies, TV shows and people.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/trending/movie/{time_window}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["trending-movies"].describe(
      "Get the trending movies on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/trending/tv/{time_window}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["trending-tv"].describe(
      "Get the trending TV shows on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/account_states": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-account-states"].describe(
      "Get the rating, watchlist and favourite status of an account.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/account_states": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-account-states"].describe(
      "Get the rating, watchlist and favourite status.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/account_states":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-account-states"].describe(
        "Get the rating, watchlist and favourite status.",
      ),
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/trending/person/{time_window}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["trending-people"].describe(
      "Get the trending people on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/alternative_titles": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-alternative-titles"].describe(
      "Get the alternative titles for a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-changes"].describe(
      "Get the recent changes for a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-credits"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/external_ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-external-ids"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/keywords": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-keywords"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/lists": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-lists"].describe(
      "Get the lists that a movie has been added to.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/recommendations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-recommendations"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/release_dates": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-release-dates"].describe(
      "Get the release dates and certifications for a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/reviews": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-reviews"].describe(
      "Get the user reviews for a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/similar": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-similar"].describe(
      "Get the similar movies based on genres and keywords.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-translations"].describe(
      "Get the translations for a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/videos": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-videos"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/watch/providers": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-watch-providers"].describe(
      "Get the list of streaming providers we have for a movie.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/{movie_id}/rating": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["movie-add-rating"].describe(
      "Rate a movie and save it to your rated list.",
    ),
    delete: operationsSchema.shape["movie-delete-rating"].describe(
      "Delete a user rating.",
    ),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication/guest_session/new": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["authentication-create-guest-session"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication/token/new": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["authentication-create-request-token"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication/session/new": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["authentication-create-session"],
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication/session/convert/4": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["authentication-create-session-from-v4-token"],
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication/session": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: operationsSchema.shape["authentication-delete-session"],
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/find/{external_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["find-by-id"].describe(
      "Find data by external ID's.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-details"].describe(
      "Query the top level details of a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-changes"].describe(
      "Get the recent changes for a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-changes"].describe(
      "Get the recent changes for a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-images"].describe(
      "Get the profile images that belong to a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/movie_credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-movie-credits"].describe(
      "Get the movie credits for a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/tv_credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-tv-credits"].describe(
      "Get the TV credits that belong to a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/combined_credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-combined-credits"].describe(
      "Get the combined movie and TV credits that belong to a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/external_ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-external-ids"].describe(
      "Get the external ID's that belong to a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/tagged_images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-tagged-images"].describe(
      "Get the tagged images for a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/{person_id}/translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape.translations.describe(
      "Get the translations that belong to a person.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/popular": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-popular-list"].describe(
      "Get a list of people ordered by popularity.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/popular": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-popular-list"].describe(
      "Get a list of movies ordered by popularity.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/top_rated": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-top-rated-list"].describe(
      "Get a list of movies ordered by rating.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/upcoming": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-upcoming-list"].describe(
      "Get a list of movies that are being released soon.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/now_playing": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-now-playing-list"].describe(
      "Get a list of movies that are currently in theatres.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/airing_today": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-airing-today-list"].describe(
      "Get a list of TV shows airing today.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/on_the_air": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-on-the-air-list"].describe(
      "Get a list of TV shows that air in the next 7 days.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/popular": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-popular-list"].describe(
      "Get a list of TV shows ordered by popularity.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/top_rated": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-top-rated-list"].describe(
      "Get a list of TV shows ordered by rating.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/latest": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["movie-latest-id"].describe(
      "Get the newest movie ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/latest": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-latest-id"].describe(
      "Get the newest TV show ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/aggregate_credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-aggregate-credits"].describe(
      "Get the aggregate credits (cast and crew) that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/alternative_titles": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-alternative-titles"].describe(
      "Get the alternative titles that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/content_ratings": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-content-ratings"].describe(
      "Get the content ratings that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-credits"].describe(
      "Get the latest season credits of a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/episode_groups": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-episode-groups"].describe(
      "Get the episode groups that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/external_ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-external-ids"].describe(
      "Get a list of external IDs that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/keywords": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-keywords"].describe(
      "Get a list of keywords that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/recommendations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-recommendations"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/reviews": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-reviews"].describe(
      "Get the reviews that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/screened_theatrically": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-screened-theatrically"].describe(
      "Get the seasons and episodes that have screened theatrically.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/similar": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-similar"].describe(
      "Get the similar TV shows.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-translations"].describe(
      "Get the translations that have been added to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/videos": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-videos"].describe(
      "Get the videos that belong to a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/watch/providers": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-series-watch-providers"].describe(
      "Get the list of streaming providers we have for a TV show.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/rating": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["tv-series-add-rating"].describe(
      "Rate a TV show and save it to your rated list.",
    ),
    delete: operationsSchema.shape["tv-series-delete-rating"],
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/account_states": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-account-states"].describe(
      "Get the rating, watchlist and favourite status.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/aggregate_credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-aggregate-credits"].describe(
      "Get the aggregate credits (cast and crew) that have been added to a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/season/{season_id}/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-changes-by-id"].describe(
      "Get the recent changes for a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/credits": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-credits"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/external_ids": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-external-ids"].describe(
      "Get a list of external IDs that have been added to a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-translations"].describe(
      "Get the translations for a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/videos": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-videos"].describe(
      "Get the videos that belong to a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/credits":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-credits"],
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/external_ids":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-external-ids"].describe(
        "Get a list of external IDs that have been added to a TV episode.",
      ),
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/translations":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-translations"].describe(
        "Get the translations that have been added to a TV episode.",
      ),
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/videos":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: operationsSchema.shape["tv-episode-videos"].describe(
        "Get the videos that belong to a TV episode.",
      ),
      put: z.never().optional(),
      post: z.never().optional(),
      delete: z.never().optional(),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/rating":
    z.object({
      parameters: z.object({
        query: z.never().optional(),
        header: z.never().optional(),
        path: z.never().optional(),
        cookie: z.never().optional(),
      }),
      get: z.never().optional(),
      put: z.never().optional(),
      post: operationsSchema.shape["tv-episode-add-rating"].describe(
        "Rate a TV episode and save it to your rated list.",
      ),
      delete: operationsSchema.shape["tv-episode-delete-rating"].describe(
        "Delete your rating on a TV episode.",
      ),
      options: z.never().optional(),
      head: z.never().optional(),
      patch: z.never().optional(),
      trace: z.never().optional(),
    }),
  "/3/account/{account_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-details"].describe(
      "Get the public details of an account on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/lists": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-lists"].describe(
      "Get a users list of custom lists.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/favorite/movies": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-get-favorites"].describe(
      "Get a users list of favourite movies.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/favorite/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-favorite-tv"].describe(
      "Get a users list of favourite TV shows.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/rated/movies": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-rated-movies"].describe(
      "Get a users list of rated movies.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/rated/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-rated-tv"].describe(
      "Get a users list of rated TV shows.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/rated/tv/episodes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-rated-tv-episodes"].describe(
      "Get a users list of rated TV episodes.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/watchlist/movies": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-watchlist-movies"].describe(
      "Get a list of movies added to a users watchlist.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/watchlist/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["account-watchlist-tv"].describe(
      "Get a list of TV shows added to a users watchlist.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/favorite": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["account-add-favorite"].describe(
      "Mark a movie or TV show as a favourite.",
    ),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/account/{account_id}/watchlist": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["account-add-to-watchlist"].describe(
      "Add a movie or TV show to your watchlist.",
    ),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/certification/movie/list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["certification-movie-list"].describe(
      "Get an up to date list of the officially supported movie certifications on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/certification/tv/list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["certifications-tv-list"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/movie/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["changes-movie-list"].describe(
      "Get a list of all of the movie ids that have been changed in the past 24 hours.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["changes-tv-list"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["changes-people-list"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/collection/{collection_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["collection-details"].describe(
      "Get collection details by ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/collection/{collection_id}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["collection-images"].describe(
      "Get the images that belong to a collection.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/collection/{collection_id}/translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["collection-translations"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/company/{company_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["company-details"].describe(
      "Get the company details by ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/company/{company_id}/alternative_names": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["company-alternative-names"].describe(
      "Get the company details by ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/company/{company_id}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["company-images"].describe(
      "Get the company logos by id.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/credit/{credit_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["credit-details"].describe(
      "Get a movie or TV credit details by ID.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/genre/movie/list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["genre-movie-list"].describe(
      "Get the list of official genres for movies.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/genre/tv/list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["genre-tv-list"].describe(
      "Get the list of official genres for TV shows.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/guest_session/{guest_session_id}/rated/movies": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["guest-session-rated-movies"].describe(
      "Get the rated movies for a guest session.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/guest_session/{guest_session_id}/rated/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["guest-session-rated-tv"].describe(
      "Get the rated TV shows for a guest session.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/guest_session/{guest_session_id}/rated/tv/episodes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["guest-session-rated-tv-episodes"].describe(
      "Get the rated TV episodes for a guest session.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/watch/providers/regions": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["watch-providers-available-regions"].describe(
      "Get the list of the countries we have watch provider (OTT/streaming) data for.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/watch/providers/movie": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["watch-providers-movie-list"].describe(
      "Get the list of streaming providers we have for movies.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/watch/providers/tv": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["watch-provider-tv-list"].describe(
      "Get the list of streaming providers we have for TV shows.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/keyword/{keyword_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["keyword-details"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/keyword/{keyword_id}/movies": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["keyword-movies"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/list/{list_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["list-details"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: operationsSchema.shape["list-delete"].describe("Delete a list."),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/list/{list_id}/item_status": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["list-check-item-status"].describe(
      "Use this method to check if an item has already been added to the list.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/list": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["list-create"],
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/list/{list_id}/add_item": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["list-add-movie"].describe(
      "Add a movie to a list.",
    ),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/list/{list_id}/remove_item": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["list-remove-movie"].describe(
      "Remove a movie from a list.",
    ),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/list/{list_id}/clear": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape["list-clear"].describe(
      "Clear all items from a list.",
    ),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/network/{network_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["network-details"],
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/network/{network_id}/alternative_names": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["details-copy"].describe(
      "Get the alternative names of a network.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/network/{network_id}/images": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["alternative-names-copy"].describe(
      "Get the TV network logos by id.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/review/{review_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["review-details"].describe(
      "Retrieve the details of a movie or TV show review.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["authentication-validate-key"].describe(
      "Test your API Key to see if it's valid.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/season/{season_number}/watch/providers": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-season-watch-providers"].describe(
      "Get the list of streaming providers we have for a TV season.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/configuration/countries": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["configuration-countries"].describe(
      "Get the list of countries (ISO 3166-1 tags) used throughout TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/configuration/jobs": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["configuration-jobs"].describe(
      "Get the list of the jobs and departments we use on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/configuration/languages": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["configuration-languages"].describe(
      "Get the list of languages (ISO 639-1 tags) used throughout TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/configuration/primary_translations": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["configuration-primary-translations"].describe(
      "Get a list of the officially supported translations on TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/configuration/timezones": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["configuration-timezones"].describe(
      "Get the list of timezones used throughout TMDB.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/authentication/token/validate_with_login": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: z.never().optional(),
    put: z.never().optional(),
    post: operationsSchema.shape[
      "authentication-create-session-from-login"
    ].describe(
      "This method allows an application to validate a request token by entering a username and password.",
    ),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/person/latest": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["person-latest-id"].describe(
      "Get the newest created person. This is a live response and will continuously change.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/episode/{episode_id}/changes": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-episode-changes-by-id"].describe(
      "Get the recent changes for a TV episode.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/episode_group/{tv_episode_group_id}": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["tv-episode-group-details"].describe(
      "Get the details of a TV episode group.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/search/company": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-company"].describe(
      "Search for companies by their original and alternative names.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/search/collection": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-collection"].describe(
      "Search for collections by their original, translated and alternative names.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/search/keyword": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["search-keyword"].describe(
      "Search for keywords by their name.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
  "/3/tv/{series_id}/lists": z.object({
    parameters: z.object({
      query: z.never().optional(),
      header: z.never().optional(),
      path: z.never().optional(),
      cookie: z.never().optional(),
    }),
    get: operationsSchema.shape["lists-copy"].describe(
      "Get the lists that a TV series has been added to.",
    ),
    put: z.never().optional(),
    post: z.never().optional(),
    delete: z.never().optional(),
    options: z.never().optional(),
    head: z.never().optional(),
    patch: z.never().optional(),
    trace: z.never().optional(),
  }),
});
