/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * TMDB API
 * OpenAPI spec version: 3
 */
import {
  z as zod
} from 'zod';

/**
 * Search for movies by their original, translated and alternative titles.
 * @summary Movie
 */
export const searchMovieQueryIncludeAdultDefault = false;export const searchMovieQueryLanguageDefault = "en-US";export const searchMovieQueryPageDefault = 1;

export const searchMovieQueryParams = zod.object({
  "query": zod.coerce.string(),
  "include_adult": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(searchMovieQueryLanguageDefault),
  "primary_release_year": zod.coerce.string().optional(),
  "page": zod.coerce.number().default(searchMovieQueryPageDefault),
  "region": zod.coerce.string().optional(),
  "year": zod.coerce.string().optional()
}).strict()

export const searchMovieResponsePageDefault = 0;export const searchMovieResponseResultsItemAdultDefault = true;export const searchMovieResponseResultsItemGenreIdsItemDefault = 0;export const searchMovieResponseResultsItemIdDefault = 0;export const searchMovieResponseResultsItemPopularityDefault = 0;export const searchMovieResponseResultsItemVideoDefault = true;export const searchMovieResponseResultsItemVoteAverageDefault = 0;export const searchMovieResponseResultsItemVoteCountDefault = 0;export const searchMovieResponseTotalPagesDefault = 0;export const searchMovieResponseTotalResultsDefault = 0;

export const searchMovieResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(searchMovieResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(searchMovieResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Find movies using over 30 filters and sort options.
 * @summary Movie
 */
export const discoverMovieQueryIncludeAdultDefault = false;export const discoverMovieQueryIncludeVideoDefault = false;export const discoverMovieQueryLanguageDefault = "en-US";export const discoverMovieQueryPageDefault = 1;export const discoverMovieQuerySortByDefault = "popularity.desc";

export const discoverMovieQueryParams = zod.object({
  "certification": zod.coerce.string().optional().describe('use in conjunction with `region`'),
  "certification.gte": zod.coerce.string().optional().describe('use in conjunction with `region`'),
  "certification.lte": zod.coerce.string().optional().describe('use in conjunction with `region`'),
  "certification_country": zod.coerce.string().optional().describe('use in conjunction with the `certification`, `certification.gte` and `certification.lte` filters'),
  "include_adult": zod.coerce.boolean().optional(),
  "include_video": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(discoverMovieQueryLanguageDefault),
  "page": zod.coerce.number().default(discoverMovieQueryPageDefault),
  "primary_release_year": zod.coerce.number().optional(),
  "primary_release_date.gte": zod.coerce.string().date().optional(),
  "primary_release_date.lte": zod.coerce.string().date().optional(),
  "region": zod.coerce.string().optional(),
  "release_date.gte": zod.coerce.string().date().optional(),
  "release_date.lte": zod.coerce.string().date().optional(),
  "sort_by": zod.enum(['original_title.asc', 'original_title.desc', 'popularity.asc', 'popularity.desc', 'revenue.asc', 'revenue.desc', 'primary_release_date.asc', 'title.asc', 'title.desc', 'primary_release_date.desc', 'vote_average.asc', 'vote_average.desc', 'vote_count.asc', 'vote_count.desc']).default(discoverMovieQuerySortByDefault),
  "vote_average.gte": zod.coerce.number().optional(),
  "vote_average.lte": zod.coerce.number().optional(),
  "vote_count.gte": zod.coerce.number().optional(),
  "vote_count.lte": zod.coerce.number().optional(),
  "watch_region": zod.coerce.string().optional().describe('use in conjunction with `with_watch_monetization_types ` or `with_watch_providers `'),
  "with_cast": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_companies": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_crew": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_genres": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_keywords": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_origin_country": zod.coerce.string().optional(),
  "with_original_language": zod.coerce.string().optional(),
  "with_people": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_release_type": zod.coerce.number().optional().describe('possible values are: [1, 2, 3, 4, 5, 6] can be a comma (`AND`) or pipe (`OR`) separated query, can be used in conjunction with `region`'),
  "with_runtime.gte": zod.coerce.number().optional(),
  "with_runtime.lte": zod.coerce.number().optional(),
  "with_watch_monetization_types": zod.coerce.string().optional().describe('possible values are: [flatrate, free, ads, rent, buy] use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_watch_providers": zod.coerce.string().optional().describe('use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query'),
  "without_companies": zod.coerce.string().optional(),
  "without_genres": zod.coerce.string().optional(),
  "without_keywords": zod.coerce.string().optional(),
  "without_watch_providers": zod.coerce.string().optional(),
  "year": zod.coerce.number().optional()
}).strict()

export const discoverMovieResponsePageDefault = 0;export const discoverMovieResponseResultsItemAdultDefault = true;export const discoverMovieResponseResultsItemGenreIdsItemDefault = 0;export const discoverMovieResponseResultsItemIdDefault = 0;export const discoverMovieResponseResultsItemPopularityDefault = 0;export const discoverMovieResponseResultsItemVideoDefault = true;export const discoverMovieResponseResultsItemVoteAverageDefault = 0;export const discoverMovieResponseResultsItemVoteCountDefault = 0;export const discoverMovieResponseTotalPagesDefault = 0;export const discoverMovieResponseTotalResultsDefault = 0;

export const discoverMovieResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(discoverMovieResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(discoverMovieResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the top level details of a movie by ID.
 * @summary Details
 */
export const movieDetailsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieDetailsQueryLanguageDefault = "en-US";

export const movieDetailsQueryParams = zod.object({
  "append_to_response": zod.coerce.string().optional().describe('comma separated list of endpoints within this namespace, 20 items max'),
  "language": zod.coerce.string().default(movieDetailsQueryLanguageDefault)
}).strict()

export const movieDetailsResponseAdultDefault = true;export const movieDetailsResponseBudgetDefault = 0;export const movieDetailsResponseGenresItemIdDefault = 0;export const movieDetailsResponseIdDefault = 0;export const movieDetailsResponsePopularityDefault = 0;export const movieDetailsResponseProductionCompaniesItemIdDefault = 0;export const movieDetailsResponseRevenueDefault = 0;export const movieDetailsResponseRuntimeDefault = 0;export const movieDetailsResponseVideoDefault = true;export const movieDetailsResponseVoteAverageDefault = 0;export const movieDetailsResponseVoteCountDefault = 0;

export const movieDetailsResponse = zod.object({
  "adult": zod.boolean().default(movieDetailsResponseAdultDefault),
  "backdrop_path": zod.string().optional(),
  "belongs_to_collection": zod.any().optional(),
  "budget": zod.number().optional(),
  "genres": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "homepage": zod.string().optional(),
  "id": zod.number().optional(),
  "imdb_id": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "production_companies": zod.array(zod.object({
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict()).optional(),
  "production_countries": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "release_date": zod.string().optional(),
  "revenue": zod.number().optional(),
  "runtime": zod.number().optional(),
  "spoken_languages": zod.array(zod.object({
  "english_name": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "status": zod.string().optional(),
  "tagline": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(movieDetailsResponseVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()


/**
 * Get the details of a TV show.
 * @summary Details
 */
export const tvSeriesDetailsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesDetailsQueryLanguageDefault = "en-US";

export const tvSeriesDetailsQueryParams = zod.object({
  "append_to_response": zod.coerce.string().optional().describe('comma separated list of endpoints within this namespace, 20 items max'),
  "language": zod.coerce.string().default(tvSeriesDetailsQueryLanguageDefault)
}).strict()

export const tvSeriesDetailsResponseAdultDefault = true;export const tvSeriesDetailsResponseCreatedByItemIdDefault = 0;export const tvSeriesDetailsResponseCreatedByItemGenderDefault = 0;export const tvSeriesDetailsResponseEpisodeRunTimeItemDefault = 0;export const tvSeriesDetailsResponseGenresItemIdDefault = 0;export const tvSeriesDetailsResponseIdDefault = 0;export const tvSeriesDetailsResponseInProductionDefault = true;export const tvSeriesDetailsResponseLastEpisodeToAirIdDefault = 0;export const tvSeriesDetailsResponseLastEpisodeToAirVoteAverageDefault = 0;export const tvSeriesDetailsResponseLastEpisodeToAirVoteCountDefault = 0;export const tvSeriesDetailsResponseLastEpisodeToAirEpisodeNumberDefault = 0;export const tvSeriesDetailsResponseLastEpisodeToAirRuntimeDefault = 0;export const tvSeriesDetailsResponseLastEpisodeToAirSeasonNumberDefault = 0;export const tvSeriesDetailsResponseLastEpisodeToAirShowIdDefault = 0;export const tvSeriesDetailsResponseNetworksItemIdDefault = 0;export const tvSeriesDetailsResponseNumberOfEpisodesDefault = 0;export const tvSeriesDetailsResponseNumberOfSeasonsDefault = 0;export const tvSeriesDetailsResponsePopularityDefault = 0;export const tvSeriesDetailsResponseProductionCompaniesItemIdDefault = 0;export const tvSeriesDetailsResponseSeasonsItemEpisodeCountDefault = 0;export const tvSeriesDetailsResponseSeasonsItemIdDefault = 0;export const tvSeriesDetailsResponseSeasonsItemSeasonNumberDefault = 0;export const tvSeriesDetailsResponseSeasonsItemVoteAverageDefault = 0;export const tvSeriesDetailsResponseVoteAverageDefault = 0;export const tvSeriesDetailsResponseVoteCountDefault = 0;

export const tvSeriesDetailsResponse = zod.object({
  "adult": zod.boolean().default(tvSeriesDetailsResponseAdultDefault),
  "backdrop_path": zod.string().optional(),
  "created_by": zod.array(zod.object({
  "id": zod.number().optional(),
  "credit_id": zod.string().optional(),
  "name": zod.string().optional(),
  "gender": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "episode_run_time": zod.array(zod.number()).optional(),
  "first_air_date": zod.string().optional(),
  "genres": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "homepage": zod.string().optional(),
  "id": zod.number().optional(),
  "in_production": zod.boolean().default(tvSeriesDetailsResponseInProductionDefault),
  "languages": zod.array(zod.string()).optional(),
  "last_air_date": zod.string().optional(),
  "last_episode_to_air": zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "air_date": zod.string().optional(),
  "episode_number": zod.number().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.number().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional(),
  "still_path": zod.string().optional()
}).strict().optional(),
  "name": zod.string().optional(),
  "next_episode_to_air": zod.any().optional(),
  "networks": zod.array(zod.object({
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict()).optional(),
  "number_of_episodes": zod.number().optional(),
  "number_of_seasons": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "production_companies": zod.array(zod.object({
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict()).optional(),
  "production_countries": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "seasons": zod.array(zod.object({
  "air_date": zod.string().optional(),
  "episode_count": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "season_number": zod.number().optional(),
  "vote_average": zod.number().optional()
}).strict()).optional(),
  "spoken_languages": zod.array(zod.object({
  "english_name": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "status": zod.string().optional(),
  "tagline": zod.string().optional(),
  "type": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()


/**
 * Search for TV shows by their original, translated and also known as names.
 * @summary TV
 */
export const searchTvQueryIncludeAdultDefault = false;export const searchTvQueryLanguageDefault = "en-US";export const searchTvQueryPageDefault = 1;

export const searchTvQueryParams = zod.object({
  "query": zod.coerce.string(),
  "first_air_date_year": zod.coerce.number().optional().describe('Search only the first air date. Valid values are: 1000..9999'),
  "include_adult": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(searchTvQueryLanguageDefault),
  "page": zod.coerce.number().default(searchTvQueryPageDefault),
  "year": zod.coerce.number().optional().describe('Search the first air date and all episode air dates. Valid values are: 1000..9999')
}).strict()

export const searchTvResponsePageDefault = 0;export const searchTvResponseResultsItemAdultDefault = true;export const searchTvResponseResultsItemGenreIdsItemDefault = 0;export const searchTvResponseResultsItemIdDefault = 0;export const searchTvResponseResultsItemPopularityDefault = 0;export const searchTvResponseResultsItemVoteAverageDefault = 0;export const searchTvResponseResultsItemVoteCountDefault = 0;export const searchTvResponseTotalPagesDefault = 0;export const searchTvResponseTotalResultsDefault = 0;

export const searchTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(searchTvResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Use multi search when you want to search for movies, TV shows and people in a single request.
 * @summary Multi
 */
export const searchMultiQueryIncludeAdultDefault = false;export const searchMultiQueryLanguageDefault = "en-US";export const searchMultiQueryPageDefault = 1;

export const searchMultiQueryParams = zod.object({
  "query": zod.coerce.string(),
  "include_adult": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(searchMultiQueryLanguageDefault),
  "page": zod.coerce.number().default(searchMultiQueryPageDefault)
}).strict()

export const searchMultiResponsePageDefault = 0;export const searchMultiResponseResultsItemAdultDefault = true;export const searchMultiResponseResultsItemIdDefault = 0;export const searchMultiResponseResultsItemGenreIdsItemDefault = 0;export const searchMultiResponseResultsItemPopularityDefault = 0;export const searchMultiResponseResultsItemVideoDefault = true;export const searchMultiResponseResultsItemVoteAverageDefault = 0;export const searchMultiResponseResultsItemVoteCountDefault = 0;export const searchMultiResponseTotalPagesDefault = 0;export const searchMultiResponseTotalResultsDefault = 0;

export const searchMultiResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(searchMultiResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(searchMultiResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Search for people by their name and also known as names.
 * @summary Person
 */
export const searchPersonQueryIncludeAdultDefault = false;export const searchPersonQueryLanguageDefault = "en-US";export const searchPersonQueryPageDefault = 1;

export const searchPersonQueryParams = zod.object({
  "query": zod.coerce.string(),
  "include_adult": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(searchPersonQueryLanguageDefault),
  "page": zod.coerce.number().default(searchPersonQueryPageDefault)
}).strict()

export const searchPersonResponsePageDefault = 0;export const searchPersonResponseResultsItemAdultDefault = true;export const searchPersonResponseResultsItemGenderDefault = 0;export const searchPersonResponseResultsItemIdDefault = 0;export const searchPersonResponseResultsItemPopularityDefault = 0;export const searchPersonResponseResultsItemKnownForItemAdultDefault = true;export const searchPersonResponseResultsItemKnownForItemIdDefault = 0;export const searchPersonResponseResultsItemKnownForItemGenreIdsItemDefault = 0;export const searchPersonResponseResultsItemKnownForItemPopularityDefault = 0;export const searchPersonResponseResultsItemKnownForItemVideoDefault = true;export const searchPersonResponseResultsItemKnownForItemVoteAverageDefault = 0;export const searchPersonResponseResultsItemKnownForItemVoteCountDefault = 0;export const searchPersonResponseTotalPagesDefault = 0;export const searchPersonResponseTotalResultsDefault = 0;

export const searchPersonResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(searchPersonResponseResultsItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "known_for": zod.array(zod.object({
  "adult": zod.boolean().default(searchPersonResponseResultsItemKnownForItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(searchPersonResponseResultsItemKnownForItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Query the API configuration details.
 * @summary Details
 */
export const configurationDetailsResponse = zod.object({
  "images": zod.object({
  "base_url": zod.string().optional(),
  "secure_base_url": zod.string().optional(),
  "backdrop_sizes": zod.array(zod.string()).optional(),
  "logo_sizes": zod.array(zod.string()).optional(),
  "poster_sizes": zod.array(zod.string()).optional(),
  "profile_sizes": zod.array(zod.string()).optional(),
  "still_sizes": zod.array(zod.string()).optional()
}).strict().optional(),
  "change_keys": zod.array(zod.string()).optional()
}).strict()


/**
 * Query the details of a TV season.
 * @summary Details
 */
export const tvSeasonDetailsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonDetailsQueryLanguageDefault = "en-US";

export const tvSeasonDetailsQueryParams = zod.object({
  "append_to_response": zod.coerce.string().optional().describe('comma separated list of endpoints within this namespace, 20 items max'),
  "language": zod.coerce.string().default(tvSeasonDetailsQueryLanguageDefault)
}).strict()

export const tvSeasonDetailsResponseEpisodesItemEpisodeNumberDefault = 0;export const tvSeasonDetailsResponseEpisodesItemIdDefault = 0;export const tvSeasonDetailsResponseEpisodesItemRuntimeDefault = 0;export const tvSeasonDetailsResponseEpisodesItemSeasonNumberDefault = 0;export const tvSeasonDetailsResponseEpisodesItemShowIdDefault = 0;export const tvSeasonDetailsResponseEpisodesItemVoteAverageDefault = 0;export const tvSeasonDetailsResponseEpisodesItemVoteCountDefault = 0;export const tvSeasonDetailsResponseEpisodesItemCrewItemAdultDefault = true;export const tvSeasonDetailsResponseEpisodesItemCrewItemGenderDefault = 0;export const tvSeasonDetailsResponseEpisodesItemCrewItemIdDefault = 0;export const tvSeasonDetailsResponseEpisodesItemCrewItemPopularityDefault = 0;export const tvSeasonDetailsResponseEpisodesItemGuestStarsItemOrderDefault = 0;export const tvSeasonDetailsResponseEpisodesItemGuestStarsItemAdultDefault = true;export const tvSeasonDetailsResponseEpisodesItemGuestStarsItemGenderDefault = 0;export const tvSeasonDetailsResponseEpisodesItemGuestStarsItemIdDefault = 0;export const tvSeasonDetailsResponseEpisodesItemGuestStarsItemPopularityDefault = 0;export const tvSeasonDetailsResponseIdDefaultOne = 0;export const tvSeasonDetailsResponseSeasonNumberDefault = 0;export const tvSeasonDetailsResponseVoteAverageDefault = 0;

export const tvSeasonDetailsResponse = zod.object({
  "_id": zod.string().optional(),
  "air_date": zod.string().optional(),
  "episodes": zod.array(zod.object({
  "air_date": zod.string().optional(),
  "episode_number": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.number().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional(),
  "still_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "crew": zod.array(zod.object({
  "department": zod.string().optional(),
  "job": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "adult": zod.boolean().default(tvSeasonDetailsResponseEpisodesItemCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "guest_stars": zod.array(zod.object({
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional(),
  "adult": zod.boolean().default(tvSeasonDetailsResponseEpisodesItemGuestStarsItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional()
}).strict()).optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "id": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "season_number": zod.number().optional(),
  "vote_average": zod.number().optional()
}).strict()


/**
 * Query the details of a TV episode.
 * @summary Details
 */
export const tvEpisodeDetailsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeDetailsQueryLanguageDefault = "en-US";

export const tvEpisodeDetailsQueryParams = zod.object({
  "append_to_response": zod.coerce.string().optional().describe('comma separated list of endpoints within this namespace, 20 items max'),
  "language": zod.coerce.string().default(tvEpisodeDetailsQueryLanguageDefault)
}).strict()

export const tvEpisodeDetailsResponseCrewItemAdultDefault = true;export const tvEpisodeDetailsResponseCrewItemGenderDefault = 0;export const tvEpisodeDetailsResponseCrewItemIdDefault = 0;export const tvEpisodeDetailsResponseCrewItemPopularityDefault = 0;export const tvEpisodeDetailsResponseEpisodeNumberDefault = 0;export const tvEpisodeDetailsResponseGuestStarsItemOrderDefault = 0;export const tvEpisodeDetailsResponseGuestStarsItemAdultDefault = true;export const tvEpisodeDetailsResponseGuestStarsItemGenderDefault = 0;export const tvEpisodeDetailsResponseGuestStarsItemIdDefault = 0;export const tvEpisodeDetailsResponseGuestStarsItemPopularityDefault = 0;export const tvEpisodeDetailsResponseIdDefault = 0;export const tvEpisodeDetailsResponseRuntimeDefault = 0;export const tvEpisodeDetailsResponseSeasonNumberDefault = 0;export const tvEpisodeDetailsResponseVoteAverageDefault = 0;export const tvEpisodeDetailsResponseVoteCountDefault = 0;

export const tvEpisodeDetailsResponse = zod.object({
  "air_date": zod.string().optional(),
  "crew": zod.array(zod.object({
  "department": zod.string().optional(),
  "job": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "adult": zod.boolean().default(tvEpisodeDetailsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "episode_number": zod.number().optional(),
  "guest_stars": zod.array(zod.object({
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional(),
  "adult": zod.boolean().default(tvEpisodeDetailsResponseGuestStarsItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "id": zod.number().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.number().optional(),
  "season_number": zod.number().optional(),
  "still_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()


/**
 * Find TV shows using over 30 filters and sort options.
 * @summary TV
 */
export const discoverTvQueryIncludeAdultDefault = false;export const discoverTvQueryIncludeNullFirstAirDatesDefault = false;export const discoverTvQueryLanguageDefault = "en-US";export const discoverTvQueryPageDefault = 1;export const discoverTvQuerySortByDefault = "popularity.desc";

export const discoverTvQueryParams = zod.object({
  "air_date.gte": zod.coerce.string().date().optional(),
  "air_date.lte": zod.coerce.string().date().optional(),
  "first_air_date_year": zod.coerce.number().optional(),
  "first_air_date.gte": zod.coerce.string().date().optional(),
  "first_air_date.lte": zod.coerce.string().date().optional(),
  "include_adult": zod.coerce.boolean().optional(),
  "include_null_first_air_dates": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(discoverTvQueryLanguageDefault),
  "page": zod.coerce.number().default(discoverTvQueryPageDefault),
  "screened_theatrically": zod.coerce.boolean().optional(),
  "sort_by": zod.enum(['first_air_date.asc', 'first_air_date.desc', 'name.asc', 'name.desc', 'original_name.asc', 'original_name.desc', 'popularity.asc', 'popularity.desc', 'vote_average.asc', 'vote_average.desc', 'vote_count.asc', 'vote_count.desc']).default(discoverTvQuerySortByDefault),
  "timezone": zod.coerce.string().optional(),
  "vote_average.gte": zod.coerce.number().optional(),
  "vote_average.lte": zod.coerce.number().optional(),
  "vote_count.gte": zod.coerce.number().optional(),
  "vote_count.lte": zod.coerce.number().optional(),
  "watch_region": zod.coerce.string().optional().describe('use in conjunction with `with_watch_monetization_types ` or `with_watch_providers `'),
  "with_companies": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_genres": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_keywords": zod.coerce.string().optional().describe('can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_networks": zod.coerce.number().optional(),
  "with_origin_country": zod.coerce.string().optional(),
  "with_original_language": zod.coerce.string().optional(),
  "with_runtime.gte": zod.coerce.number().optional(),
  "with_runtime.lte": zod.coerce.number().optional(),
  "with_status": zod.coerce.string().optional().describe('possible values are: [0, 1, 2, 3, 4, 5], can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_watch_monetization_types": zod.coerce.string().optional().describe('possible values are: [flatrate, free, ads, rent, buy] use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query'),
  "with_watch_providers": zod.coerce.string().optional().describe('use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query'),
  "without_companies": zod.coerce.string().optional(),
  "without_genres": zod.coerce.string().optional(),
  "without_keywords": zod.coerce.string().optional(),
  "without_watch_providers": zod.coerce.string().optional(),
  "with_type": zod.coerce.string().optional().describe('possible values are: [0, 1, 2, 3, 4, 5, 6], can be a comma (`AND`) or pipe (`OR`) separated query')
}).strict()

export const discoverTvResponsePageDefault = 0;export const discoverTvResponseResultsItemGenreIdsItemDefault = 0;export const discoverTvResponseResultsItemIdDefault = 0;export const discoverTvResponseResultsItemPopularityDefault = 0;export const discoverTvResponseResultsItemVoteAverageDefault = 0;export const discoverTvResponseResultsItemVoteCountDefault = 0;export const discoverTvResponseTotalPagesDefault = 0;export const discoverTvResponseTotalResultsDefault = 0;

export const discoverTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "backdrop_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the images that belong to a movie.
 * @summary Images
 */
export const movieImagesParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieImagesQueryParams = zod.object({
  "include_image_language": zod.coerce.string().optional().describe('specify a comma separated list of ISO-639-1 values to query, for example: `en,null`'),
  "language": zod.coerce.string().optional()
}).strict()

export const movieImagesResponseBackdropsItemAspectRatioDefault = 0;export const movieImagesResponseBackdropsItemHeightDefault = 0;export const movieImagesResponseBackdropsItemVoteAverageDefault = 0;export const movieImagesResponseBackdropsItemVoteCountDefault = 0;export const movieImagesResponseBackdropsItemWidthDefault = 0;export const movieImagesResponseIdDefault = 0;export const movieImagesResponseLogosItemAspectRatioDefault = 0;export const movieImagesResponseLogosItemHeightDefault = 0;export const movieImagesResponseLogosItemVoteAverageDefault = 0;export const movieImagesResponseLogosItemVoteCountDefault = 0;export const movieImagesResponseLogosItemWidthDefault = 0;export const movieImagesResponsePostersItemAspectRatioDefault = 0;export const movieImagesResponsePostersItemHeightDefault = 0;export const movieImagesResponsePostersItemVoteAverageDefault = 0;export const movieImagesResponsePostersItemVoteCountDefault = 0;export const movieImagesResponsePostersItemWidthDefault = 0;

export const movieImagesResponse = zod.object({
  "backdrops": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.any().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional(),
  "id": zod.number().optional(),
  "logos": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional(),
  "posters": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the images that belong to a TV series.
 * @summary Images
 */
export const tvSeriesImagesParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesImagesQueryParams = zod.object({
  "include_image_language": zod.coerce.string().optional().describe('specify a comma separated list of ISO-639-1 values to query, for example: `en,null`'),
  "language": zod.coerce.string().optional()
}).strict()

export const tvSeriesImagesResponseBackdropsItemAspectRatioDefault = 0;export const tvSeriesImagesResponseBackdropsItemHeightDefault = 0;export const tvSeriesImagesResponseBackdropsItemVoteAverageDefault = 0;export const tvSeriesImagesResponseBackdropsItemVoteCountDefault = 0;export const tvSeriesImagesResponseBackdropsItemWidthDefault = 0;export const tvSeriesImagesResponseIdDefault = 0;export const tvSeriesImagesResponseLogosItemAspectRatioDefault = 0;export const tvSeriesImagesResponseLogosItemHeightDefault = 0;export const tvSeriesImagesResponseLogosItemVoteAverageDefault = 0;export const tvSeriesImagesResponseLogosItemVoteCountDefault = 0;export const tvSeriesImagesResponseLogosItemWidthDefault = 0;export const tvSeriesImagesResponsePostersItemAspectRatioDefault = 0;export const tvSeriesImagesResponsePostersItemHeightDefault = 0;export const tvSeriesImagesResponsePostersItemVoteAverageDefault = 0;export const tvSeriesImagesResponsePostersItemVoteCountDefault = 0;export const tvSeriesImagesResponsePostersItemWidthDefault = 0;

export const tvSeriesImagesResponse = zod.object({
  "backdrops": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.any().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional(),
  "id": zod.number().optional(),
  "logos": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional(),
  "posters": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the images that belong to a TV season.
 * @summary Images
 */
export const tvSeasonImagesParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonImagesQueryParams = zod.object({
  "include_image_language": zod.coerce.string().optional().describe('specify a comma separated list of ISO-639-1 values to query, for example: `en,null`'),
  "language": zod.coerce.string().optional()
}).strict()

export const tvSeasonImagesResponseIdDefault = 0;export const tvSeasonImagesResponsePostersItemAspectRatioDefault = 0;export const tvSeasonImagesResponsePostersItemHeightDefault = 0;export const tvSeasonImagesResponsePostersItemVoteAverageDefault = 0;export const tvSeasonImagesResponsePostersItemVoteCountDefault = 0;export const tvSeasonImagesResponsePostersItemWidthDefault = 0;

export const tvSeasonImagesResponse = zod.object({
  "id": zod.number().optional(),
  "posters": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the images that belong to a TV episode.
 * @summary Images
 */
export const tvEpisodeImagesParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeImagesQueryParams = zod.object({
  "include_image_language": zod.coerce.string().optional().describe('specify a comma separated list of ISO-639-1 values to query, for example: `en,null`'),
  "language": zod.coerce.string().optional()
}).strict()

export const tvEpisodeImagesResponseIdDefault = 0;export const tvEpisodeImagesResponseStillsItemAspectRatioDefault = 0;export const tvEpisodeImagesResponseStillsItemHeightDefault = 0;export const tvEpisodeImagesResponseStillsItemVoteAverageDefault = 0;export const tvEpisodeImagesResponseStillsItemVoteCountDefault = 0;export const tvEpisodeImagesResponseStillsItemWidthDefault = 0;

export const tvEpisodeImagesResponse = zod.object({
  "id": zod.number().optional(),
  "stills": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.any().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the trending movies, TV shows and people.
 * @summary All
 */
export const trendingAllPathTimeWindowDefault = "day";

export const trendingAllParams = zod.object({
  "time_window": zod.enum(['day', 'week'])
}).strict()

export const trendingAllQueryLanguageDefault = "en-US";

export const trendingAllQueryParams = zod.object({
  "language": zod.coerce.string().default(trendingAllQueryLanguageDefault).describe('`ISO-639-1`-`ISO-3166-1` code')
}).strict()

export const trendingAllResponsePageDefault = 0;export const trendingAllResponseResultsItemAdultDefault = true;export const trendingAllResponseResultsItemIdDefault = 0;export const trendingAllResponseResultsItemGenreIdsItemDefault = 0;export const trendingAllResponseResultsItemPopularityDefault = 0;export const trendingAllResponseResultsItemVideoDefault = true;export const trendingAllResponseResultsItemVoteAverageDefault = 0;export const trendingAllResponseResultsItemVoteCountDefault = 0;export const trendingAllResponseTotalPagesDefault = 0;export const trendingAllResponseTotalResultsDefault = 0;

export const trendingAllResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(trendingAllResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(trendingAllResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the trending movies on TMDB.
 * @summary Movies
 */
export const trendingMoviesPathTimeWindowDefault = "day";

export const trendingMoviesParams = zod.object({
  "time_window": zod.enum(['day', 'week'])
}).strict()

export const trendingMoviesQueryLanguageDefault = "en-US";

export const trendingMoviesQueryParams = zod.object({
  "language": zod.coerce.string().default(trendingMoviesQueryLanguageDefault).describe('`ISO-639-1`-`ISO-3166-1` code')
}).strict()

export const trendingMoviesResponsePageDefault = 0;export const trendingMoviesResponseResultsItemAdultDefault = true;export const trendingMoviesResponseResultsItemIdDefault = 0;export const trendingMoviesResponseResultsItemGenreIdsItemDefault = 0;export const trendingMoviesResponseResultsItemPopularityDefault = 0;export const trendingMoviesResponseResultsItemVideoDefault = true;export const trendingMoviesResponseResultsItemVoteAverageDefault = 0;export const trendingMoviesResponseResultsItemVoteCountDefault = 0;export const trendingMoviesResponseTotalPagesDefault = 0;export const trendingMoviesResponseTotalResultsDefault = 0;

export const trendingMoviesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(trendingMoviesResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(trendingMoviesResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the trending TV shows on TMDB.
 * @summary TV
 */
export const trendingTvPathTimeWindowDefault = "day";

export const trendingTvParams = zod.object({
  "time_window": zod.enum(['day', 'week'])
}).strict()

export const trendingTvQueryLanguageDefault = "en-US";

export const trendingTvQueryParams = zod.object({
  "language": zod.coerce.string().default(trendingTvQueryLanguageDefault).describe('`ISO-639-1`-`ISO-3166-1` code')
}).strict()

export const trendingTvResponsePageDefault = 0;export const trendingTvResponseResultsItemAdultDefault = true;export const trendingTvResponseResultsItemIdDefault = 0;export const trendingTvResponseResultsItemGenreIdsItemDefault = 0;export const trendingTvResponseResultsItemPopularityDefault = 0;export const trendingTvResponseResultsItemVoteAverageDefault = 0;export const trendingTvResponseResultsItemVoteCountDefault = 0;export const trendingTvResponseTotalPagesDefault = 0;export const trendingTvResponseTotalResultsDefault = 0;

export const trendingTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(trendingTvResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "first_air_date": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the rating, watchlist and favourite status of an account.
 * @summary Account States
 */
export const movieAccountStatesParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieAccountStatesQueryParams = zod.object({
  "session_id": zod.coerce.string().optional(),
  "guest_session_id": zod.coerce.string().optional()
}).strict()

export const movieAccountStatesResponseIdDefault = 0;export const movieAccountStatesResponseFavoriteDefault = true;export const movieAccountStatesResponseRatedValueDefault = 0;export const movieAccountStatesResponseWatchlistDefault = true;

export const movieAccountStatesResponse = zod.object({
  "id": zod.number().optional(),
  "favorite": zod.boolean().default(movieAccountStatesResponseFavoriteDefault),
  "rated": zod.object({
  "value": zod.number().optional()
}).strict().optional(),
  "watchlist": zod.boolean().default(movieAccountStatesResponseWatchlistDefault)
}).strict()


/**
 * Get the rating, watchlist and favourite status.
 * @summary Account States
 */
export const tvSeriesAccountStatesParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesAccountStatesQueryParams = zod.object({
  "session_id": zod.coerce.string().optional(),
  "guest_session_id": zod.coerce.string().optional()
}).strict()

export const tvSeriesAccountStatesResponseIdDefault = 0;export const tvSeriesAccountStatesResponseFavoriteDefault = true;export const tvSeriesAccountStatesResponseRatedValueDefault = 0;export const tvSeriesAccountStatesResponseWatchlistDefault = true;

export const tvSeriesAccountStatesResponse = zod.object({
  "id": zod.number().optional(),
  "favorite": zod.boolean().default(tvSeriesAccountStatesResponseFavoriteDefault),
  "rated": zod.object({
  "value": zod.number().optional()
}).strict().optional(),
  "watchlist": zod.boolean().default(tvSeriesAccountStatesResponseWatchlistDefault)
}).strict()


/**
 * Get the rating, watchlist and favourite status.
 * @summary Account States
 */
export const tvEpisodeAccountStatesParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeAccountStatesQueryParams = zod.object({
  "session_id": zod.coerce.string().optional(),
  "guest_session_id": zod.coerce.string().optional()
}).strict()

export const tvEpisodeAccountStatesResponseIdDefault = 0;export const tvEpisodeAccountStatesResponseFavoriteDefault = true;export const tvEpisodeAccountStatesResponseRatedValueDefault = 0;export const tvEpisodeAccountStatesResponseWatchlistDefault = true;

export const tvEpisodeAccountStatesResponse = zod.object({
  "id": zod.number().optional(),
  "favorite": zod.boolean().default(tvEpisodeAccountStatesResponseFavoriteDefault),
  "rated": zod.object({
  "value": zod.number().optional()
}).strict().optional(),
  "watchlist": zod.boolean().default(tvEpisodeAccountStatesResponseWatchlistDefault)
}).strict()


/**
 * Get the trending people on TMDB.
 * @summary People
 */
export const trendingPeoplePathTimeWindowDefault = "day";

export const trendingPeopleParams = zod.object({
  "time_window": zod.enum(['day', 'week'])
}).strict()

export const trendingPeopleQueryLanguageDefault = "en-US";

export const trendingPeopleQueryParams = zod.object({
  "language": zod.coerce.string().default(trendingPeopleQueryLanguageDefault).describe('`ISO-639-1`-`ISO-3166-1` code')
}).strict()

export const trendingPeopleResponsePageDefault = 0;export const trendingPeopleResponseResultsItemAdultDefault = true;export const trendingPeopleResponseResultsItemIdDefault = 0;export const trendingPeopleResponseResultsItemPopularityDefault = 0;export const trendingPeopleResponseResultsItemGenderDefault = 0;export const trendingPeopleResponseResultsItemKnownForItemAdultDefault = true;export const trendingPeopleResponseResultsItemKnownForItemIdDefault = 0;export const trendingPeopleResponseResultsItemKnownForItemGenreIdsItemDefault = 0;export const trendingPeopleResponseResultsItemKnownForItemPopularityDefault = 0;export const trendingPeopleResponseResultsItemKnownForItemVideoDefault = true;export const trendingPeopleResponseResultsItemKnownForItemVoteAverageDefault = 0;export const trendingPeopleResponseResultsItemKnownForItemVoteCountDefault = 0;export const trendingPeopleResponseTotalPagesDefault = 0;export const trendingPeopleResponseTotalResultsDefault = 0;

export const trendingPeopleResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(trendingPeopleResponseResultsItemAdultDefault),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "media_type": zod.string().optional(),
  "popularity": zod.number().optional(),
  "gender": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "profile_path": zod.string().optional(),
  "known_for": zod.array(zod.object({
  "adult": zod.boolean().default(trendingPeopleResponseResultsItemKnownForItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(trendingPeopleResponseResultsItemKnownForItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the alternative titles for a movie.
 * @summary Alternative Titles
 */
export const movieAlternativeTitlesParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieAlternativeTitlesQueryParams = zod.object({
  "country": zod.coerce.string().optional().describe('specify a ISO-3166-1 value to filter the results')
}).strict()

export const movieAlternativeTitlesResponseIdDefault = 0;

export const movieAlternativeTitlesResponse = zod.object({
  "id": zod.number().optional(),
  "titles": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "title": zod.string().optional(),
  "type": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the recent changes for a movie.
 * @summary Changes
 */
export const movieChangesParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieChangesQueryPageDefault = 1;

export const movieChangesQueryParams = zod.object({
  "end_date": zod.coerce.string().date().optional(),
  "page": zod.coerce.number().default(movieChangesQueryPageDefault),
  "start_date": zod.coerce.string().date().optional()
}).strict()

export const movieChangesResponse = zod.object({
  "changes": zod.array(zod.object({
  "key": zod.string().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().optional(),
  "action": zod.string().optional(),
  "time": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "value": zod.object({
  "poster": zod.object({
  "file_path": zod.string().optional()
}).strict().optional()
}).strict().optional()
}).strict()).optional()
}).strict()).optional()
}).strict()


/**
 * @summary Credits
 */
export const movieCreditsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieCreditsQueryLanguageDefault = "en-US";

export const movieCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(movieCreditsQueryLanguageDefault)
}).strict()

export const movieCreditsResponseIdDefault = 0;export const movieCreditsResponseCastItemAdultDefault = true;export const movieCreditsResponseCastItemGenderDefault = 0;export const movieCreditsResponseCastItemIdDefault = 0;export const movieCreditsResponseCastItemPopularityDefault = 0;export const movieCreditsResponseCastItemCastIdDefault = 0;export const movieCreditsResponseCastItemOrderDefault = 0;export const movieCreditsResponseCrewItemAdultDefault = true;export const movieCreditsResponseCrewItemGenderDefault = 0;export const movieCreditsResponseCrewItemIdDefault = 0;export const movieCreditsResponseCrewItemPopularityDefault = 0;

export const movieCreditsResponse = zod.object({
  "id": zod.number().optional(),
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(movieCreditsResponseCastItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "cast_id": zod.number().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(movieCreditsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "department": zod.string().optional(),
  "job": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * @summary External IDs
 */
export const movieExternalIdsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieExternalIdsResponseIdDefault = 0;

export const movieExternalIdsResponse = zod.object({
  "id": zod.number().optional(),
  "imdb_id": zod.string().optional(),
  "wikidata_id": zod.any().optional(),
  "facebook_id": zod.string().optional(),
  "instagram_id": zod.any().optional(),
  "twitter_id": zod.any().optional()
}).strict()


/**
 * @summary Keywords
 */
export const movieKeywordsParams = zod.object({
  "movie_id": zod.string()
}).strict()

export const movieKeywordsResponseIdDefault = 0;export const movieKeywordsResponseKeywordsItemIdDefault = 0;

export const movieKeywordsResponse = zod.object({
  "id": zod.number().optional(),
  "keywords": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the lists that a movie has been added to.
 * @summary Lists
 */
export const movieListsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieListsQueryLanguageDefault = "en-US";export const movieListsQueryPageDefault = 1;

export const movieListsQueryParams = zod.object({
  "language": zod.coerce.string().default(movieListsQueryLanguageDefault),
  "page": zod.coerce.number().default(movieListsQueryPageDefault)
}).strict()

export const movieListsResponseIdDefault = 0;export const movieListsResponsePageDefault = 0;export const movieListsResponseResultsItemFavoriteCountDefault = 0;export const movieListsResponseResultsItemIdDefault = 0;export const movieListsResponseResultsItemItemCountDefault = 0;export const movieListsResponseTotalPagesDefault = 0;export const movieListsResponseTotalResultsDefault = 0;

export const movieListsResponse = zod.object({
  "id": zod.number().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "description": zod.string().optional(),
  "favorite_count": zod.number().optional(),
  "id": zod.number().optional(),
  "item_count": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "list_type": zod.string().optional(),
  "name": zod.string().optional(),
  "poster_path": zod.any().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * @summary Recommendations
 */
export const movieRecommendationsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieRecommendationsQueryLanguageDefault = "en-US";export const movieRecommendationsQueryPageDefault = 1;

export const movieRecommendationsQueryParams = zod.object({
  "language": zod.coerce.string().default(movieRecommendationsQueryLanguageDefault),
  "page": zod.coerce.number().default(movieRecommendationsQueryPageDefault)
}).strict()

export const movieRecommendationsResponse = zod.object({

}).strict()


/**
 * Get the release dates and certifications for a movie.
 * @summary Release Dates
 */
export const movieReleaseDatesParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieReleaseDatesResponseIdDefault = 0;export const movieReleaseDatesResponseResultsItemReleaseDatesItemTypeDefault = 0;

export const movieReleaseDatesResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "release_dates": zod.array(zod.object({
  "certification": zod.string().optional(),
  "descriptors": zod.array(zod.unknown()).optional(),
  "iso_639_1": zod.string().optional(),
  "note": zod.string().optional(),
  "release_date": zod.string().optional(),
  "type": zod.number().optional()
}).strict()).optional()
}).strict()).optional()
}).strict()


/**
 * Get the user reviews for a movie.
 * @summary Reviews
 */
export const movieReviewsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieReviewsQueryLanguageDefault = "en-US";export const movieReviewsQueryPageDefault = 1;

export const movieReviewsQueryParams = zod.object({
  "language": zod.coerce.string().default(movieReviewsQueryLanguageDefault),
  "page": zod.coerce.number().default(movieReviewsQueryPageDefault)
}).strict()

export const movieReviewsResponseIdDefault = 0;export const movieReviewsResponsePageDefault = 0;export const movieReviewsResponseTotalPagesDefault = 0;export const movieReviewsResponseTotalResultsDefault = 0;

export const movieReviewsResponse = zod.object({
  "id": zod.number().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "author": zod.string().optional(),
  "author_details": zod.object({
  "name": zod.string().optional(),
  "username": zod.string().optional(),
  "avatar_path": zod.string().optional(),
  "rating": zod.any().optional()
}).strict().optional(),
  "content": zod.string().optional(),
  "created_at": zod.string().optional(),
  "id": zod.string().optional(),
  "updated_at": zod.string().optional(),
  "url": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the similar movies based on genres and keywords.
 * @summary Similar
 */
export const movieSimilarParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieSimilarQueryLanguageDefault = "en-US";export const movieSimilarQueryPageDefault = 1;

export const movieSimilarQueryParams = zod.object({
  "language": zod.coerce.string().default(movieSimilarQueryLanguageDefault),
  "page": zod.coerce.number().default(movieSimilarQueryPageDefault)
}).strict()

export const movieSimilarResponsePageDefault = 0;export const movieSimilarResponseResultsItemAdultDefault = true;export const movieSimilarResponseResultsItemGenreIdsItemDefault = 0;export const movieSimilarResponseResultsItemIdDefault = 0;export const movieSimilarResponseResultsItemPopularityDefault = 0;export const movieSimilarResponseResultsItemVideoDefault = true;export const movieSimilarResponseResultsItemVoteAverageDefault = 0;export const movieSimilarResponseResultsItemVoteCountDefault = 0;export const movieSimilarResponseTotalPagesDefault = 0;export const movieSimilarResponseTotalResultsDefault = 0;

export const movieSimilarResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(movieSimilarResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(movieSimilarResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the translations for a movie.
 * @summary Translations
 */
export const movieTranslationsParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieTranslationsResponseIdDefault = 0;export const movieTranslationsResponseTranslationsItemDataRuntimeDefault = 0;

export const movieTranslationsResponse = zod.object({
  "id": zod.number().optional(),
  "translations": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "english_name": zod.string().optional(),
  "data": zod.object({
  "homepage": zod.string().optional(),
  "overview": zod.string().optional(),
  "runtime": zod.number().optional(),
  "tagline": zod.string().optional(),
  "title": zod.string().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * @summary Videos
 */
export const movieVideosParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieVideosQueryLanguageDefault = "en-US";

export const movieVideosQueryParams = zod.object({
  "language": zod.coerce.string().default(movieVideosQueryLanguageDefault)
}).strict()

export const movieVideosResponseIdDefault = 0;export const movieVideosResponseResultsItemSizeDefault = 0;export const movieVideosResponseResultsItemOfficialDefault = true;

export const movieVideosResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional(),
  "key": zod.string().optional(),
  "site": zod.string().optional(),
  "size": zod.number().optional(),
  "type": zod.string().optional(),
  "official": zod.boolean().default(movieVideosResponseResultsItemOfficialDefault),
  "published_at": zod.string().optional(),
  "id": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the list of streaming providers we have for a movie.
 * @summary Watch Providers
 */
export const movieWatchProvidersParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieWatchProvidersResponseIdDefault = 0;export const movieWatchProvidersResponseResultsAEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsAEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsAERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsAERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsAEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsAEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsALBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsALBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsARBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsARBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsARFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsARFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsARRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsARRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsATFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsATFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsATBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsATBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsATRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsATRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsAUFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsAUFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsAUBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsAUBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBABuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBABuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBAFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBAFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBBFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBBFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBGRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBGRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBGBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBGBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBGFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBGFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBHBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBHBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBOFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBOFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsBSFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsBSFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCARentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCARentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCABuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCABuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCAFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCAFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCHFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCHFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCHBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCHBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCHRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCHRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCLBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCLBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCLFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCLFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCLRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCLRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCOBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCOBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCOFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCOFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCORentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCORentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCVBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCVBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCVRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCVRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCZFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCZFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCZRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCZRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsCZBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsCZBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDKRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDKRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDKFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDKFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDKBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDKBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsDOFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsDOFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsECBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsECBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsECFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsECFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsECRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsECRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsEEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsEEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsEEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsEEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsEERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsEERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsEGRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsEGRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsEGBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsEGBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsESRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsESRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsESAdsItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsESAdsItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsESFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsESFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsESBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsESBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFIFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFIFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFIBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFIBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFIRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFIRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFJBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFJBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFRRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFRRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFRBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFRBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsFRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsFRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGBFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGBFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGBBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGBBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGBRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGBRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGFFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGFFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGIFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGIFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGRRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGRRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGRBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGRBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsGTFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsGTFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHKFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHKFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHNFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHNFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHRBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHRBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHRAdsItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHRAdsItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHUFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHUFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHUBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHUBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsHURentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsHURentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsIDFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsIDFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsIERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsIERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsIEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsIEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsIEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsIEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsILBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsILBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsILFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsILFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsINFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsINFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsINRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsINRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsINBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsINBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsIQFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsIQFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsISBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsISBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsISFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsISFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsITBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsITBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsITRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsITRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsITFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsITFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsJMFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsJMFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsJOFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsJOFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsJOBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsJOBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsJPFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsJPFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsJPRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsJPRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsJPBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsJPBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsKRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsKRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsKRBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsKRBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsKWBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsKWBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsKWFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsKWFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLBFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLBFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLBBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLBBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLIFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLIFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLTRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLTRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLTBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLTBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLTFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLTFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLVFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLVFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsLVBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsLVBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMDBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMDBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMDFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMDFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMKFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMKFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMKBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMKBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMTFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMTFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMTBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMTBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMTRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMTRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMUBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMUBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMURentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMURentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMXFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMXFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMYFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMYFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMZRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMZRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsMZBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsMZBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNLBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNLBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNLRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNLRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNLFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNLFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNORentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNORentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNOBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNOBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNOFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNOFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNZFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNZFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsNZBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsNZBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsOMBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsOMBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsOMRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsOMRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsOMFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsOMFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPAFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPAFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPHFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPHFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPKFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPKFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPLBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPLBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPLFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPLFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPLRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPLRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPSFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPSFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPTBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPTBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPTRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPTRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPTFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPTFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsPYFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsPYFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsQAFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsQAFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsQABuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsQABuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsROFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsROFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsRSFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsRSFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsRSBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsRSBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsRURentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsRURentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsRUBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsRUBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsRUFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsRUFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSAFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSAFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSARentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSARentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSABuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSABuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSGFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSGFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSIBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSIBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSIFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSIFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSKBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSKBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSKFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSKFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSKRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSKRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSMFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSMFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsSVFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsSVFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsTHFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsTHFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsTRRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsTRRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsTRFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsTRFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsTRBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsTRBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsTTFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsTTFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsTWFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsTWFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsUGRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsUGRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsUGBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsUGBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsUSRentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsUSRentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsUSFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsUSFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsUSBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsUSBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsUYFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsUYFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsVERentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsVERentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsVEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsVEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsVEBuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsVEBuyItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsYEFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsYEFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsZAFlatrateItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsZAFlatrateItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsZARentItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsZARentItemDisplayPriorityDefault = 0;export const movieWatchProvidersResponseResultsZABuyItemProviderIdDefault = 0;export const movieWatchProvidersResponseResultsZABuyItemDisplayPriorityDefault = 0;

export const movieWatchProvidersResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.object({
  "AE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AL": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AR": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BA": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BE": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BG": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BH": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CA": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CL": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CO": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CV": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DK": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EC": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EE": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EG": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ES": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "ads": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FJ": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FR": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GF": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HN": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HR": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "ads": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ID": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IE": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IL": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IN": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IQ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IS": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IT": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JM": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JP": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "KR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "KW": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LT": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LV": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MD": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MU": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MX": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MZ": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NL": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NO": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "OM": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PE": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PL": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PT": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "QA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RU": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SE": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SI": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SK": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SM": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SV": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TR": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TW": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "UG": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "US": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "UY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "VE": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "YE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ZA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional()
}).strict().optional()
}).strict()


/**
 * Rate a movie and save it to your rated list.
 * @summary Add Rating
 */
export const movieAddRatingParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieAddRatingQueryParams = zod.object({
  "guest_session_id": zod.coerce.string().optional(),
  "session_id": zod.coerce.string().optional()
}).strict()

export const movieAddRatingResponseStatusCodeDefault = 0;

export const movieAddRatingResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Delete a user rating.
 * @summary Delete Rating
 */
export const movieDeleteRatingParams = zod.object({
  "movie_id": zod.number()
}).strict()

export const movieDeleteRatingQueryParams = zod.object({
  "guest_session_id": zod.coerce.string().optional(),
  "session_id": zod.coerce.string().optional()
}).strict()

export const movieDeleteRatingResponseStatusCodeDefault = 0;

export const movieDeleteRatingResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * @summary Create Guest Session
 */
export const authenticationCreateGuestSessionResponseSuccessDefault = true;

export const authenticationCreateGuestSessionResponse = zod.object({
  "success": zod.boolean().default(authenticationCreateGuestSessionResponseSuccessDefault),
  "guest_session_id": zod.string().optional(),
  "expires_at": zod.string().optional()
}).strict()


/**
 * @summary Create Request Token
 */
export const authenticationCreateRequestTokenResponseSuccessDefault = true;

export const authenticationCreateRequestTokenResponse = zod.object({
  "success": zod.boolean().default(authenticationCreateRequestTokenResponseSuccessDefault),
  "expires_at": zod.string().optional(),
  "request_token": zod.string().optional()
}).strict()


/**
 * @summary Create Session
 */
export const authenticationCreateSessionResponseSuccessDefault = true;

export const authenticationCreateSessionResponse = zod.object({
  "success": zod.boolean().default(authenticationCreateSessionResponseSuccessDefault),
  "session_id": zod.string().optional()
}).strict()


/**
 * @summary Create Session (from v4 token)
 */
export const authenticationCreateSessionFromV4TokenResponseSuccessDefault = true;

export const authenticationCreateSessionFromV4TokenResponse = zod.object({
  "success": zod.boolean().default(authenticationCreateSessionFromV4TokenResponseSuccessDefault),
  "session_id": zod.string().optional()
}).strict()


/**
 * @summary Delete Session
 */
export const authenticationDeleteSessionResponseSuccessDefault = true;

export const authenticationDeleteSessionResponse = zod.object({
  "success": zod.boolean().default(authenticationDeleteSessionResponseSuccessDefault)
}).strict()


/**
 * Find data by external ID's.
 * @summary Find By ID
 */
export const findByIdParams = zod.object({
  "external_id": zod.string()
}).strict()

export const findByIdQueryParams = zod.object({
  "external_source": zod.enum(['', 'imdb_id', 'facebook_id', 'instagram_id', 'tvdb_id', 'tiktok_id', 'twitter_id', 'wikidata_id', 'youtube_id']),
  "language": zod.coerce.string().optional()
}).strict()

export const findByIdResponseMovieResultsItemAdultDefault = true;export const findByIdResponseMovieResultsItemIdDefault = 0;export const findByIdResponseMovieResultsItemGenreIdsItemDefault = 0;export const findByIdResponseMovieResultsItemPopularityDefault = 0;export const findByIdResponseMovieResultsItemVideoDefault = true;export const findByIdResponseMovieResultsItemVoteAverageDefault = 0;export const findByIdResponseMovieResultsItemVoteCountDefault = 0;

export const findByIdResponse = zod.object({
  "movie_results": zod.array(zod.object({
  "adult": zod.boolean().default(findByIdResponseMovieResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(findByIdResponseMovieResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "person_results": zod.array(zod.unknown()).optional(),
  "tv_results": zod.array(zod.unknown()).optional(),
  "tv_episode_results": zod.array(zod.unknown()).optional(),
  "tv_season_results": zod.array(zod.unknown()).optional()
}).strict()


/**
 * Query the top level details of a person.
 * @summary Details
 */
export const personDetailsParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personDetailsQueryLanguageDefault = "en-US";

export const personDetailsQueryParams = zod.object({
  "append_to_response": zod.coerce.string().optional().describe('comma separated list of endpoints within this namespace, 20 items max'),
  "language": zod.coerce.string().default(personDetailsQueryLanguageDefault)
}).strict()

export const personDetailsResponseAdultDefault = true;export const personDetailsResponseGenderDefault = 0;export const personDetailsResponseIdDefault = 0;export const personDetailsResponsePopularityDefault = 0;

export const personDetailsResponse = zod.object({
  "adult": zod.boolean().default(personDetailsResponseAdultDefault),
  "also_known_as": zod.array(zod.string()).optional(),
  "biography": zod.string().optional(),
  "birthday": zod.string().optional(),
  "deathday": zod.any().optional(),
  "gender": zod.number().optional(),
  "homepage": zod.any().optional(),
  "id": zod.number().optional(),
  "imdb_id": zod.string().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "place_of_birth": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()


/**
 * Get the recent changes for a person.
 * @summary Changes
 */
export const personChangesParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personChangesQueryPageDefault = 1;

export const personChangesQueryParams = zod.object({
  "end_date": zod.coerce.string().date().optional(),
  "page": zod.coerce.number().default(personChangesQueryPageDefault),
  "start_date": zod.coerce.string().date().optional()
}).strict()

export const personChangesResponse = zod.object({
  "changes": zod.array(zod.object({
  "key": zod.string().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().optional(),
  "action": zod.string().optional(),
  "time": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "value": zod.string().optional()
}).strict()).optional()
}).strict()).optional()
}).strict()


/**
 * Get the recent changes for a TV show.
 * @summary Changes
 */
export const tvSeriesChangesParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesChangesQueryPageDefault = 1;

export const tvSeriesChangesQueryParams = zod.object({
  "end_date": zod.coerce.string().optional(),
  "page": zod.coerce.number().default(tvSeriesChangesQueryPageDefault),
  "start_date": zod.coerce.string().optional()
}).strict()

export const tvSeriesChangesResponse = zod.object({
  "changes": zod.array(zod.object({
  "key": zod.string().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().optional(),
  "action": zod.string().optional(),
  "time": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "value": zod.object({
  "poster": zod.object({
  "file_path": zod.string().optional(),
  "iso_639_1": zod.string().optional()
}).strict().optional()
}).strict().optional(),
  "original_value": zod.object({
  "poster": zod.object({
  "file_path": zod.string().optional(),
  "iso_639_1": zod.string().optional()
}).strict().optional()
}).strict().optional()
}).strict()).optional()
}).strict()).optional()
}).strict()


/**
 * Get the profile images that belong to a person.
 * @summary Images
 */
export const personImagesParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personImagesResponseIdDefault = 0;export const personImagesResponseProfilesItemAspectRatioDefault = 0;export const personImagesResponseProfilesItemHeightDefault = 0;export const personImagesResponseProfilesItemVoteAverageDefault = 0;export const personImagesResponseProfilesItemVoteCountDefault = 0;export const personImagesResponseProfilesItemWidthDefault = 0;

export const personImagesResponse = zod.object({
  "id": zod.number().optional(),
  "profiles": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.any().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the movie credits for a person.
 * @summary Movie Credits
 */
export const personMovieCreditsParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personMovieCreditsQueryLanguageDefault = "en-US";

export const personMovieCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(personMovieCreditsQueryLanguageDefault)
}).strict()

export const personMovieCreditsResponseCastItemAdultDefault = true;export const personMovieCreditsResponseCastItemGenreIdsItemDefault = 0;export const personMovieCreditsResponseCastItemIdDefault = 0;export const personMovieCreditsResponseCastItemPopularityDefault = 0;export const personMovieCreditsResponseCastItemVideoDefault = true;export const personMovieCreditsResponseCastItemVoteAverageDefault = 0;export const personMovieCreditsResponseCastItemVoteCountDefault = 0;export const personMovieCreditsResponseCastItemOrderDefault = 0;export const personMovieCreditsResponseCrewItemAdultDefault = true;export const personMovieCreditsResponseCrewItemGenreIdsItemDefault = 0;export const personMovieCreditsResponseCrewItemIdDefault = 0;export const personMovieCreditsResponseCrewItemPopularityDefault = 0;export const personMovieCreditsResponseCrewItemVideoDefault = true;export const personMovieCreditsResponseCrewItemVoteAverageDefault = 0;export const personMovieCreditsResponseCrewItemVoteCountDefault = 0;export const personMovieCreditsResponseIdDefault = 0;

export const personMovieCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(personMovieCreditsResponseCastItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(personMovieCreditsResponseCastItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(personMovieCreditsResponseCrewItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(personMovieCreditsResponseCrewItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "credit_id": zod.string().optional(),
  "department": zod.string().optional(),
  "job": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the TV credits that belong to a person.
 * @summary TV Credits
 */
export const personTvCreditsParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personTvCreditsQueryLanguageDefault = "en-US";

export const personTvCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(personTvCreditsQueryLanguageDefault)
}).strict()

export const personTvCreditsResponseCastItemAdultDefault = true;export const personTvCreditsResponseCastItemGenreIdsItemDefault = 0;export const personTvCreditsResponseCastItemIdDefault = 0;export const personTvCreditsResponseCastItemPopularityDefault = 0;export const personTvCreditsResponseCastItemVoteAverageDefault = 0;export const personTvCreditsResponseCastItemVoteCountDefault = 0;export const personTvCreditsResponseCastItemEpisodeCountDefault = 0;export const personTvCreditsResponseCrewItemAdultDefault = true;export const personTvCreditsResponseCrewItemGenreIdsItemDefault = 0;export const personTvCreditsResponseCrewItemIdDefault = 0;export const personTvCreditsResponseCrewItemPopularityDefault = 0;export const personTvCreditsResponseCrewItemVoteAverageDefault = 0;export const personTvCreditsResponseCrewItemVoteCountDefault = 0;export const personTvCreditsResponseCrewItemEpisodeCountDefault = 0;export const personTvCreditsResponseIdDefault = 0;

export const personTvCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(personTvCreditsResponseCastItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "episode_count": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(personTvCreditsResponseCrewItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "credit_id": zod.string().optional(),
  "department": zod.string().optional(),
  "episode_count": zod.number().optional(),
  "job": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the combined movie and TV credits that belong to a person.
 * @summary Combined Credits
 */
export const personCombinedCreditsParams = zod.object({
  "person_id": zod.string()
}).strict()

export const personCombinedCreditsQueryLanguageDefault = "en-US";

export const personCombinedCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(personCombinedCreditsQueryLanguageDefault)
}).strict()

export const personCombinedCreditsResponseCastItemAdultDefault = true;export const personCombinedCreditsResponseCastItemGenreIdsItemDefault = 0;export const personCombinedCreditsResponseCastItemIdDefault = 0;export const personCombinedCreditsResponseCastItemPopularityDefault = 0;export const personCombinedCreditsResponseCastItemVideoDefault = true;export const personCombinedCreditsResponseCastItemVoteAverageDefault = 0;export const personCombinedCreditsResponseCastItemVoteCountDefault = 0;export const personCombinedCreditsResponseCastItemOrderDefault = 0;export const personCombinedCreditsResponseCrewItemAdultDefault = true;export const personCombinedCreditsResponseCrewItemGenreIdsItemDefault = 0;export const personCombinedCreditsResponseCrewItemIdDefault = 0;export const personCombinedCreditsResponseCrewItemPopularityDefault = 0;export const personCombinedCreditsResponseCrewItemVideoDefault = true;export const personCombinedCreditsResponseCrewItemVoteAverageDefault = 0;export const personCombinedCreditsResponseCrewItemVoteCountDefault = 0;export const personCombinedCreditsResponseIdDefault = 0;

export const personCombinedCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(personCombinedCreditsResponseCastItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(personCombinedCreditsResponseCastItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional(),
  "media_type": zod.string().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(personCombinedCreditsResponseCrewItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(personCombinedCreditsResponseCrewItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "credit_id": zod.string().optional(),
  "department": zod.string().optional(),
  "job": zod.string().optional(),
  "media_type": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the external ID's that belong to a person.
 * @summary External IDs
 */
export const personExternalIdsParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personExternalIdsResponseIdDefault = 0;export const personExternalIdsResponseTvrageIdDefault = 0;

export const personExternalIdsResponse = zod.object({
  "id": zod.number().optional(),
  "freebase_mid": zod.string().optional(),
  "freebase_id": zod.string().optional(),
  "imdb_id": zod.string().optional(),
  "tvrage_id": zod.number().optional(),
  "wikidata_id": zod.string().optional(),
  "facebook_id": zod.string().optional(),
  "instagram_id": zod.string().optional(),
  "tiktok_id": zod.string().optional(),
  "twitter_id": zod.string().optional(),
  "youtube_id": zod.any().optional()
}).strict()


/**
 * Get the tagged images for a person.
 * @summary Tagged Images
 */
export const personTaggedImagesParams = zod.object({
  "person_id": zod.number()
}).strict()

export const personTaggedImagesQueryPageDefault = 1;

export const personTaggedImagesQueryParams = zod.object({
  "page": zod.coerce.number().default(personTaggedImagesQueryPageDefault)
}).strict()

export const personTaggedImagesResponseIdDefault = 0;export const personTaggedImagesResponsePageDefault = 0;export const personTaggedImagesResponseResultsItemAspectRatioDefault = 0;export const personTaggedImagesResponseResultsItemHeightDefault = 0;export const personTaggedImagesResponseResultsItemVoteAverageDefault = 0;export const personTaggedImagesResponseResultsItemVoteCountDefault = 0;export const personTaggedImagesResponseResultsItemWidthDefault = 0;export const personTaggedImagesResponseResultsItemMediaAdultDefault = true;export const personTaggedImagesResponseResultsItemMediaIdDefault = 0;export const personTaggedImagesResponseResultsItemMediaGenreIdsItemDefault = 0;export const personTaggedImagesResponseResultsItemMediaPopularityDefault = 0;export const personTaggedImagesResponseResultsItemMediaVideoDefault = true;export const personTaggedImagesResponseResultsItemMediaVoteAverageDefault = 0;export const personTaggedImagesResponseResultsItemMediaVoteCountDefault = 0;export const personTaggedImagesResponseTotalPagesDefault = 0;export const personTaggedImagesResponseTotalResultsDefault = 0;

export const personTaggedImagesResponse = zod.object({
  "id": zod.number().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "file_path": zod.string().optional(),
  "height": zod.number().optional(),
  "id": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional(),
  "image_type": zod.string().optional(),
  "media": zod.object({
  "adult": zod.boolean().default(personTaggedImagesResponseResultsItemMediaAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(personTaggedImagesResponseResultsItemMediaVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict().optional(),
  "media_type": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the translations that belong to a person.
 * @summary Translations
 */
export const translationsParams = zod.object({
  "person_id": zod.number()
}).strict()

export const translationsResponseIdDefault = 0;

export const translationsResponse = zod.object({
  "id": zod.number().optional(),
  "translations": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "english_name": zod.string().optional(),
  "data": zod.object({
  "biography": zod.string().optional(),
  "name": zod.string().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * Get a list of people ordered by popularity.
 * @summary Popular
 */
export const personPopularListQueryLanguageDefault = "en-US";export const personPopularListQueryPageDefault = 1;

export const personPopularListQueryParams = zod.object({
  "language": zod.coerce.string().default(personPopularListQueryLanguageDefault),
  "page": zod.coerce.number().default(personPopularListQueryPageDefault)
}).strict()

export const personPopularListResponsePageDefault = 0;export const personPopularListResponseResultsItemAdultDefault = true;export const personPopularListResponseResultsItemGenderDefault = 0;export const personPopularListResponseResultsItemIdDefault = 0;export const personPopularListResponseResultsItemKnownForItemAdultDefault = true;export const personPopularListResponseResultsItemKnownForItemGenreIdsItemDefault = 0;export const personPopularListResponseResultsItemKnownForItemIdDefault = 0;export const personPopularListResponseResultsItemKnownForItemVideoDefault = true;export const personPopularListResponseResultsItemKnownForItemVoteAverageDefault = 0;export const personPopularListResponseResultsItemKnownForItemVoteCountDefault = 0;export const personPopularListResponseResultsItemPopularityDefault = 0;export const personPopularListResponseTotalPagesDefault = 0;export const personPopularListResponseTotalResultsDefault = 0;

export const personPopularListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(personPopularListResponseResultsItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for": zod.array(zod.object({
  "adult": zod.boolean().default(personPopularListResponseResultsItemKnownForItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "media_type": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(personPopularListResponseResultsItemKnownForItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of movies ordered by popularity.
 * @summary Popular
 */
export const moviePopularListQueryLanguageDefault = "en-US";export const moviePopularListQueryPageDefault = 1;

export const moviePopularListQueryParams = zod.object({
  "language": zod.coerce.string().default(moviePopularListQueryLanguageDefault),
  "page": zod.coerce.number().default(moviePopularListQueryPageDefault),
  "region": zod.coerce.string().optional().describe('ISO-3166-1 code')
}).strict()

export const moviePopularListResponsePageDefault = 0;export const moviePopularListResponseResultsItemAdultDefault = true;export const moviePopularListResponseResultsItemGenreIdsItemDefault = 0;export const moviePopularListResponseResultsItemIdDefault = 0;export const moviePopularListResponseResultsItemPopularityDefault = 0;export const moviePopularListResponseResultsItemVideoDefault = true;export const moviePopularListResponseResultsItemVoteAverageDefault = 0;export const moviePopularListResponseResultsItemVoteCountDefault = 0;export const moviePopularListResponseTotalPagesDefault = 0;export const moviePopularListResponseTotalResultsDefault = 0;

export const moviePopularListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(moviePopularListResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(moviePopularListResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of movies ordered by rating.
 * @summary Top Rated
 */
export const movieTopRatedListQueryLanguageDefault = "en-US";export const movieTopRatedListQueryPageDefault = 1;

export const movieTopRatedListQueryParams = zod.object({
  "language": zod.coerce.string().default(movieTopRatedListQueryLanguageDefault),
  "page": zod.coerce.number().default(movieTopRatedListQueryPageDefault),
  "region": zod.coerce.string().optional().describe('ISO-3166-1 code')
}).strict()

export const movieTopRatedListResponsePageDefault = 0;export const movieTopRatedListResponseResultsItemAdultDefault = true;export const movieTopRatedListResponseResultsItemGenreIdsItemDefault = 0;export const movieTopRatedListResponseResultsItemIdDefault = 0;export const movieTopRatedListResponseResultsItemPopularityDefault = 0;export const movieTopRatedListResponseResultsItemVideoDefault = true;export const movieTopRatedListResponseResultsItemVoteAverageDefault = 0;export const movieTopRatedListResponseResultsItemVoteCountDefault = 0;export const movieTopRatedListResponseTotalPagesDefault = 0;export const movieTopRatedListResponseTotalResultsDefault = 0;

export const movieTopRatedListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(movieTopRatedListResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(movieTopRatedListResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of movies that are being released soon.
 * @summary Upcoming
 */
export const movieUpcomingListQueryLanguageDefault = "en-US";export const movieUpcomingListQueryPageDefault = 1;

export const movieUpcomingListQueryParams = zod.object({
  "language": zod.coerce.string().default(movieUpcomingListQueryLanguageDefault),
  "page": zod.coerce.number().default(movieUpcomingListQueryPageDefault),
  "region": zod.coerce.string().optional().describe('ISO-3166-1 code')
}).strict()

export const movieUpcomingListResponsePageDefault = 0;export const movieUpcomingListResponseResultsItemAdultDefault = true;export const movieUpcomingListResponseResultsItemGenreIdsItemDefault = 0;export const movieUpcomingListResponseResultsItemIdDefault = 0;export const movieUpcomingListResponseResultsItemPopularityDefault = 0;export const movieUpcomingListResponseResultsItemVideoDefault = true;export const movieUpcomingListResponseResultsItemVoteAverageDefault = 0;export const movieUpcomingListResponseResultsItemVoteCountDefault = 0;export const movieUpcomingListResponseTotalPagesDefault = 0;export const movieUpcomingListResponseTotalResultsDefault = 0;

export const movieUpcomingListResponse = zod.object({
  "dates": zod.object({
  "maximum": zod.string().optional(),
  "minimum": zod.string().optional()
}).strict().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(movieUpcomingListResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(movieUpcomingListResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of movies that are currently in theatres.
 * @summary Now Playing
 */
export const movieNowPlayingListQueryLanguageDefault = "en-US";export const movieNowPlayingListQueryPageDefault = 1;

export const movieNowPlayingListQueryParams = zod.object({
  "language": zod.coerce.string().default(movieNowPlayingListQueryLanguageDefault),
  "page": zod.coerce.number().default(movieNowPlayingListQueryPageDefault),
  "region": zod.coerce.string().optional().describe('ISO-3166-1 code')
}).strict()

export const movieNowPlayingListResponsePageDefault = 0;export const movieNowPlayingListResponseResultsItemAdultDefault = true;export const movieNowPlayingListResponseResultsItemGenreIdsItemDefault = 0;export const movieNowPlayingListResponseResultsItemIdDefault = 0;export const movieNowPlayingListResponseResultsItemPopularityDefault = 0;export const movieNowPlayingListResponseResultsItemVideoDefault = true;export const movieNowPlayingListResponseResultsItemVoteAverageDefault = 0;export const movieNowPlayingListResponseResultsItemVoteCountDefault = 0;export const movieNowPlayingListResponseTotalPagesDefault = 0;export const movieNowPlayingListResponseTotalResultsDefault = 0;

export const movieNowPlayingListResponse = zod.object({
  "dates": zod.object({
  "maximum": zod.string().optional(),
  "minimum": zod.string().optional()
}).strict().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(movieNowPlayingListResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(movieNowPlayingListResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of TV shows airing today.
 * @summary Airing Today
 */
export const tvSeriesAiringTodayListQueryLanguageDefault = "en-US";export const tvSeriesAiringTodayListQueryPageDefault = 1;

export const tvSeriesAiringTodayListQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesAiringTodayListQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesAiringTodayListQueryPageDefault),
  "timezone": zod.coerce.string().optional()
}).strict()

export const tvSeriesAiringTodayListResponsePageDefault = 0;export const tvSeriesAiringTodayListResponseResultsItemGenreIdsItemDefault = 0;export const tvSeriesAiringTodayListResponseResultsItemIdDefault = 0;export const tvSeriesAiringTodayListResponseResultsItemPopularityDefault = 0;export const tvSeriesAiringTodayListResponseResultsItemVoteAverageDefault = 0;export const tvSeriesAiringTodayListResponseResultsItemVoteCountDefault = 0;export const tvSeriesAiringTodayListResponseTotalPagesDefault = 0;export const tvSeriesAiringTodayListResponseTotalResultsDefault = 0;

export const tvSeriesAiringTodayListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "backdrop_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of TV shows that air in the next 7 days.
 * @summary On The Air
 */
export const tvSeriesOnTheAirListQueryLanguageDefault = "en-US";export const tvSeriesOnTheAirListQueryPageDefault = 1;

export const tvSeriesOnTheAirListQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesOnTheAirListQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesOnTheAirListQueryPageDefault),
  "timezone": zod.coerce.string().optional()
}).strict()

export const tvSeriesOnTheAirListResponsePageDefault = 0;export const tvSeriesOnTheAirListResponseResultsItemGenreIdsItemDefault = 0;export const tvSeriesOnTheAirListResponseResultsItemIdDefault = 0;export const tvSeriesOnTheAirListResponseResultsItemPopularityDefault = 0;export const tvSeriesOnTheAirListResponseResultsItemVoteAverageDefault = 0;export const tvSeriesOnTheAirListResponseResultsItemVoteCountDefault = 0;export const tvSeriesOnTheAirListResponseTotalPagesDefault = 0;export const tvSeriesOnTheAirListResponseTotalResultsDefault = 0;

export const tvSeriesOnTheAirListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "backdrop_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of TV shows ordered by popularity.
 * @summary Popular
 */
export const tvSeriesPopularListQueryLanguageDefault = "en-US";export const tvSeriesPopularListQueryPageDefault = 1;

export const tvSeriesPopularListQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesPopularListQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesPopularListQueryPageDefault)
}).strict()

export const tvSeriesPopularListResponsePageDefault = 0;export const tvSeriesPopularListResponseResultsItemGenreIdsItemDefault = 0;export const tvSeriesPopularListResponseResultsItemIdDefault = 0;export const tvSeriesPopularListResponseResultsItemPopularityDefault = 0;export const tvSeriesPopularListResponseResultsItemVoteAverageDefault = 0;export const tvSeriesPopularListResponseResultsItemVoteCountDefault = 0;export const tvSeriesPopularListResponseTotalPagesDefault = 0;export const tvSeriesPopularListResponseTotalResultsDefault = 0;

export const tvSeriesPopularListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "backdrop_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of TV shows ordered by rating.
 * @summary Top Rated
 */
export const tvSeriesTopRatedListQueryLanguageDefault = "en-US";export const tvSeriesTopRatedListQueryPageDefault = 1;

export const tvSeriesTopRatedListQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesTopRatedListQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesTopRatedListQueryPageDefault)
}).strict()

export const tvSeriesTopRatedListResponsePageDefault = 0;export const tvSeriesTopRatedListResponseResultsItemGenreIdsItemDefault = 0;export const tvSeriesTopRatedListResponseResultsItemIdDefault = 0;export const tvSeriesTopRatedListResponseResultsItemPopularityDefault = 0;export const tvSeriesTopRatedListResponseResultsItemVoteAverageDefault = 0;export const tvSeriesTopRatedListResponseResultsItemVoteCountDefault = 0;export const tvSeriesTopRatedListResponseTotalPagesDefault = 0;export const tvSeriesTopRatedListResponseTotalResultsDefault = 0;

export const tvSeriesTopRatedListResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "backdrop_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the newest movie ID.
 * @summary Latest
 */
export const movieLatestIdResponseAdultDefault = true;export const movieLatestIdResponseBudgetDefault = 0;export const movieLatestIdResponseIdDefault = 0;export const movieLatestIdResponsePopularityDefault = 0;export const movieLatestIdResponseRevenueDefault = 0;export const movieLatestIdResponseRuntimeDefault = 0;export const movieLatestIdResponseVideoDefault = true;export const movieLatestIdResponseVoteAverageDefault = 0;export const movieLatestIdResponseVoteCountDefault = 0;

export const movieLatestIdResponse = zod.object({
  "adult": zod.boolean().default(movieLatestIdResponseAdultDefault),
  "backdrop_path": zod.any().optional(),
  "belongs_to_collection": zod.any().optional(),
  "budget": zod.number().optional(),
  "genres": zod.array(zod.unknown()).optional(),
  "homepage": zod.string().optional(),
  "id": zod.number().optional(),
  "imdb_id": zod.any().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.any().optional(),
  "production_companies": zod.array(zod.unknown()).optional(),
  "production_countries": zod.array(zod.unknown()).optional(),
  "release_date": zod.string().optional(),
  "revenue": zod.number().optional(),
  "runtime": zod.number().optional(),
  "spoken_languages": zod.array(zod.unknown()).optional(),
  "status": zod.string().optional(),
  "tagline": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(movieLatestIdResponseVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()


/**
 * Get the newest TV show ID.
 * @summary Latest
 */
export const tvSeriesLatestIdResponseAdultDefault = true;export const tvSeriesLatestIdResponseIdDefault = 0;export const tvSeriesLatestIdResponseInProductionDefault = true;export const tvSeriesLatestIdResponseLastEpisodeToAirIdDefault = 0;export const tvSeriesLatestIdResponseLastEpisodeToAirVoteAverageDefault = 0;export const tvSeriesLatestIdResponseLastEpisodeToAirVoteCountDefault = 0;export const tvSeriesLatestIdResponseLastEpisodeToAirEpisodeNumberDefault = 0;export const tvSeriesLatestIdResponseLastEpisodeToAirSeasonNumberDefault = 0;export const tvSeriesLatestIdResponseLastEpisodeToAirShowIdDefault = 0;export const tvSeriesLatestIdResponseNumberOfEpisodesDefault = 0;export const tvSeriesLatestIdResponseNumberOfSeasonsDefault = 0;export const tvSeriesLatestIdResponsePopularityDefault = 0;export const tvSeriesLatestIdResponseSeasonsItemEpisodeCountDefault = 0;export const tvSeriesLatestIdResponseSeasonsItemIdDefault = 0;export const tvSeriesLatestIdResponseSeasonsItemSeasonNumberDefault = 0;export const tvSeriesLatestIdResponseVoteAverageDefault = 0;export const tvSeriesLatestIdResponseVoteCountDefault = 0;

export const tvSeriesLatestIdResponse = zod.object({
  "adult": zod.boolean().default(tvSeriesLatestIdResponseAdultDefault),
  "backdrop_path": zod.any().optional(),
  "created_by": zod.array(zod.unknown()).optional(),
  "episode_run_time": zod.array(zod.unknown()).optional(),
  "first_air_date": zod.string().optional(),
  "genres": zod.array(zod.unknown()).optional(),
  "homepage": zod.string().optional(),
  "id": zod.number().optional(),
  "in_production": zod.boolean().default(tvSeriesLatestIdResponseInProductionDefault),
  "languages": zod.array(zod.unknown()).optional(),
  "last_air_date": zod.string().optional(),
  "last_episode_to_air": zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "air_date": zod.string().optional(),
  "episode_number": zod.number().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.any().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional(),
  "still_path": zod.any().optional()
}).strict().optional(),
  "name": zod.string().optional(),
  "next_episode_to_air": zod.any().optional(),
  "networks": zod.array(zod.unknown()).optional(),
  "number_of_episodes": zod.number().optional(),
  "number_of_seasons": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.any().optional(),
  "production_companies": zod.array(zod.unknown()).optional(),
  "production_countries": zod.array(zod.unknown()).optional(),
  "seasons": zod.array(zod.object({
  "air_date": zod.any().optional(),
  "episode_count": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.any().optional(),
  "season_number": zod.number().optional()
}).strict()).optional(),
  "spoken_languages": zod.array(zod.unknown()).optional(),
  "status": zod.string().optional(),
  "tagline": zod.string().optional(),
  "type": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()


/**
 * Get the aggregate credits (cast and crew) that have been added to a TV show.
 * @summary Aggregate Credits
 */
export const tvSeriesAggregateCreditsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesAggregateCreditsQueryLanguageDefault = "en-US";

export const tvSeriesAggregateCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesAggregateCreditsQueryLanguageDefault)
}).strict()

export const tvSeriesAggregateCreditsResponseCastItemAdultDefault = true;export const tvSeriesAggregateCreditsResponseCastItemGenderDefault = 0;export const tvSeriesAggregateCreditsResponseCastItemIdDefault = 0;export const tvSeriesAggregateCreditsResponseCastItemPopularityDefault = 0;export const tvSeriesAggregateCreditsResponseCastItemRolesItemEpisodeCountDefault = 0;export const tvSeriesAggregateCreditsResponseCastItemTotalEpisodeCountDefault = 0;export const tvSeriesAggregateCreditsResponseCastItemOrderDefault = 0;export const tvSeriesAggregateCreditsResponseCrewItemAdultDefault = true;export const tvSeriesAggregateCreditsResponseCrewItemGenderDefault = 0;export const tvSeriesAggregateCreditsResponseCrewItemIdDefault = 0;export const tvSeriesAggregateCreditsResponseCrewItemPopularityDefault = 0;export const tvSeriesAggregateCreditsResponseCrewItemJobsItemEpisodeCountDefault = 0;export const tvSeriesAggregateCreditsResponseCrewItemTotalEpisodeCountDefault = 0;export const tvSeriesAggregateCreditsResponseIdDefault = 0;

export const tvSeriesAggregateCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeriesAggregateCreditsResponseCastItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "roles": zod.array(zod.object({
  "credit_id": zod.string().optional(),
  "character": zod.string().optional(),
  "episode_count": zod.number().optional()
}).strict()).optional(),
  "total_episode_count": zod.number().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeriesAggregateCreditsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "jobs": zod.array(zod.object({
  "credit_id": zod.string().optional(),
  "job": zod.string().optional(),
  "episode_count": zod.number().optional()
}).strict()).optional(),
  "department": zod.string().optional(),
  "total_episode_count": zod.number().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the alternative titles that have been added to a TV show.
 * @summary Alternative Titles
 */
export const tvSeriesAlternativeTitlesParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesAlternativeTitlesResponseIdDefault = 0;

export const tvSeriesAlternativeTitlesResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "title": zod.string().optional(),
  "type": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the content ratings that have been added to a TV show.
 * @summary Content Ratings
 */
export const tvSeriesContentRatingsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesContentRatingsResponseIdDefault = 0;

export const tvSeriesContentRatingsResponse = zod.object({
  "results": zod.array(zod.object({
  "descriptors": zod.array(zod.unknown()).optional(),
  "iso_3166_1": zod.string().optional(),
  "rating": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the latest season credits of a TV show.
 * @summary Credits
 */
export const tvSeriesCreditsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesCreditsQueryLanguageDefault = "en-US";

export const tvSeriesCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesCreditsQueryLanguageDefault)
}).strict()

export const tvSeriesCreditsResponseCastItemAdultDefault = true;export const tvSeriesCreditsResponseCastItemGenderDefault = 0;export const tvSeriesCreditsResponseCastItemIdDefault = 0;export const tvSeriesCreditsResponseCastItemPopularityDefault = 0;export const tvSeriesCreditsResponseCastItemOrderDefault = 0;export const tvSeriesCreditsResponseCrewItemAdultDefault = true;export const tvSeriesCreditsResponseCrewItemGenderDefault = 0;export const tvSeriesCreditsResponseCrewItemIdDefault = 0;export const tvSeriesCreditsResponseCrewItemPopularityDefault = 0;export const tvSeriesCreditsResponseIdDefault = 0;

export const tvSeriesCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeriesCreditsResponseCastItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeriesCreditsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "department": zod.string().optional(),
  "job": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the episode groups that have been added to a TV show.
 * @summary Episode Groups
 */
export const tvSeriesEpisodeGroupsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesEpisodeGroupsResponseResultsItemEpisodeCountDefault = 0;export const tvSeriesEpisodeGroupsResponseResultsItemGroupCountDefault = 0;export const tvSeriesEpisodeGroupsResponseResultsItemNetworkIdDefault = 0;export const tvSeriesEpisodeGroupsResponseResultsItemTypeDefault = 0;export const tvSeriesEpisodeGroupsResponseIdDefault = 0;

export const tvSeriesEpisodeGroupsResponse = zod.object({
  "results": zod.array(zod.object({
  "description": zod.string().optional(),
  "episode_count": zod.number().optional(),
  "group_count": zod.number().optional(),
  "id": zod.string().optional(),
  "name": zod.string().optional(),
  "network": zod.object({
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict().optional(),
  "type": zod.number().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get a list of external IDs that have been added to a TV show.
 * @summary External IDs
 */
export const tvSeriesExternalIdsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesExternalIdsResponseIdDefault = 0;export const tvSeriesExternalIdsResponseTvdbIdDefault = 0;export const tvSeriesExternalIdsResponseTvrageIdDefault = 0;

export const tvSeriesExternalIdsResponse = zod.object({
  "id": zod.number().optional(),
  "imdb_id": zod.string().optional(),
  "freebase_mid": zod.string().optional(),
  "freebase_id": zod.string().optional(),
  "tvdb_id": zod.number().optional(),
  "tvrage_id": zod.number().optional(),
  "wikidata_id": zod.string().optional(),
  "facebook_id": zod.string().optional(),
  "instagram_id": zod.string().optional(),
  "twitter_id": zod.string().optional()
}).strict()


/**
 * Get a list of keywords that have been added to a TV show.
 * @summary Keywords
 */
export const tvSeriesKeywordsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesKeywordsResponseIdDefault = 0;export const tvSeriesKeywordsResponseResultsItemIdDefault = 0;

export const tvSeriesKeywordsResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "name": zod.string().optional(),
  "id": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * @summary Recommendations
 */
export const tvSeriesRecommendationsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesRecommendationsQueryLanguageDefault = "en-US";export const tvSeriesRecommendationsQueryPageDefault = 1;

export const tvSeriesRecommendationsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesRecommendationsQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesRecommendationsQueryPageDefault)
}).strict()

export const tvSeriesRecommendationsResponsePageDefault = 0;export const tvSeriesRecommendationsResponseResultsItemAdultDefault = true;export const tvSeriesRecommendationsResponseResultsItemIdDefault = 0;export const tvSeriesRecommendationsResponseResultsItemGenreIdsItemDefault = 0;export const tvSeriesRecommendationsResponseResultsItemPopularityDefault = 0;export const tvSeriesRecommendationsResponseResultsItemVoteAverageDefault = 0;export const tvSeriesRecommendationsResponseResultsItemVoteCountDefault = 0;export const tvSeriesRecommendationsResponseTotalPagesDefault = 0;export const tvSeriesRecommendationsResponseTotalResultsDefault = 0;

export const tvSeriesRecommendationsResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeriesRecommendationsResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "first_air_date": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the reviews that have been added to a TV show.
 * @summary Reviews
 */
export const tvSeriesReviewsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesReviewsQueryLanguageDefault = "en-US";export const tvSeriesReviewsQueryPageDefault = 1;

export const tvSeriesReviewsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesReviewsQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesReviewsQueryPageDefault)
}).strict()

export const tvSeriesReviewsResponseIdDefault = 0;export const tvSeriesReviewsResponsePageDefault = 0;export const tvSeriesReviewsResponseResultsItemAuthorDetailsRatingDefault = 0;export const tvSeriesReviewsResponseTotalPagesDefault = 0;export const tvSeriesReviewsResponseTotalResultsDefault = 0;

export const tvSeriesReviewsResponse = zod.object({
  "id": zod.number().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "author": zod.string().optional(),
  "author_details": zod.object({
  "name": zod.string().optional(),
  "username": zod.string().optional(),
  "avatar_path": zod.string().optional(),
  "rating": zod.number().optional()
}).strict().optional(),
  "content": zod.string().optional(),
  "created_at": zod.string().optional(),
  "id": zod.string().optional(),
  "updated_at": zod.string().optional(),
  "url": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the seasons and episodes that have screened theatrically.
 * @summary Screened Theatrically
 */
export const tvSeriesScreenedTheatricallyParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesScreenedTheatricallyResponseIdDefault = 0;export const tvSeriesScreenedTheatricallyResponseResultsItemIdDefault = 0;export const tvSeriesScreenedTheatricallyResponseResultsItemEpisodeNumberDefault = 0;export const tvSeriesScreenedTheatricallyResponseResultsItemSeasonNumberDefault = 0;

export const tvSeriesScreenedTheatricallyResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "episode_number": zod.number().optional(),
  "season_number": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the similar TV shows.
 * @summary Similar
 */
export const tvSeriesSimilarParams = zod.object({
  "series_id": zod.string()
}).strict()

export const tvSeriesSimilarQueryLanguageDefault = "en-US";export const tvSeriesSimilarQueryPageDefault = 1;

export const tvSeriesSimilarQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeriesSimilarQueryLanguageDefault),
  "page": zod.coerce.number().default(tvSeriesSimilarQueryPageDefault)
}).strict()

export const tvSeriesSimilarResponsePageDefault = 0;export const tvSeriesSimilarResponseResultsItemAdultDefault = true;export const tvSeriesSimilarResponseResultsItemGenreIdsItemDefault = 0;export const tvSeriesSimilarResponseResultsItemIdDefault = 0;export const tvSeriesSimilarResponseResultsItemPopularityDefault = 0;export const tvSeriesSimilarResponseResultsItemVoteAverageDefault = 0;export const tvSeriesSimilarResponseResultsItemVoteCountDefault = 0;export const tvSeriesSimilarResponseTotalPagesDefault = 0;export const tvSeriesSimilarResponseTotalResultsDefault = 0;

export const tvSeriesSimilarResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeriesSimilarResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the translations that have been added to a TV show.
 * @summary Translations
 */
export const tvSeriesTranslationsParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesTranslationsResponseIdDefault = 0;

export const tvSeriesTranslationsResponse = zod.object({
  "id": zod.number().optional(),
  "translations": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "english_name": zod.string().optional(),
  "data": zod.object({
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "homepage": zod.string().optional(),
  "tagline": zod.string().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * Get the videos that belong to a TV show.
 * @summary Videos
 */
export const tvSeriesVideosParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesVideosQueryLanguageDefault = "en-US";

export const tvSeriesVideosQueryParams = zod.object({
  "include_video_language": zod.coerce.string().optional().describe('filter the list results by language, supports more than one value by using a comma'),
  "language": zod.coerce.string().default(tvSeriesVideosQueryLanguageDefault)
}).strict()

export const tvSeriesVideosResponseIdDefault = 0;export const tvSeriesVideosResponseResultsItemSizeDefault = 0;export const tvSeriesVideosResponseResultsItemOfficialDefault = true;

export const tvSeriesVideosResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional(),
  "key": zod.string().optional(),
  "site": zod.string().optional(),
  "size": zod.number().optional(),
  "type": zod.string().optional(),
  "official": zod.boolean().default(tvSeriesVideosResponseResultsItemOfficialDefault),
  "published_at": zod.string().optional(),
  "id": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the list of streaming providers we have for a TV show.
 * @summary Watch Providers
 */
export const tvSeriesWatchProvidersParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesWatchProvidersResponseIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsAEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsAEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsARFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsARFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsATBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsATBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsATFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsATFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsAUFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsAUFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsAUBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsAUBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBAFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBAFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBBFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBBFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBGFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBGFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBOFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBOFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBRFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBRFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsBSFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsBSFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCABuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCABuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCAFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCAFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCHFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCHFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCHBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCHBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCIFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCIFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCLFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCLFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCOFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCOFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCRFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCRFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsCZFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsCZFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsDEBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsDEBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsDEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsDEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsDKFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsDKFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsDOFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsDOFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsDZFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsDZFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsECFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsECFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsEGFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsEGFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsESFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsESFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsFIBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsFIBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsFIFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsFIFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsFRBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsFRBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsFRFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsFRFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsGBFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsGBFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsGBBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsGBBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsGFFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsGFFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsGHFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsGHFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsGQFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsGQFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsGTFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsGTFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsHKFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsHKFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsHNFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsHNFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsHRFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsHRFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsHUFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsHUFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsIDFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsIDFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsIEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsIEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsIEBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsIEBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsILFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsILFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsIQFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsIQFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsITBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsITBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsITFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsITFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsJMFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsJMFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsJPFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsJPFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsJPBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsJPBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsJPRentItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsJPRentItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsKEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsKEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsKRFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsKRFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsLBFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsLBFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsLTFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsLTFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsLYFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsLYFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsMDFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsMDFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsMKFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsMKFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsMUFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsMUFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsMXFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsMXFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsMYFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsMYFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsMZFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsMZFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNGFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNGFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNLFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNLFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNLBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNLBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNOFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNOFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNOBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNOBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsNZFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsNZFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPAFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPAFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPHFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPHFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPLFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPLFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPLRentItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPLRentItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPSFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPSFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPTFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPTFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsPYFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsPYFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsROFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsROFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsRSFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsRSFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsRUFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsRUFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsRUAdsItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsRUAdsItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSAFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSAFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSCFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSCFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSEBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSEBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSGFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSGFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSIFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSIFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSKFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSKFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSNFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSNFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsSVFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsSVFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsTHFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsTHFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsTRFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsTRFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsTTFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsTTFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsTWFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsTWFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsTZFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsTZFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsUGFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsUGFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsUSFreeItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsUSFreeItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsUSBuyItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsUSBuyItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsUSFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsUSFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsUYFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsUYFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsVEFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsVEFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsZAFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsZAFlatrateItemDisplayPriorityDefault = 0;export const tvSeriesWatchProvidersResponseResultsZMFlatrateItemProviderIdDefault = 0;export const tvSeriesWatchProvidersResponseResultsZMFlatrateItemDisplayPriorityDefault = 0;

export const tvSeriesWatchProvidersResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.object({
  "AE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AT": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CA": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CL": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DE": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EC": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ES": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FI": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FR": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GF": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GQ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HN": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ID": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IL": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IQ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IT": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JM": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JP": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "KE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "KR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MD": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MX": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NL": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PL": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "ads": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SC": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SN": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SV": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TW": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "UG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "US": zod.object({
  "link": zod.string().optional(),
  "free": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "UY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "VE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ZA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ZM": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional()
}).strict().optional()
}).strict()


/**
 * Rate a TV show and save it to your rated list.
 * @summary Add Rating
 */
export const tvSeriesAddRatingParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesAddRatingQueryParams = zod.object({
  "guest_session_id": zod.coerce.string().optional(),
  "session_id": zod.coerce.string().optional()
}).strict()

export const tvSeriesAddRatingResponseStatusCodeDefault = 0;

export const tvSeriesAddRatingResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * @summary Delete Rating
 */
export const tvSeriesDeleteRatingParams = zod.object({
  "series_id": zod.number()
}).strict()

export const tvSeriesDeleteRatingQueryParams = zod.object({
  "guest_session_id": zod.coerce.string().optional(),
  "session_id": zod.coerce.string().optional()
}).strict()

export const tvSeriesDeleteRatingResponseStatusCodeDefault = 0;

export const tvSeriesDeleteRatingResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Get the rating, watchlist and favourite status.
 * @summary Account States
 */
export const tvSeasonAccountStatesParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonAccountStatesQueryParams = zod.object({
  "session_id": zod.coerce.string().optional(),
  "guest_session_id": zod.coerce.string().optional()
}).strict()

export const tvSeasonAccountStatesResponseIdDefault = 0;export const tvSeasonAccountStatesResponseResultsItemIdDefault = 0;export const tvSeasonAccountStatesResponseResultsItemEpisodeNumberDefault = 0;export const tvSeasonAccountStatesResponseResultsItemRatedValueDefault = 0;

export const tvSeasonAccountStatesResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "episode_number": zod.number().optional(),
  "rated": zod.object({
  "value": zod.number().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * Get the aggregate credits (cast and crew) that have been added to a TV season.
 * @summary Aggregate Credits
 */
export const tvSeasonAggregateCreditsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonAggregateCreditsQueryLanguageDefault = "en-US";

export const tvSeasonAggregateCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeasonAggregateCreditsQueryLanguageDefault)
}).strict()

export const tvSeasonAggregateCreditsResponseCastItemAdultDefault = true;export const tvSeasonAggregateCreditsResponseCastItemGenderDefault = 0;export const tvSeasonAggregateCreditsResponseCastItemIdDefault = 0;export const tvSeasonAggregateCreditsResponseCastItemPopularityDefault = 0;export const tvSeasonAggregateCreditsResponseCastItemRolesItemEpisodeCountDefault = 0;export const tvSeasonAggregateCreditsResponseCastItemTotalEpisodeCountDefault = 0;export const tvSeasonAggregateCreditsResponseCastItemOrderDefault = 0;export const tvSeasonAggregateCreditsResponseCrewItemAdultDefault = true;export const tvSeasonAggregateCreditsResponseCrewItemGenderDefault = 0;export const tvSeasonAggregateCreditsResponseCrewItemIdDefault = 0;export const tvSeasonAggregateCreditsResponseCrewItemPopularityDefault = 0;export const tvSeasonAggregateCreditsResponseCrewItemJobsItemEpisodeCountDefault = 0;export const tvSeasonAggregateCreditsResponseCrewItemTotalEpisodeCountDefault = 0;export const tvSeasonAggregateCreditsResponseIdDefault = 0;

export const tvSeasonAggregateCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeasonAggregateCreditsResponseCastItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "roles": zod.array(zod.object({
  "credit_id": zod.string().optional(),
  "character": zod.string().optional(),
  "episode_count": zod.number().optional()
}).strict()).optional(),
  "total_episode_count": zod.number().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeasonAggregateCreditsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.any().optional(),
  "jobs": zod.array(zod.object({
  "credit_id": zod.string().optional(),
  "job": zod.string().optional(),
  "episode_count": zod.number().optional()
}).strict()).optional(),
  "department": zod.string().optional(),
  "total_episode_count": zod.number().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get the recent changes for a TV season.
 * @summary Changes
 */
export const tvSeasonChangesByIdParams = zod.object({
  "season_id": zod.number()
}).strict()

export const tvSeasonChangesByIdQueryPageDefault = 1;

export const tvSeasonChangesByIdQueryParams = zod.object({
  "end_date": zod.coerce.string().optional(),
  "page": zod.coerce.number().default(tvSeasonChangesByIdQueryPageDefault),
  "start_date": zod.coerce.string().optional()
}).strict()

export const tvSeasonChangesByIdResponseChangesItemItemsItemValueEpisodeIdDefault = 0;export const tvSeasonChangesByIdResponseChangesItemItemsItemValueEpisodeNumberDefault = 0;

export const tvSeasonChangesByIdResponse = zod.object({
  "changes": zod.array(zod.object({
  "key": zod.string().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().optional(),
  "action": zod.string().optional(),
  "time": zod.string().optional(),
  "value": zod.object({
  "episode_id": zod.number().optional(),
  "episode_number": zod.number().optional()
}).strict().optional()
}).strict()).optional()
}).strict()).optional()
}).strict()


/**
 * @summary Credits
 */
export const tvSeasonCreditsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonCreditsQueryLanguageDefault = "en-US";

export const tvSeasonCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeasonCreditsQueryLanguageDefault)
}).strict()

export const tvSeasonCreditsResponseCastItemAdultDefault = true;export const tvSeasonCreditsResponseCastItemGenderDefault = 0;export const tvSeasonCreditsResponseCastItemIdDefault = 0;export const tvSeasonCreditsResponseCastItemPopularityDefault = 0;export const tvSeasonCreditsResponseCastItemOrderDefault = 0;export const tvSeasonCreditsResponseCrewItemAdultDefault = true;export const tvSeasonCreditsResponseCrewItemGenderDefault = 0;export const tvSeasonCreditsResponseCrewItemIdDefault = 0;export const tvSeasonCreditsResponseCrewItemPopularityDefault = 0;export const tvSeasonCreditsResponseIdDefault = 0;

export const tvSeasonCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeasonCreditsResponseCastItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "adult": zod.boolean().default(tvSeasonCreditsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.any().optional(),
  "credit_id": zod.string().optional(),
  "department": zod.string().optional(),
  "job": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get a list of external IDs that have been added to a TV season.
 * @summary External IDs
 */
export const tvSeasonExternalIdsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonExternalIdsResponseIdDefault = 0;export const tvSeasonExternalIdsResponseTvdbIdDefault = 0;

export const tvSeasonExternalIdsResponse = zod.object({
  "id": zod.number().optional(),
  "freebase_mid": zod.string().optional(),
  "freebase_id": zod.string().optional(),
  "tvdb_id": zod.number().optional(),
  "tvrage_id": zod.any().optional(),
  "wikidata_id": zod.string().optional()
}).strict()


/**
 * Get the translations for a TV season.
 * @summary Translations
 */
export const tvSeasonTranslationsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonTranslationsResponseIdDefault = 0;

export const tvSeasonTranslationsResponse = zod.object({
  "id": zod.number().optional(),
  "translations": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "english_name": zod.string().optional(),
  "data": zod.object({
  "name": zod.string().optional(),
  "overview": zod.string().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * Get the videos that belong to a TV season.
 * @summary Videos
 */
export const tvSeasonVideosParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonVideosQueryLanguageDefault = "en-US";

export const tvSeasonVideosQueryParams = zod.object({
  "include_video_language": zod.coerce.string().optional().describe('filter the list results by language, supports more than one value by using a comma'),
  "language": zod.coerce.string().default(tvSeasonVideosQueryLanguageDefault)
}).strict()

export const tvSeasonVideosResponseIdDefault = 0;export const tvSeasonVideosResponseResultsItemSizeDefault = 0;export const tvSeasonVideosResponseResultsItemOfficialDefault = true;

export const tvSeasonVideosResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional(),
  "key": zod.string().optional(),
  "site": zod.string().optional(),
  "size": zod.number().optional(),
  "type": zod.string().optional(),
  "official": zod.boolean().default(tvSeasonVideosResponseResultsItemOfficialDefault),
  "published_at": zod.string().optional(),
  "id": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * @summary Credits
 */
export const tvEpisodeCreditsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeCreditsQueryLanguageDefault = "en-US";

export const tvEpisodeCreditsQueryParams = zod.object({
  "language": zod.coerce.string().default(tvEpisodeCreditsQueryLanguageDefault)
}).strict()

export const tvEpisodeCreditsResponseCastItemAdultDefault = true;export const tvEpisodeCreditsResponseCastItemGenderDefault = 0;export const tvEpisodeCreditsResponseCastItemIdDefault = 0;export const tvEpisodeCreditsResponseCastItemPopularityDefault = 0;export const tvEpisodeCreditsResponseCastItemOrderDefault = 0;export const tvEpisodeCreditsResponseCrewItemAdultDefault = true;export const tvEpisodeCreditsResponseCrewItemGenderDefault = 0;export const tvEpisodeCreditsResponseCrewItemIdDefault = 0;export const tvEpisodeCreditsResponseCrewItemPopularityDefault = 0;export const tvEpisodeCreditsResponseGuestStarsItemOrderDefault = 0;export const tvEpisodeCreditsResponseGuestStarsItemAdultDefault = true;export const tvEpisodeCreditsResponseGuestStarsItemGenderDefault = 0;export const tvEpisodeCreditsResponseGuestStarsItemIdDefault = 0;export const tvEpisodeCreditsResponseGuestStarsItemPopularityDefault = 0;export const tvEpisodeCreditsResponseIdDefault = 0;

export const tvEpisodeCreditsResponse = zod.object({
  "cast": zod.array(zod.object({
  "adult": zod.boolean().default(tvEpisodeCreditsResponseCastItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional(),
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "crew": zod.array(zod.object({
  "department": zod.string().optional(),
  "job": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "adult": zod.boolean().default(tvEpisodeCreditsResponseCrewItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "guest_stars": zod.array(zod.object({
  "character": zod.string().optional(),
  "credit_id": zod.string().optional(),
  "order": zod.number().optional(),
  "adult": zod.boolean().default(tvEpisodeCreditsResponseGuestStarsItemAdultDefault),
  "gender": zod.number().optional(),
  "id": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.string().optional()
}).strict()).optional(),
  "id": zod.number().optional()
}).strict()


/**
 * Get a list of external IDs that have been added to a TV episode.
 * @summary External IDs
 */
export const tvEpisodeExternalIdsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.string()
}).strict()

export const tvEpisodeExternalIdsResponseIdDefault = 0;export const tvEpisodeExternalIdsResponseTvdbIdDefault = 0;export const tvEpisodeExternalIdsResponseTvrageIdDefault = 0;

export const tvEpisodeExternalIdsResponse = zod.object({
  "id": zod.number().optional(),
  "imdb_id": zod.string().optional(),
  "freebase_mid": zod.string().optional(),
  "freebase_id": zod.string().optional(),
  "tvdb_id": zod.number().optional(),
  "tvrage_id": zod.number().optional(),
  "wikidata_id": zod.string().optional()
}).strict()


/**
 * Get the translations that have been added to a TV episode.
 * @summary Translations
 */
export const tvEpisodeTranslationsParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeTranslationsResponseIdDefault = 0;

export const tvEpisodeTranslationsResponse = zod.object({
  "id": zod.number().optional(),
  "translations": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "english_name": zod.string().optional(),
  "data": zod.object({
  "name": zod.string().optional(),
  "overview": zod.string().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * Get the videos that belong to a TV episode.
 * @summary Videos
 */
export const tvEpisodeVideosParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeVideosQueryLanguageDefault = "en-US";

export const tvEpisodeVideosQueryParams = zod.object({
  "include_video_language": zod.coerce.string().optional().describe('filter the list results by language, supports more than one value by using a comma'),
  "language": zod.coerce.string().default(tvEpisodeVideosQueryLanguageDefault)
}).strict()

export const tvEpisodeVideosResponseIdDefault = 0;export const tvEpisodeVideosResponseResultsItemSizeDefault = 0;export const tvEpisodeVideosResponseResultsItemOfficialDefault = true;

export const tvEpisodeVideosResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional(),
  "key": zod.string().optional(),
  "site": zod.string().optional(),
  "size": zod.number().optional(),
  "type": zod.string().optional(),
  "official": zod.boolean().default(tvEpisodeVideosResponseResultsItemOfficialDefault),
  "published_at": zod.string().optional(),
  "id": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Rate a TV episode and save it to your rated list.
 * @summary Add Rating
 */
export const tvEpisodeAddRatingParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeAddRatingQueryParams = zod.object({
  "guest_session_id": zod.coerce.string().optional(),
  "session_id": zod.coerce.string().optional()
}).strict()

export const tvEpisodeAddRatingResponseStatusCodeDefault = 0;

export const tvEpisodeAddRatingResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Delete your rating on a TV episode.
 * @summary Delete Rating
 */
export const tvEpisodeDeleteRatingParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number(),
  "episode_number": zod.number()
}).strict()

export const tvEpisodeDeleteRatingQueryParams = zod.object({
  "guest_session_id": zod.coerce.string().optional(),
  "session_id": zod.coerce.string().optional()
}).strict()

export const tvEpisodeDeleteRatingResponseStatusCodeDefault = 0;

export const tvEpisodeDeleteRatingResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Get the public details of an account on TMDB.
 * @summary Details
 */
export const accountDetailsPathAccountIdDefault = null;

export const accountDetailsParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountDetailsQueryParams = zod.object({
  "session_id": zod.coerce.string().optional()
}).strict()

export const accountDetailsResponseIdDefault = 0;export const accountDetailsResponseIncludeAdultDefault = true;

export const accountDetailsResponse = zod.object({
  "avatar": zod.object({
  "gravatar": zod.object({
  "hash": zod.string().optional()
}).strict().optional(),
  "tmdb": zod.object({
  "avatar_path": zod.string().optional()
}).strict().optional()
}).strict().optional(),
  "id": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional(),
  "include_adult": zod.boolean().default(accountDetailsResponseIncludeAdultDefault),
  "username": zod.string().optional()
}).strict()


/**
 * Get a users list of custom lists.
 * @summary Lists
 */
export const accountListsPathAccountIdDefault = null;

export const accountListsParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountListsQueryPageDefault = 1;

export const accountListsQueryParams = zod.object({
  "page": zod.coerce.number().default(accountListsQueryPageDefault),
  "session_id": zod.coerce.string().optional()
}).strict()

export const accountListsResponsePageDefault = 0;export const accountListsResponseResultsItemFavoriteCountDefault = 0;export const accountListsResponseResultsItemIdDefault = 0;export const accountListsResponseResultsItemItemCountDefault = 0;export const accountListsResponseTotalPagesDefault = 0;export const accountListsResponseTotalResultsDefault = 0;

export const accountListsResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "description": zod.string().optional(),
  "favorite_count": zod.number().optional(),
  "id": zod.number().optional(),
  "item_count": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "list_type": zod.string().optional(),
  "name": zod.string().optional(),
  "poster_path": zod.any().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a users list of favourite movies.
 * @summary Favorite Movies
 */
export const accountGetFavoritesPathAccountIdDefault = null;

export const accountGetFavoritesParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountGetFavoritesQueryLanguageDefault = "en-US";export const accountGetFavoritesQueryPageDefault = 1;export const accountGetFavoritesQuerySortByDefault = "created_at.asc";

export const accountGetFavoritesQueryParams = zod.object({
  "language": zod.coerce.string().default(accountGetFavoritesQueryLanguageDefault),
  "page": zod.coerce.number().default(accountGetFavoritesQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountGetFavoritesQuerySortByDefault)
}).strict()

export const accountGetFavoritesResponsePageDefault = 0;export const accountGetFavoritesResponseResultsItemAdultDefault = true;export const accountGetFavoritesResponseResultsItemGenreIdsItemDefault = 0;export const accountGetFavoritesResponseResultsItemIdDefault = 0;export const accountGetFavoritesResponseResultsItemPopularityDefault = 0;export const accountGetFavoritesResponseResultsItemVideoDefault = true;export const accountGetFavoritesResponseResultsItemVoteAverageDefault = 0;export const accountGetFavoritesResponseResultsItemVoteCountDefault = 0;export const accountGetFavoritesResponseTotalPagesDefault = 0;export const accountGetFavoritesResponseTotalResultsDefault = 0;

export const accountGetFavoritesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(accountGetFavoritesResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(accountGetFavoritesResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a users list of favourite TV shows.
 * @summary Favorite TV
 */
export const accountFavoriteTvPathAccountIdDefault = null;

export const accountFavoriteTvParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountFavoriteTvQueryLanguageDefault = "en-US";export const accountFavoriteTvQueryPageDefault = 1;export const accountFavoriteTvQuerySortByDefault = "created_at.asc";

export const accountFavoriteTvQueryParams = zod.object({
  "language": zod.coerce.string().default(accountFavoriteTvQueryLanguageDefault),
  "page": zod.coerce.number().default(accountFavoriteTvQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountFavoriteTvQuerySortByDefault)
}).strict()

export const accountFavoriteTvResponsePageDefault = 0;export const accountFavoriteTvResponseResultsItemAdultDefault = true;export const accountFavoriteTvResponseResultsItemGenreIdsItemDefault = 0;export const accountFavoriteTvResponseResultsItemIdDefault = 0;export const accountFavoriteTvResponseResultsItemPopularityDefault = 0;export const accountFavoriteTvResponseResultsItemVoteAverageDefault = 0;export const accountFavoriteTvResponseResultsItemVoteCountDefault = 0;export const accountFavoriteTvResponseTotalPagesDefault = 0;export const accountFavoriteTvResponseTotalResultsDefault = 0;

export const accountFavoriteTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(accountFavoriteTvResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a users list of rated movies.
 * @summary Rated Movies
 */
export const accountRatedMoviesPathAccountIdDefault = null;

export const accountRatedMoviesParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountRatedMoviesQueryLanguageDefault = "en-US";export const accountRatedMoviesQueryPageDefault = 1;export const accountRatedMoviesQuerySortByDefault = "created_at.asc";

export const accountRatedMoviesQueryParams = zod.object({
  "language": zod.coerce.string().default(accountRatedMoviesQueryLanguageDefault),
  "page": zod.coerce.number().default(accountRatedMoviesQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountRatedMoviesQuerySortByDefault)
}).strict()

export const accountRatedMoviesResponsePageDefault = 0;export const accountRatedMoviesResponseResultsItemAdultDefault = true;export const accountRatedMoviesResponseResultsItemGenreIdsItemDefault = 0;export const accountRatedMoviesResponseResultsItemIdDefault = 0;export const accountRatedMoviesResponseResultsItemPopularityDefault = 0;export const accountRatedMoviesResponseResultsItemVideoDefault = true;export const accountRatedMoviesResponseResultsItemVoteAverageDefault = 0;export const accountRatedMoviesResponseResultsItemVoteCountDefault = 0;export const accountRatedMoviesResponseResultsItemRatingDefault = 0;export const accountRatedMoviesResponseTotalPagesDefault = 0;export const accountRatedMoviesResponseTotalResultsDefault = 0;

export const accountRatedMoviesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(accountRatedMoviesResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(accountRatedMoviesResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "rating": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a users list of rated TV shows.
 * @summary Rated TV
 */
export const accountRatedTvPathAccountIdDefault = null;

export const accountRatedTvParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountRatedTvQueryLanguageDefault = "en-US";export const accountRatedTvQueryPageDefault = 1;export const accountRatedTvQuerySortByDefault = "created_at.asc";

export const accountRatedTvQueryParams = zod.object({
  "language": zod.coerce.string().default(accountRatedTvQueryLanguageDefault),
  "page": zod.coerce.number().default(accountRatedTvQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountRatedTvQuerySortByDefault)
}).strict()

export const accountRatedTvResponsePageDefault = 0;export const accountRatedTvResponseResultsItemAdultDefault = true;export const accountRatedTvResponseResultsItemGenreIdsItemDefault = 0;export const accountRatedTvResponseResultsItemIdDefault = 0;export const accountRatedTvResponseResultsItemPopularityDefault = 0;export const accountRatedTvResponseResultsItemVoteAverageDefault = 0;export const accountRatedTvResponseResultsItemVoteCountDefault = 0;export const accountRatedTvResponseResultsItemRatingDefault = 0;export const accountRatedTvResponseTotalPagesDefault = 0;export const accountRatedTvResponseTotalResultsDefault = 0;

export const accountRatedTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(accountRatedTvResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "rating": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a users list of rated TV episodes.
 * @summary Rated TV Episodes
 */
export const accountRatedTvEpisodesPathAccountIdDefault = null;

export const accountRatedTvEpisodesParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountRatedTvEpisodesQueryLanguageDefault = "en-US";export const accountRatedTvEpisodesQueryPageDefault = 1;export const accountRatedTvEpisodesQuerySortByDefault = "created_at.asc";

export const accountRatedTvEpisodesQueryParams = zod.object({
  "language": zod.coerce.string().default(accountRatedTvEpisodesQueryLanguageDefault),
  "page": zod.coerce.number().default(accountRatedTvEpisodesQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountRatedTvEpisodesQuerySortByDefault)
}).strict()

export const accountRatedTvEpisodesResponsePageDefault = 0;export const accountRatedTvEpisodesResponseResultsItemEpisodeNumberDefault = 0;export const accountRatedTvEpisodesResponseResultsItemIdDefault = 0;export const accountRatedTvEpisodesResponseResultsItemRuntimeDefault = 0;export const accountRatedTvEpisodesResponseResultsItemSeasonNumberDefault = 0;export const accountRatedTvEpisodesResponseResultsItemShowIdDefault = 0;export const accountRatedTvEpisodesResponseResultsItemVoteAverageDefault = 0;export const accountRatedTvEpisodesResponseResultsItemVoteCountDefault = 0;export const accountRatedTvEpisodesResponseResultsItemRatingDefault = 0;export const accountRatedTvEpisodesResponseTotalPagesDefault = 0;export const accountRatedTvEpisodesResponseTotalResultsDefault = 0;

export const accountRatedTvEpisodesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "air_date": zod.string().optional(),
  "episode_number": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.number().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional(),
  "still_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "rating": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of movies added to a users watchlist.
 * @summary Watchlist Movies
 */
export const accountWatchlistMoviesPathAccountIdDefault = null;

export const accountWatchlistMoviesParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountWatchlistMoviesQueryLanguageDefault = "en-US";export const accountWatchlistMoviesQueryPageDefault = 1;export const accountWatchlistMoviesQuerySortByDefault = "created_at.asc";

export const accountWatchlistMoviesQueryParams = zod.object({
  "language": zod.coerce.string().default(accountWatchlistMoviesQueryLanguageDefault),
  "page": zod.coerce.number().default(accountWatchlistMoviesQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountWatchlistMoviesQuerySortByDefault)
}).strict()

export const accountWatchlistMoviesResponsePageDefault = 0;export const accountWatchlistMoviesResponseResultsItemAdultDefault = true;export const accountWatchlistMoviesResponseResultsItemGenreIdsItemDefault = 0;export const accountWatchlistMoviesResponseResultsItemIdDefault = 0;export const accountWatchlistMoviesResponseResultsItemPopularityDefault = 0;export const accountWatchlistMoviesResponseResultsItemVideoDefault = true;export const accountWatchlistMoviesResponseResultsItemVoteAverageDefault = 0;export const accountWatchlistMoviesResponseResultsItemVoteCountDefault = 0;export const accountWatchlistMoviesResponseTotalPagesDefault = 0;export const accountWatchlistMoviesResponseTotalResultsDefault = 0;

export const accountWatchlistMoviesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(accountWatchlistMoviesResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(accountWatchlistMoviesResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get a list of TV shows added to a users watchlist.
 * @summary Watchlist TV
 */
export const accountWatchlistTvPathAccountIdDefault = null;

export const accountWatchlistTvParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountWatchlistTvQueryLanguageDefault = "en-US";export const accountWatchlistTvQueryPageDefault = 1;export const accountWatchlistTvQuerySortByDefault = "created_at.asc";

export const accountWatchlistTvQueryParams = zod.object({
  "language": zod.coerce.string().default(accountWatchlistTvQueryLanguageDefault),
  "page": zod.coerce.number().default(accountWatchlistTvQueryPageDefault),
  "session_id": zod.coerce.string().optional(),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(accountWatchlistTvQuerySortByDefault)
}).strict()

export const accountWatchlistTvResponsePageDefault = 0;export const accountWatchlistTvResponseResultsItemAdultDefault = true;export const accountWatchlistTvResponseResultsItemGenreIdsItemDefault = 0;export const accountWatchlistTvResponseResultsItemIdDefault = 0;export const accountWatchlistTvResponseResultsItemPopularityDefault = 0;export const accountWatchlistTvResponseResultsItemVoteAverageDefault = 0;export const accountWatchlistTvResponseResultsItemVoteCountDefault = 0;export const accountWatchlistTvResponseTotalPagesDefault = 0;export const accountWatchlistTvResponseTotalResultsDefault = 0;

export const accountWatchlistTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(accountWatchlistTvResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Mark a movie or TV show as a favourite.
 * @summary Add Favorite
 */
export const accountAddFavoritePathAccountIdDefault = null;

export const accountAddFavoriteParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountAddFavoriteQueryParams = zod.object({
  "session_id": zod.coerce.string().optional()
}).strict()

export const accountAddFavoriteResponseStatusCodeDefault = 0;

export const accountAddFavoriteResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Add a movie or TV show to your watchlist.
 * @summary Add To Watchlist
 */
export const accountAddToWatchlistPathAccountIdDefault = null;

export const accountAddToWatchlistParams = zod.object({
  "account_id": zod.number()
}).strict()

export const accountAddToWatchlistQueryParams = zod.object({
  "session_id": zod.coerce.string().optional()
}).strict()

export const accountAddToWatchlistResponseStatusCodeDefault = 0;

export const accountAddToWatchlistResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Get an up to date list of the officially supported movie certifications on TMDB.
 * @summary Movie Certifications
 */
export const certificationMovieListResponseCertificationsAUItemOrderDefault = 0;export const certificationMovieListResponseCertificationsBGItemOrderDefault = 0;export const certificationMovieListResponseCertificationsBRItemOrderDefault = 0;export const certificationMovieListResponseCertificationsCAItemOrderDefault = 0;export const certificationMovieListResponseCertificationsCAQCItemOrderDefault = 0;export const certificationMovieListResponseCertificationsDEItemOrderDefault = 0;export const certificationMovieListResponseCertificationsDKItemOrderDefault = 0;export const certificationMovieListResponseCertificationsESItemOrderDefault = 0;export const certificationMovieListResponseCertificationsFIItemOrderDefault = 0;export const certificationMovieListResponseCertificationsFRItemOrderDefault = 0;export const certificationMovieListResponseCertificationsGBItemOrderDefault = 0;export const certificationMovieListResponseCertificationsHUItemOrderDefault = 0;export const certificationMovieListResponseCertificationsINItemOrderDefault = 0;export const certificationMovieListResponseCertificationsITItemOrderDefault = 0;export const certificationMovieListResponseCertificationsLTItemOrderDefault = 0;export const certificationMovieListResponseCertificationsMYItemOrderDefault = 0;export const certificationMovieListResponseCertificationsNLItemOrderDefault = 0;export const certificationMovieListResponseCertificationsNOItemOrderDefault = 0;export const certificationMovieListResponseCertificationsNZItemOrderDefault = 0;export const certificationMovieListResponseCertificationsPHItemOrderDefault = 0;export const certificationMovieListResponseCertificationsPTItemOrderDefault = 0;export const certificationMovieListResponseCertificationsRUItemOrderDefault = 0;export const certificationMovieListResponseCertificationsSEItemOrderDefault = 0;export const certificationMovieListResponseCertificationsUSItemOrderDefault = 0;export const certificationMovieListResponseCertificationsKRItemOrderDefault = 0;export const certificationMovieListResponseCertificationsSKItemOrderDefault = 0;export const certificationMovieListResponseCertificationsTHItemOrderDefault = 0;export const certificationMovieListResponseCertificationsMXItemOrderDefault = 0;export const certificationMovieListResponseCertificationsIDItemOrderDefault = 0;export const certificationMovieListResponseCertificationsTRItemOrderDefault = 0;export const certificationMovieListResponseCertificationsARItemOrderDefault = 0;export const certificationMovieListResponseCertificationsGRItemOrderDefault = 0;export const certificationMovieListResponseCertificationsTWItemOrderDefault = 0;export const certificationMovieListResponseCertificationsZAItemOrderDefault = 0;export const certificationMovieListResponseCertificationsSGItemOrderDefault = 0;export const certificationMovieListResponseCertificationsIEItemOrderDefault = 0;export const certificationMovieListResponseCertificationsPRItemOrderDefault = 0;export const certificationMovieListResponseCertificationsJPItemOrderDefault = 0;export const certificationMovieListResponseCertificationsVIItemOrderDefault = 0;export const certificationMovieListResponseCertificationsCHItemOrderDefault = 0;export const certificationMovieListResponseCertificationsILItemOrderDefault = 0;export const certificationMovieListResponseCertificationsHKItemOrderDefault = 0;export const certificationMovieListResponseCertificationsMOItemOrderDefault = 0;export const certificationMovieListResponseCertificationsLVItemOrderDefault = 0;export const certificationMovieListResponseCertificationsLUItemOrderDefault = 0;

export const certificationMovieListResponse = zod.object({
  "certifications": zod.object({
  "AU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "BG": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "BR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "CA": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "CA-QC": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "DE": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "DK": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "ES": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "FI": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "FR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "GB": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "HU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IN": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IT": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "LT": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "MY": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "NL": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "NO": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "NZ": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PH": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PT": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "RU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "SE": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "US": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "KR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "SK": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "TH": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "MX": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "ID": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "TR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "AR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "GR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "TW": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "ZA": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "SG": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IE": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "JP": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "VI": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "CH": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IL": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "HK": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "MO": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "LV": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "LU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional()
}).strict().optional()
}).strict()


/**
 * @summary TV Certifications
 */
export const certificationsTvListResponseCertificationsAUItemOrderDefault = 0;export const certificationsTvListResponseCertificationsBRItemOrderDefault = 0;export const certificationsTvListResponseCertificationsCAItemOrderDefault = 0;export const certificationsTvListResponseCertificationsCAQCItemOrderDefault = 0;export const certificationsTvListResponseCertificationsDEItemOrderDefault = 0;export const certificationsTvListResponseCertificationsESItemOrderDefault = 0;export const certificationsTvListResponseCertificationsFRItemOrderDefault = 0;export const certificationsTvListResponseCertificationsGBItemOrderDefault = 0;export const certificationsTvListResponseCertificationsHUItemOrderDefault = 0;export const certificationsTvListResponseCertificationsKRItemOrderDefault = 0;export const certificationsTvListResponseCertificationsLTItemOrderDefault = 0;export const certificationsTvListResponseCertificationsNLItemOrderDefault = 0;export const certificationsTvListResponseCertificationsPHItemOrderDefault = 0;export const certificationsTvListResponseCertificationsPTItemOrderDefault = 0;export const certificationsTvListResponseCertificationsRUItemOrderDefault = 0;export const certificationsTvListResponseCertificationsSKItemOrderDefault = 0;export const certificationsTvListResponseCertificationsTHItemOrderDefault = 0;export const certificationsTvListResponseCertificationsUSItemOrderDefault = 0;export const certificationsTvListResponseCertificationsITItemOrderDefault = 0;export const certificationsTvListResponseCertificationsFIItemOrderDefault = 0;export const certificationsTvListResponseCertificationsMYItemOrderDefault = 0;export const certificationsTvListResponseCertificationsNZItemOrderDefault = 0;export const certificationsTvListResponseCertificationsNOItemOrderDefault = 0;export const certificationsTvListResponseCertificationsBGItemOrderDefault = 0;export const certificationsTvListResponseCertificationsMXItemOrderDefault = 0;export const certificationsTvListResponseCertificationsINItemOrderDefault = 0;export const certificationsTvListResponseCertificationsDKItemOrderDefault = 0;export const certificationsTvListResponseCertificationsSEItemOrderDefault = 0;export const certificationsTvListResponseCertificationsIDItemOrderDefault = 0;export const certificationsTvListResponseCertificationsTRItemOrderDefault = 0;export const certificationsTvListResponseCertificationsARItemOrderDefault = 0;export const certificationsTvListResponseCertificationsPLItemOrderDefault = 0;export const certificationsTvListResponseCertificationsMAItemOrderDefault = 0;export const certificationsTvListResponseCertificationsGRItemOrderDefault = 0;export const certificationsTvListResponseCertificationsILItemOrderDefault = 0;export const certificationsTvListResponseCertificationsTWItemOrderDefault = 0;export const certificationsTvListResponseCertificationsZAItemOrderDefault = 0;export const certificationsTvListResponseCertificationsSGItemOrderDefault = 0;export const certificationsTvListResponseCertificationsPRItemOrderDefault = 0;export const certificationsTvListResponseCertificationsVIItemOrderDefault = 0;

export const certificationsTvListResponse = zod.object({
  "certifications": zod.object({
  "AU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "BR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "CA": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "CA-QC": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "DE": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "ES": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "FR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "GB": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "HU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "KR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "LT": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "NL": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PH": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PT": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "RU": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "SK": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "TH": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "US": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IT": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "FI": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "MY": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "NZ": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "NO": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "BG": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "MX": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IN": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "DK": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "SE": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "ID": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "TR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "AR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PL": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "MA": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "GR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "IL": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "TW": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "ZA": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "SG": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "PR": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "VI": zod.array(zod.object({
  "certification": zod.string().optional(),
  "meaning": zod.string().optional(),
  "order": zod.number().optional()
}).strict()).optional()
}).strict().optional()
}).strict()


/**
 * Get a list of all of the movie ids that have been changed in the past 24 hours.
 * @summary Movie List
 */
export const changesMovieListQueryPageDefault = 1;

export const changesMovieListQueryParams = zod.object({
  "end_date": zod.coerce.string().date().optional(),
  "page": zod.coerce.number().default(changesMovieListQueryPageDefault),
  "start_date": zod.coerce.string().date().optional()
}).strict()

export const changesMovieListResponseResultsItemIdDefault = 0;export const changesMovieListResponseResultsItemAdultDefault = true;export const changesMovieListResponsePageDefault = 0;export const changesMovieListResponseTotalPagesDefault = 0;export const changesMovieListResponseTotalResultsDefault = 0;

export const changesMovieListResponse = zod.object({
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "adult": zod.boolean().default(changesMovieListResponseResultsItemAdultDefault)
}).strict()).optional(),
  "page": zod.number().optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * @summary TV List
 */
export const changesTvListQueryPageDefault = 1;

export const changesTvListQueryParams = zod.object({
  "end_date": zod.coerce.string().date().optional(),
  "page": zod.coerce.number().default(changesTvListQueryPageDefault),
  "start_date": zod.coerce.string().date().optional()
}).strict()

export const changesTvListResponseResultsItemIdDefault = 0;export const changesTvListResponseResultsItemAdultDefault = true;export const changesTvListResponsePageDefault = 0;export const changesTvListResponseTotalPagesDefault = 0;export const changesTvListResponseTotalResultsDefault = 0;

export const changesTvListResponse = zod.object({
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "adult": zod.boolean().default(changesTvListResponseResultsItemAdultDefault)
}).strict()).optional(),
  "page": zod.number().optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * @summary People List
 */
export const changesPeopleListQueryPageDefault = 1;

export const changesPeopleListQueryParams = zod.object({
  "end_date": zod.coerce.string().date().optional(),
  "page": zod.coerce.number().default(changesPeopleListQueryPageDefault),
  "start_date": zod.coerce.string().date().optional()
}).strict()

export const changesPeopleListResponseResultsItemIdDefault = 0;export const changesPeopleListResponseResultsItemAdultDefault = true;export const changesPeopleListResponsePageDefault = 0;export const changesPeopleListResponseTotalPagesDefault = 0;export const changesPeopleListResponseTotalResultsDefault = 0;

export const changesPeopleListResponse = zod.object({
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "adult": zod.boolean().default(changesPeopleListResponseResultsItemAdultDefault)
}).strict()).optional(),
  "page": zod.number().optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get collection details by ID.
 * @summary Details
 */
export const collectionDetailsParams = zod.object({
  "collection_id": zod.number()
}).strict()

export const collectionDetailsQueryLanguageDefault = "en-US";

export const collectionDetailsQueryParams = zod.object({
  "language": zod.coerce.string().default(collectionDetailsQueryLanguageDefault)
}).strict()

export const collectionDetailsResponseIdDefault = 0;export const collectionDetailsResponsePartsItemAdultDefault = true;export const collectionDetailsResponsePartsItemIdDefault = 0;export const collectionDetailsResponsePartsItemGenreIdsItemDefault = 0;export const collectionDetailsResponsePartsItemPopularityDefault = 0;export const collectionDetailsResponsePartsItemVideoDefault = true;export const collectionDetailsResponsePartsItemVoteAverageDefault = 0;export const collectionDetailsResponsePartsItemVoteCountDefault = 0;

export const collectionDetailsResponse = zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "backdrop_path": zod.string().optional(),
  "parts": zod.array(zod.object({
  "adult": zod.boolean().default(collectionDetailsResponsePartsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "release_date": zod.string().optional(),
  "video": zod.boolean().default(collectionDetailsResponsePartsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the images that belong to a collection.
 * @summary Images
 */
export const collectionImagesParams = zod.object({
  "collection_id": zod.number()
}).strict()

export const collectionImagesQueryParams = zod.object({
  "include_image_language": zod.coerce.string().optional().describe('specify a comma separated list of ISO-639-1 values to query, for example: `en,null`'),
  "language": zod.coerce.string().optional()
}).strict()

export const collectionImagesResponseIdDefault = 0;export const collectionImagesResponseBackdropsItemAspectRatioDefault = 0;export const collectionImagesResponseBackdropsItemHeightDefault = 0;export const collectionImagesResponseBackdropsItemVoteAverageDefault = 0;export const collectionImagesResponseBackdropsItemVoteCountDefault = 0;export const collectionImagesResponseBackdropsItemWidthDefault = 0;export const collectionImagesResponsePostersItemAspectRatioDefault = 0;export const collectionImagesResponsePostersItemHeightDefault = 0;export const collectionImagesResponsePostersItemVoteAverageDefault = 0;export const collectionImagesResponsePostersItemVoteCountDefault = 0;export const collectionImagesResponsePostersItemWidthDefault = 0;

export const collectionImagesResponse = zod.object({
  "id": zod.number().optional(),
  "backdrops": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.any().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional(),
  "posters": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "height": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "file_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * @summary Translations
 */
export const collectionTranslationsParams = zod.object({
  "collection_id": zod.number()
}).strict()

export const collectionTranslationsResponseIdDefault = 0;

export const collectionTranslationsResponse = zod.object({
  "id": zod.number().optional(),
  "translations": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "english_name": zod.string().optional(),
  "data": zod.object({
  "title": zod.string().optional(),
  "overview": zod.string().optional(),
  "homepage": zod.string().optional()
}).strict().optional()
}).strict()).optional()
}).strict()


/**
 * Get the company details by ID.
 * @summary Details
 */
export const companyDetailsParams = zod.object({
  "company_id": zod.number()
}).strict()

export const companyDetailsResponseIdDefault = 0;

export const companyDetailsResponse = zod.object({
  "description": zod.string().optional(),
  "headquarters": zod.string().optional(),
  "homepage": zod.string().optional(),
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional(),
  "parent_company": zod.any().optional()
}).strict()


/**
 * Get the company details by ID.
 * @summary Alternative Names
 */
export const companyAlternativeNamesParams = zod.object({
  "company_id": zod.number()
}).strict()

export const companyAlternativeNamesResponseIdDefault = 0;

export const companyAlternativeNamesResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "name": zod.string().optional(),
  "type": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the company logos by id.
 * @summary Images
 */
export const companyImagesParams = zod.object({
  "company_id": zod.number()
}).strict()

export const companyImagesResponseIdDefault = 0;export const companyImagesResponseLogosItemAspectRatioDefault = 0;export const companyImagesResponseLogosItemHeightDefault = 0;export const companyImagesResponseLogosItemVoteAverageDefault = 0;export const companyImagesResponseLogosItemVoteCountDefault = 0;export const companyImagesResponseLogosItemWidthDefault = 0;

export const companyImagesResponse = zod.object({
  "id": zod.number().optional(),
  "logos": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "file_path": zod.string().optional(),
  "height": zod.number().optional(),
  "id": zod.string().optional(),
  "file_type": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get a movie or TV credit details by ID.
 * @summary Details
 */
export const creditDetailsParams = zod.object({
  "credit_id": zod.string()
}).strict()

export const creditDetailsResponseMediaAdultDefault = true;export const creditDetailsResponseMediaIdDefault = 0;export const creditDetailsResponseMediaGenreIdsItemDefault = 0;export const creditDetailsResponseMediaPopularityDefault = 0;export const creditDetailsResponseMediaVoteAverageDefault = 0;export const creditDetailsResponseMediaVoteCountDefault = 0;export const creditDetailsResponseMediaSeasonsItemEpisodeCountDefault = 0;export const creditDetailsResponseMediaSeasonsItemIdDefault = 0;export const creditDetailsResponseMediaSeasonsItemSeasonNumberDefault = 0;export const creditDetailsResponseMediaSeasonsItemShowIdDefault = 0;export const creditDetailsResponsePersonAdultDefault = true;export const creditDetailsResponsePersonIdDefault = 0;export const creditDetailsResponsePersonPopularityDefault = 0;export const creditDetailsResponsePersonGenderDefault = 0;

export const creditDetailsResponse = zod.object({
  "credit_type": zod.string().optional(),
  "department": zod.string().optional(),
  "job": zod.string().optional(),
  "media": zod.object({
  "adult": zod.boolean().default(creditDetailsResponseMediaAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "media_type": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "popularity": zod.number().optional(),
  "first_air_date": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "character": zod.string().optional(),
  "episodes": zod.array(zod.unknown()).optional(),
  "seasons": zod.array(zod.object({
  "air_date": zod.string().optional(),
  "episode_count": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "media_type": zod.string().optional(),
  "id": zod.string().optional(),
  "person": zod.object({
  "adult": zod.boolean().default(creditDetailsResponsePersonAdultDefault),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "original_name": zod.string().optional(),
  "media_type": zod.string().optional(),
  "popularity": zod.number().optional(),
  "gender": zod.number().optional(),
  "known_for_department": zod.string().optional(),
  "profile_path": zod.string().optional()
}).strict().optional()
}).strict()


/**
 * Get the list of official genres for movies.
 * @summary Movie List
 */
export const genreMovieListQueryLanguageDefault = "en";

export const genreMovieListQueryParams = zod.object({
  "language": zod.coerce.string().default(genreMovieListQueryLanguageDefault)
}).strict()

export const genreMovieListResponseGenresItemIdDefault = 0;

export const genreMovieListResponse = zod.object({
  "genres": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the list of official genres for TV shows.
 * @summary TV List
 */
export const genreTvListQueryLanguageDefault = "en";

export const genreTvListQueryParams = zod.object({
  "language": zod.coerce.string().default(genreTvListQueryLanguageDefault)
}).strict()

export const genreTvListResponseGenresItemIdDefault = 0;

export const genreTvListResponse = zod.object({
  "genres": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the rated movies for a guest session.
 * @summary Rated Movies
 */
export const guestSessionRatedMoviesParams = zod.object({
  "guest_session_id": zod.string()
}).strict()

export const guestSessionRatedMoviesQueryLanguageDefault = "en-US";export const guestSessionRatedMoviesQueryPageDefault = 1;export const guestSessionRatedMoviesQuerySortByDefault = "created_at.asc";

export const guestSessionRatedMoviesQueryParams = zod.object({
  "language": zod.coerce.string().default(guestSessionRatedMoviesQueryLanguageDefault),
  "page": zod.coerce.number().default(guestSessionRatedMoviesQueryPageDefault),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(guestSessionRatedMoviesQuerySortByDefault)
}).strict()

export const guestSessionRatedMoviesResponsePageDefault = 0;export const guestSessionRatedMoviesResponseResultsItemAdultDefault = true;export const guestSessionRatedMoviesResponseResultsItemGenreIdsItemDefault = 0;export const guestSessionRatedMoviesResponseResultsItemIdDefault = 0;export const guestSessionRatedMoviesResponseResultsItemPopularityDefault = 0;export const guestSessionRatedMoviesResponseResultsItemVideoDefault = true;export const guestSessionRatedMoviesResponseResultsItemVoteAverageDefault = 0;export const guestSessionRatedMoviesResponseResultsItemVoteCountDefault = 0;export const guestSessionRatedMoviesResponseResultsItemRatingDefault = 0;export const guestSessionRatedMoviesResponseTotalPagesDefault = 0;export const guestSessionRatedMoviesResponseTotalResultsDefault = 0;

export const guestSessionRatedMoviesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(guestSessionRatedMoviesResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(guestSessionRatedMoviesResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "rating": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the rated TV shows for a guest session.
 * @summary Rated TV
 */
export const guestSessionRatedTvParams = zod.object({
  "guest_session_id": zod.string()
}).strict()

export const guestSessionRatedTvQueryLanguageDefault = "en-US";export const guestSessionRatedTvQueryPageDefault = 1;export const guestSessionRatedTvQuerySortByDefault = "created_at.asc";

export const guestSessionRatedTvQueryParams = zod.object({
  "language": zod.coerce.string().default(guestSessionRatedTvQueryLanguageDefault),
  "page": zod.coerce.number().default(guestSessionRatedTvQueryPageDefault),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(guestSessionRatedTvQuerySortByDefault)
}).strict()

export const guestSessionRatedTvResponsePageDefault = 0;export const guestSessionRatedTvResponseResultsItemAdultDefault = true;export const guestSessionRatedTvResponseResultsItemGenreIdsItemDefault = 0;export const guestSessionRatedTvResponseResultsItemIdDefault = 0;export const guestSessionRatedTvResponseResultsItemPopularityDefault = 0;export const guestSessionRatedTvResponseResultsItemVoteAverageDefault = 0;export const guestSessionRatedTvResponseResultsItemVoteCountDefault = 0;export const guestSessionRatedTvResponseResultsItemRatingDefault = 0;export const guestSessionRatedTvResponseTotalPagesDefault = 0;export const guestSessionRatedTvResponseTotalResultsDefault = 0;

export const guestSessionRatedTvResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(guestSessionRatedTvResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "origin_country": zod.array(zod.string()).optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "first_air_date": zod.string().optional(),
  "name": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "rating": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the rated TV episodes for a guest session.
 * @summary Rated TV Episodes
 */
export const guestSessionRatedTvEpisodesParams = zod.object({
  "guest_session_id": zod.string()
}).strict()

export const guestSessionRatedTvEpisodesQueryLanguageDefault = "en-US";export const guestSessionRatedTvEpisodesQueryPageDefault = 1;export const guestSessionRatedTvEpisodesQuerySortByDefault = "created_at.asc";

export const guestSessionRatedTvEpisodesQueryParams = zod.object({
  "language": zod.coerce.string().default(guestSessionRatedTvEpisodesQueryLanguageDefault),
  "page": zod.coerce.number().default(guestSessionRatedTvEpisodesQueryPageDefault),
  "sort_by": zod.enum(['created_at.asc', 'created_at.desc']).default(guestSessionRatedTvEpisodesQuerySortByDefault)
}).strict()

export const guestSessionRatedTvEpisodesResponsePageDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemEpisodeNumberDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemIdDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemRuntimeDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemSeasonNumberDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemShowIdDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemVoteAverageDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemVoteCountDefault = 0;export const guestSessionRatedTvEpisodesResponseResultsItemRatingDefault = 0;export const guestSessionRatedTvEpisodesResponseTotalPagesDefault = 0;export const guestSessionRatedTvEpisodesResponseTotalResultsDefault = 0;

export const guestSessionRatedTvEpisodesResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "air_date": zod.string().optional(),
  "episode_number": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.number().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional(),
  "still_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "rating": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the list of the countries we have watch provider (OTT/streaming) data for.
 * @summary Available Regions
 */
export const watchProvidersAvailableRegionsQueryLanguageDefault = "en-US";

export const watchProvidersAvailableRegionsQueryParams = zod.object({
  "language": zod.coerce.string().default(watchProvidersAvailableRegionsQueryLanguageDefault)
}).strict()

export const watchProvidersAvailableRegionsResponse = zod.object({
  "results": zod.array(zod.object({
  "iso_3166_1": zod.string().optional(),
  "english_name": zod.string().optional(),
  "native_name": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the list of streaming providers we have for movies.
 * @summary Movie Providers
 */
export const watchProvidersMovieListQueryLanguageDefault = "en-US";

export const watchProvidersMovieListQueryParams = zod.object({
  "language": zod.coerce.string().default(watchProvidersMovieListQueryLanguageDefault),
  "watch_region": zod.coerce.string().optional()
}).strict()

export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCADefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesAEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesARDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesATDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesAUDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesBEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesBODefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesBRDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesBGDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCHDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCLDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCODefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCRDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCZDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesDEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesDKDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesECDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesEEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesEGDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesESDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesFIDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesFRDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesGBDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesGRDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesGTDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesHKDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesHNDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesHUDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesIDDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesIEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesINDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesITDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesJPDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesLTDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesLVDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesMXDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesMYDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesNLDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesNODefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesNZDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesPEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesPHDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesPLDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesPTDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesPYDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesRUDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesSADefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesSEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesSGDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesSKDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesTHDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesTRDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesTWDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesUSDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesVEDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesZADefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesSIDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesCVDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesGHDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesMUDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesMZDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesUGDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPrioritiesILDefault = 0;export const watchProvidersMovieListResponseResultsItemDisplayPriorityDefault = 0;export const watchProvidersMovieListResponseResultsItemProviderIdDefault = 0;

export const watchProvidersMovieListResponse = zod.object({
  "results": zod.array(zod.object({
  "display_priorities": zod.object({
  "CA": zod.number().optional(),
  "AE": zod.number().optional(),
  "AR": zod.number().optional(),
  "AT": zod.number().optional(),
  "AU": zod.number().optional(),
  "BE": zod.number().optional(),
  "BO": zod.number().optional(),
  "BR": zod.number().optional(),
  "BG": zod.number().optional(),
  "CH": zod.number().optional(),
  "CL": zod.number().optional(),
  "CO": zod.number().optional(),
  "CR": zod.number().optional(),
  "CZ": zod.number().optional(),
  "DE": zod.number().optional(),
  "DK": zod.number().optional(),
  "EC": zod.number().optional(),
  "EE": zod.number().optional(),
  "EG": zod.number().optional(),
  "ES": zod.number().optional(),
  "FI": zod.number().optional(),
  "FR": zod.number().optional(),
  "GB": zod.number().optional(),
  "GR": zod.number().optional(),
  "GT": zod.number().optional(),
  "HK": zod.number().optional(),
  "HN": zod.number().optional(),
  "HU": zod.number().optional(),
  "ID": zod.number().optional(),
  "IE": zod.number().optional(),
  "IN": zod.number().optional(),
  "IT": zod.number().optional(),
  "JP": zod.number().optional(),
  "LT": zod.number().optional(),
  "LV": zod.number().optional(),
  "MX": zod.number().optional(),
  "MY": zod.number().optional(),
  "NL": zod.number().optional(),
  "NO": zod.number().optional(),
  "NZ": zod.number().optional(),
  "PE": zod.number().optional(),
  "PH": zod.number().optional(),
  "PL": zod.number().optional(),
  "PT": zod.number().optional(),
  "PY": zod.number().optional(),
  "RU": zod.number().optional(),
  "SA": zod.number().optional(),
  "SE": zod.number().optional(),
  "SG": zod.number().optional(),
  "SK": zod.number().optional(),
  "TH": zod.number().optional(),
  "TR": zod.number().optional(),
  "TW": zod.number().optional(),
  "US": zod.number().optional(),
  "VE": zod.number().optional(),
  "ZA": zod.number().optional(),
  "SI": zod.number().optional(),
  "CV": zod.number().optional(),
  "GH": zod.number().optional(),
  "MU": zod.number().optional(),
  "MZ": zod.number().optional(),
  "UG": zod.number().optional(),
  "IL": zod.number().optional()
}).strict().optional(),
  "display_priority": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "provider_name": zod.string().optional(),
  "provider_id": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Get the list of streaming providers we have for TV shows.
 * @summary TV Providers
 */
export const watchProviderTvListQueryLanguageDefault = "en-US";

export const watchProviderTvListQueryParams = zod.object({
  "language": zod.coerce.string().default(watchProviderTvListQueryLanguageDefault),
  "watch_region": zod.coerce.string().optional()
}).strict()

export const watchProviderTvListResponseResultsItemDisplayPrioritiesCADefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesAEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesARDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesATDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesAUDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesBEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesBODefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesBRDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesBGDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesCHDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesCLDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesCODefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesCRDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesCZDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesDEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesDKDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesECDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesEEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesEGDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesESDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesFIDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesFRDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesGBDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesGRDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesGTDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesHKDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesHNDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesHUDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesIDDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesIEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesINDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesITDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesJPDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesLTDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesLVDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesMXDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesMYDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesNLDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesNODefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesNZDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesPEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesPHDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesPLDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesPTDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesPYDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesRUDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesSADefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesSEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesSGDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesSKDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesTHDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesTRDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesTWDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesUSDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesVEDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesZADefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesSIDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesCVDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesGHDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesMUDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesMZDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesUGDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPrioritiesILDefault = 0;export const watchProviderTvListResponseResultsItemDisplayPriorityDefault = 0;export const watchProviderTvListResponseResultsItemProviderIdDefault = 0;

export const watchProviderTvListResponse = zod.object({
  "results": zod.array(zod.object({
  "display_priorities": zod.object({
  "CA": zod.number().optional(),
  "AE": zod.number().optional(),
  "AR": zod.number().optional(),
  "AT": zod.number().optional(),
  "AU": zod.number().optional(),
  "BE": zod.number().optional(),
  "BO": zod.number().optional(),
  "BR": zod.number().optional(),
  "BG": zod.number().optional(),
  "CH": zod.number().optional(),
  "CL": zod.number().optional(),
  "CO": zod.number().optional(),
  "CR": zod.number().optional(),
  "CZ": zod.number().optional(),
  "DE": zod.number().optional(),
  "DK": zod.number().optional(),
  "EC": zod.number().optional(),
  "EE": zod.number().optional(),
  "EG": zod.number().optional(),
  "ES": zod.number().optional(),
  "FI": zod.number().optional(),
  "FR": zod.number().optional(),
  "GB": zod.number().optional(),
  "GR": zod.number().optional(),
  "GT": zod.number().optional(),
  "HK": zod.number().optional(),
  "HN": zod.number().optional(),
  "HU": zod.number().optional(),
  "ID": zod.number().optional(),
  "IE": zod.number().optional(),
  "IN": zod.number().optional(),
  "IT": zod.number().optional(),
  "JP": zod.number().optional(),
  "LT": zod.number().optional(),
  "LV": zod.number().optional(),
  "MX": zod.number().optional(),
  "MY": zod.number().optional(),
  "NL": zod.number().optional(),
  "NO": zod.number().optional(),
  "NZ": zod.number().optional(),
  "PE": zod.number().optional(),
  "PH": zod.number().optional(),
  "PL": zod.number().optional(),
  "PT": zod.number().optional(),
  "PY": zod.number().optional(),
  "RU": zod.number().optional(),
  "SA": zod.number().optional(),
  "SE": zod.number().optional(),
  "SG": zod.number().optional(),
  "SK": zod.number().optional(),
  "TH": zod.number().optional(),
  "TR": zod.number().optional(),
  "TW": zod.number().optional(),
  "US": zod.number().optional(),
  "VE": zod.number().optional(),
  "ZA": zod.number().optional(),
  "SI": zod.number().optional(),
  "CV": zod.number().optional(),
  "GH": zod.number().optional(),
  "MU": zod.number().optional(),
  "MZ": zod.number().optional(),
  "UG": zod.number().optional(),
  "IL": zod.number().optional()
}).strict().optional(),
  "display_priority": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "provider_name": zod.string().optional(),
  "provider_id": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * @summary Details
 */
export const keywordDetailsParams = zod.object({
  "keyword_id": zod.number()
}).strict()

export const keywordDetailsResponseIdDefault = 0;

export const keywordDetailsResponse = zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()


/**
 * @summary Movies
 */
export const keywordMoviesParams = zod.object({
  "keyword_id": zod.string()
}).strict()

export const keywordMoviesQueryIncludeAdultDefault = false;export const keywordMoviesQueryLanguageDefault = "en-US";export const keywordMoviesQueryPageDefault = 1;

export const keywordMoviesQueryParams = zod.object({
  "include_adult": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(keywordMoviesQueryLanguageDefault),
  "page": zod.coerce.number().default(keywordMoviesQueryPageDefault)
}).strict()

export const keywordMoviesResponseIdDefault = 0;export const keywordMoviesResponsePageDefault = 0;export const keywordMoviesResponseResultsItemAdultDefault = true;export const keywordMoviesResponseResultsItemGenreIdsItemDefault = 0;export const keywordMoviesResponseResultsItemIdDefault = 0;export const keywordMoviesResponseResultsItemPopularityDefault = 0;export const keywordMoviesResponseResultsItemVideoDefault = true;export const keywordMoviesResponseResultsItemVoteAverageDefault = 0;export const keywordMoviesResponseResultsItemVoteCountDefault = 0;export const keywordMoviesResponseTotalPagesDefault = 0;export const keywordMoviesResponseTotalResultsDefault = 0;

export const keywordMoviesResponse = zod.object({
  "id": zod.number().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(keywordMoviesResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(keywordMoviesResponseResultsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * @summary Details
 */
export const listDetailsParams = zod.object({
  "list_id": zod.number()
}).strict()

export const listDetailsQueryLanguageDefault = "en-US";export const listDetailsQueryPageDefault = 1;

export const listDetailsQueryParams = zod.object({
  "language": zod.coerce.string().default(listDetailsQueryLanguageDefault),
  "page": zod.coerce.number().default(listDetailsQueryPageDefault)
}).strict()

export const listDetailsResponseFavoriteCountDefault = 0;export const listDetailsResponseItemsItemAdultDefault = true;export const listDetailsResponseItemsItemGenreIdsItemDefault = 0;export const listDetailsResponseItemsItemIdDefault = 0;export const listDetailsResponseItemsItemPopularityDefault = 0;export const listDetailsResponseItemsItemVideoDefault = true;export const listDetailsResponseItemsItemVoteAverageDefault = 0;export const listDetailsResponseItemsItemVoteCountDefault = 0;export const listDetailsResponseItemCountDefault = 0;

export const listDetailsResponse = zod.object({
  "created_by": zod.string().optional(),
  "description": zod.string().optional(),
  "favorite_count": zod.number().optional(),
  "id": zod.string().optional(),
  "items": zod.array(zod.object({
  "adult": zod.boolean().default(listDetailsResponseItemsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "genre_ids": zod.array(zod.number()).optional(),
  "id": zod.number().optional(),
  "media_type": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_title": zod.string().optional(),
  "overview": zod.string().optional(),
  "popularity": zod.number().optional(),
  "poster_path": zod.string().optional(),
  "release_date": zod.string().optional(),
  "title": zod.string().optional(),
  "video": zod.boolean().default(listDetailsResponseItemsItemVideoDefault),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional()
}).strict()).optional(),
  "item_count": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "name": zod.string().optional(),
  "poster_path": zod.string().optional()
}).strict()


/**
 * Delete a list.
 * @summary Delete
 */
export const listDeleteParams = zod.object({
  "list_id": zod.number()
}).strict()

export const listDeleteQueryParams = zod.object({
  "session_id": zod.coerce.string()
}).strict()

export const listDeleteResponseStatusCodeDefault = 0;

export const listDeleteResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Use this method to check if an item has already been added to the list.
 * @summary Check Item Status
 */
export const listCheckItemStatusParams = zod.object({
  "list_id": zod.number()
}).strict()

export const listCheckItemStatusQueryLanguageDefault = "en-US";

export const listCheckItemStatusQueryParams = zod.object({
  "language": zod.coerce.string().default(listCheckItemStatusQueryLanguageDefault),
  "movie_id": zod.coerce.number().optional()
}).strict()

export const listCheckItemStatusResponseIdDefault = 0;export const listCheckItemStatusResponseItemPresentDefault = true;

export const listCheckItemStatusResponse = zod.object({
  "id": zod.number().optional(),
  "item_present": zod.boolean().default(listCheckItemStatusResponseItemPresentDefault)
}).strict()


/**
 * @summary Create
 */
export const listCreateQueryParams = zod.object({
  "session_id": zod.coerce.string()
}).strict()

export const listCreateResponseSuccessDefault = true;export const listCreateResponseStatusCodeDefault = 0;export const listCreateResponseListIdDefault = 0;

export const listCreateResponse = zod.object({
  "status_message": zod.string().optional(),
  "success": zod.boolean().default(listCreateResponseSuccessDefault),
  "status_code": zod.number().optional(),
  "list_id": zod.number().optional()
}).strict()


/**
 * Add a movie to a list.
 * @summary Add Movie
 */
export const listAddMovieParams = zod.object({
  "list_id": zod.number()
}).strict()

export const listAddMovieQueryParams = zod.object({
  "session_id": zod.coerce.string()
}).strict()

export const listAddMovieResponseStatusCodeDefault = 0;

export const listAddMovieResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Remove a movie from a list.
 * @summary Remove Movie
 */
export const listRemoveMovieParams = zod.object({
  "list_id": zod.number()
}).strict()

export const listRemoveMovieQueryParams = zod.object({
  "session_id": zod.coerce.string()
}).strict()

export const listRemoveMovieResponseStatusCodeDefault = 0;

export const listRemoveMovieResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Clear all items from a list.
 * @summary Clear
 */
export const listClearParams = zod.object({
  "list_id": zod.number()
}).strict()

export const listClearQueryConfirmDefault = false;

export const listClearQueryParams = zod.object({
  "session_id": zod.coerce.string(),
  "confirm": zod.coerce.boolean()
}).strict()

export const listClearResponseStatusCodeDefault = 0;

export const listClearResponse = zod.object({
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * @summary Details
 */
export const networkDetailsParams = zod.object({
  "network_id": zod.number()
}).strict()

export const networkDetailsResponseIdDefault = 0;

export const networkDetailsResponse = zod.object({
  "headquarters": zod.string().optional(),
  "homepage": zod.string().optional(),
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict()


/**
 * Get the alternative names of a network.
 * @summary Alternative Names
 */
export const detailsCopyParams = zod.object({
  "network_id": zod.number()
}).strict()

export const detailsCopyResponseIdDefault = 0;

export const detailsCopyResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.array(zod.object({
  "name": zod.string().optional(),
  "type": zod.string().optional()
}).strict()).optional()
}).strict()


/**
 * Get the TV network logos by id.
 * @summary Images
 */
export const alternativeNamesCopyParams = zod.object({
  "network_id": zod.number()
}).strict()

export const alternativeNamesCopyResponseIdDefault = 0;export const alternativeNamesCopyResponseLogosItemAspectRatioDefault = 0;export const alternativeNamesCopyResponseLogosItemHeightDefault = 0;export const alternativeNamesCopyResponseLogosItemVoteAverageDefault = 0;export const alternativeNamesCopyResponseLogosItemVoteCountDefault = 0;export const alternativeNamesCopyResponseLogosItemWidthDefault = 0;

export const alternativeNamesCopyResponse = zod.object({
  "id": zod.number().optional(),
  "logos": zod.array(zod.object({
  "aspect_ratio": zod.number().optional(),
  "file_path": zod.string().optional(),
  "height": zod.number().optional(),
  "id": zod.string().optional(),
  "file_type": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "width": zod.number().optional()
}).strict()).optional()
}).strict()


/**
 * Retrieve the details of a movie or TV show review.
 * @summary Details
 */
export const reviewDetailsParams = zod.object({
  "review_id": zod.string()
}).strict()

export const reviewDetailsResponseAuthorDetailsRatingDefault = 0;export const reviewDetailsResponseMediaIdDefault = 0;

export const reviewDetailsResponse = zod.object({
  "id": zod.string().optional(),
  "author": zod.string().optional(),
  "author_details": zod.object({
  "name": zod.string().optional(),
  "username": zod.string().optional(),
  "avatar_path": zod.string().optional(),
  "rating": zod.number().optional()
}).strict().optional(),
  "content": zod.string().optional(),
  "created_at": zod.string().optional(),
  "iso_639_1": zod.string().optional(),
  "media_id": zod.number().optional(),
  "media_title": zod.string().optional(),
  "media_type": zod.string().optional(),
  "updated_at": zod.string().optional(),
  "url": zod.string().optional()
}).strict()


/**
 * Test your API Key to see if it's valid.
 * @summary Validate Key
 */
export const authenticationValidateKeyResponseSuccessDefault = true;export const authenticationValidateKeyResponseStatusCodeDefault = 0;

export const authenticationValidateKeyResponse = zod.object({
  "success": zod.boolean().default(authenticationValidateKeyResponseSuccessDefault),
  "status_code": zod.number().optional(),
  "status_message": zod.string().optional()
}).strict()


/**
 * Get the list of streaming providers we have for a TV season.
 * @summary Watch Providers
 */
export const tvSeasonWatchProvidersParams = zod.object({
  "series_id": zod.number(),
  "season_number": zod.number()
}).strict()

export const tvSeasonWatchProvidersQueryLanguageDefault = "en-US";

export const tvSeasonWatchProvidersQueryParams = zod.object({
  "language": zod.coerce.string().default(tvSeasonWatchProvidersQueryLanguageDefault)
}).strict()

export const tvSeasonWatchProvidersResponseIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsAEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsAEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsARFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsARFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsATFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsATFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsATBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsATBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsAUBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsAUBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsAUFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsAUFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBAFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBAFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBBFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBBFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBGFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBGFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBOFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBOFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBRFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBRFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsBSFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsBSFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCABuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCABuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCAFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCAFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCHBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCHBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCHFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCHFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCIFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCIFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCLFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCLFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCOFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCOFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCRFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCRFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsCZFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsCZFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsDEBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsDEBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsDEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsDEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsDKFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsDKFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsDOFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsDOFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsDZFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsDZFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsECFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsECFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsEGFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsEGFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsESFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsESFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsFIFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsFIFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsFIBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsFIBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsFRFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsFRFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsFRBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsFRBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsGBFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsGBFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsGBBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsGBBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsGFFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsGFFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsGHFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsGHFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsGQFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsGQFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsGTFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsGTFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsHKFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsHKFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsHNFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsHNFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsHRFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsHRFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsHUFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsHUFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsIDFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsIDFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsIEBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsIEBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsIEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsIEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsILFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsILFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsIQFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsIQFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsITFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsITFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsITBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsITBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsJMFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsJMFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsJPBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsJPBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsJPFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsJPFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsJPRentItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsJPRentItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsKEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsKEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsKRFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsKRFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsLBFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsLBFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsLYFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsLYFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsMDFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsMDFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsMKFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsMKFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsMUFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsMUFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsMXFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsMXFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsMYFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsMYFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsMZFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsMZFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNGFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNGFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNLBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNLBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNLFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNLFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNOBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNOBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNOFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNOFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsNZFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsNZFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPAFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPAFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPHFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPHFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPLRentItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPLRentItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPLFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPLFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPSFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPSFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPTFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPTFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsPYFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsPYFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsROFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsROFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsRSFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsRSFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsRUFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsRUFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSAFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSAFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSCFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSCFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSEBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSEBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSGFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSGFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSIFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSIFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSKFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSKFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSNFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSNFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsSVFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsSVFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsTHFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsTHFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsTRFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsTRFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsTTFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsTTFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsTWFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsTWFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsTZFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsTZFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsUGFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsUGFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsUSBuyItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsUSBuyItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsUSFreeItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsUSFreeItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsUSFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsUSFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsUYFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsUYFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsVEFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsVEFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsZAFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsZAFlatrateItemDisplayPriorityDefault = 0;export const tvSeasonWatchProvidersResponseResultsZMFlatrateItemProviderIdDefault = 0;export const tvSeasonWatchProvidersResponseResultsZMFlatrateItemDisplayPriorityDefault = 0;

export const tvSeasonWatchProvidersResponse = zod.object({
  "id": zod.number().optional(),
  "results": zod.object({
  "AE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "AU": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "BS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CA": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CH": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CL": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "CZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DE": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "DZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EC": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "EG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ES": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "FR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GF": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GQ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "GT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HN": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "HU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ID": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IE": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IL": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IQ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "IT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JM": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "JP": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "KE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "KR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LB": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "LY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MD": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MX": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "MZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NL": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NO": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "NZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PL": zod.object({
  "link": zod.string().optional(),
  "rent": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "PY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RO": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RS": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "RU": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SC": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SI": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SK": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SN": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "SV": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TH": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TR": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TT": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TW": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "TZ": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "UG": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "US": zod.object({
  "link": zod.string().optional(),
  "buy": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "free": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "UY": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "VE": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ZA": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional(),
  "ZM": zod.object({
  "link": zod.string().optional(),
  "flatrate": zod.array(zod.object({
  "logo_path": zod.string().optional(),
  "provider_id": zod.number().optional(),
  "provider_name": zod.string().optional(),
  "display_priority": zod.number().optional()
}).strict()).optional()
}).strict().optional()
}).strict().optional()
}).strict()


/**
 * Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
 * @summary Countries
 */
export const configurationCountriesQueryLanguageDefault = "en-US";

export const configurationCountriesQueryParams = zod.object({
  "language": zod.coerce.string().default(configurationCountriesQueryLanguageDefault)
}).strict()

export const configurationCountriesResponseItem = zod.object({
  "iso_3166_1": zod.string().optional(),
  "english_name": zod.string().optional(),
  "native_name": zod.string().optional()
}).strict()
export const configurationCountriesResponse = zod.array(configurationCountriesResponseItem)


/**
 * Get the list of the jobs and departments we use on TMDB.
 * @summary Jobs
 */
export const configurationJobsResponseItem = zod.object({
  "department": zod.string().optional(),
  "jobs": zod.array(zod.string()).optional()
}).strict()
export const configurationJobsResponse = zod.array(configurationJobsResponseItem)


/**
 * Get the list of languages (ISO 639-1 tags) used throughout TMDB.
 * @summary Languages
 */
export const configurationLanguagesResponseItem = zod.object({
  "iso_639_1": zod.string().optional(),
  "english_name": zod.string().optional(),
  "name": zod.string().optional()
}).strict()
export const configurationLanguagesResponse = zod.array(configurationLanguagesResponseItem)


/**
 * Get a list of the officially supported translations on TMDB.
 * @summary Primary Translations
 */
export const configurationPrimaryTranslationsResponseItem = zod.string()
export const configurationPrimaryTranslationsResponse = zod.array(configurationPrimaryTranslationsResponseItem)


/**
 * Get the list of timezones used throughout TMDB.
 * @summary Timezones
 */
export const configurationTimezonesResponseItem = zod.object({
  "iso_3166_1": zod.string().optional(),
  "zones": zod.array(zod.string()).optional()
}).strict()
export const configurationTimezonesResponse = zod.array(configurationTimezonesResponseItem)


/**
 * This method allows an application to validate a request token by entering a username and password.
 * @summary Create Session (with login)
 */
export const authenticationCreateSessionFromLoginResponseSuccessDefault = true;

export const authenticationCreateSessionFromLoginResponse = zod.object({
  "success": zod.boolean().default(authenticationCreateSessionFromLoginResponseSuccessDefault),
  "expires_at": zod.string().optional(),
  "request_token": zod.string().optional()
}).strict()


/**
 * Get the newest created person. This is a live response and will continuously change.
 * @summary Latest
 */
export const personLatestIdResponseAdultDefault = true;export const personLatestIdResponseGenderDefault = 0;export const personLatestIdResponseIdDefault = 0;export const personLatestIdResponsePopularityDefault = 0;

export const personLatestIdResponse = zod.object({
  "adult": zod.boolean().default(personLatestIdResponseAdultDefault),
  "also_known_as": zod.array(zod.unknown()).optional(),
  "biography": zod.string().optional(),
  "birthday": zod.any().optional(),
  "deathday": zod.any().optional(),
  "gender": zod.number().optional(),
  "homepage": zod.any().optional(),
  "id": zod.number().optional(),
  "imdb_id": zod.any().optional(),
  "known_for_department": zod.any().optional(),
  "name": zod.string().optional(),
  "place_of_birth": zod.any().optional(),
  "popularity": zod.number().optional(),
  "profile_path": zod.any().optional()
}).strict()


/**
 * Get the recent changes for a TV episode.
 * @summary Changes
 */
export const tvEpisodeChangesByIdParams = zod.object({
  "episode_id": zod.number()
}).strict()

export const tvEpisodeChangesByIdResponse = zod.object({
  "changes": zod.array(zod.object({
  "key": zod.string().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().optional(),
  "action": zod.string().optional(),
  "time": zod.string().optional(),
  "value": zod.string().optional()
}).strict()).optional()
}).strict()).optional()
}).strict()


/**
 * Get the details of a TV episode group.
 * @summary Details
 */
export const tvEpisodeGroupDetailsParams = zod.object({
  "tv_episode_group_id": zod.string()
}).strict()

export const tvEpisodeGroupDetailsResponseEpisodeCountDefault = 0;export const tvEpisodeGroupDetailsResponseGroupCountDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemOrderDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemEpisodeNumberDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemIdDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemSeasonNumberDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemShowIdDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemVoteAverageDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemVoteCountDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemEpisodesItemOrderDefault = 0;export const tvEpisodeGroupDetailsResponseGroupsItemLockedDefault = true;export const tvEpisodeGroupDetailsResponseNetworkIdDefault = 0;export const tvEpisodeGroupDetailsResponseTypeDefault = 0;

export const tvEpisodeGroupDetailsResponse = zod.object({
  "description": zod.string().optional(),
  "episode_count": zod.number().optional(),
  "group_count": zod.number().optional(),
  "groups": zod.array(zod.object({
  "id": zod.string().optional(),
  "name": zod.string().optional(),
  "order": zod.number().optional(),
  "episodes": zod.array(zod.object({
  "air_date": zod.string().optional(),
  "episode_number": zod.number().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "overview": zod.string().optional(),
  "production_code": zod.string().optional(),
  "runtime": zod.any().optional(),
  "season_number": zod.number().optional(),
  "show_id": zod.number().optional(),
  "still_path": zod.string().optional(),
  "vote_average": zod.number().optional(),
  "vote_count": zod.number().optional(),
  "order": zod.number().optional()
}).strict()).optional(),
  "locked": zod.boolean().default(tvEpisodeGroupDetailsResponseGroupsItemLockedDefault)
}).strict()).optional(),
  "id": zod.string().optional(),
  "name": zod.string().optional(),
  "network": zod.object({
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict().optional(),
  "type": zod.number().optional()
}).strict()


/**
 * Search for companies by their original and alternative names.
 * @summary Company
 */
export const searchCompanyQueryPageDefault = 1;

export const searchCompanyQueryParams = zod.object({
  "query": zod.coerce.string(),
  "page": zod.coerce.number().default(searchCompanyQueryPageDefault)
}).strict()

export const searchCompanyResponsePageDefault = 0;export const searchCompanyResponseResultsItemIdDefault = 0;export const searchCompanyResponseTotalPagesDefault = 0;export const searchCompanyResponseTotalResultsDefault = 0;

export const searchCompanyResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "logo_path": zod.string().optional(),
  "name": zod.string().optional(),
  "origin_country": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Search for collections by their original, translated and alternative names.
 * @summary Collection
 */
export const searchCollectionQueryIncludeAdultDefault = false;export const searchCollectionQueryLanguageDefault = "en-US";export const searchCollectionQueryPageDefault = 1;

export const searchCollectionQueryParams = zod.object({
  "query": zod.coerce.string(),
  "include_adult": zod.coerce.boolean().optional(),
  "language": zod.coerce.string().default(searchCollectionQueryLanguageDefault),
  "page": zod.coerce.number().default(searchCollectionQueryPageDefault),
  "region": zod.coerce.string().optional()
}).strict()

export const searchCollectionResponsePageDefault = 0;export const searchCollectionResponseResultsItemAdultDefault = true;export const searchCollectionResponseResultsItemIdDefault = 0;export const searchCollectionResponseTotalPagesDefault = 0;export const searchCollectionResponseTotalResultsDefault = 0;

export const searchCollectionResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "adult": zod.boolean().default(searchCollectionResponseResultsItemAdultDefault),
  "backdrop_path": zod.string().optional(),
  "id": zod.number().optional(),
  "name": zod.string().optional(),
  "original_language": zod.string().optional(),
  "original_name": zod.string().optional(),
  "overview": zod.string().optional(),
  "poster_path": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Search for keywords by their name.
 * @summary Keyword
 */
export const searchKeywordQueryPageDefault = 1;

export const searchKeywordQueryParams = zod.object({
  "query": zod.coerce.string(),
  "page": zod.coerce.number().default(searchKeywordQueryPageDefault)
}).strict()

export const searchKeywordResponsePageDefault = 0;export const searchKeywordResponseResultsItemIdDefault = 0;export const searchKeywordResponseTotalPagesDefault = 0;export const searchKeywordResponseTotalResultsDefault = 0;

export const searchKeywordResponse = zod.object({
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()


/**
 * Get the lists that a TV series has been added to.
 * @summary Lists
 */
export const listsCopyParams = zod.object({
  "series_id": zod.number()
}).strict()

export const listsCopyQueryLanguageDefault = "en-US";export const listsCopyQueryPageDefault = 1;

export const listsCopyQueryParams = zod.object({
  "language": zod.coerce.string().default(listsCopyQueryLanguageDefault),
  "page": zod.coerce.number().default(listsCopyQueryPageDefault)
}).strict()

export const listsCopyResponseIdDefault = 0;export const listsCopyResponsePageDefault = 0;export const listsCopyResponseResultsItemFavoriteCountDefault = 0;export const listsCopyResponseResultsItemIdDefault = 0;export const listsCopyResponseResultsItemItemCountDefault = 0;export const listsCopyResponseTotalPagesDefault = 0;export const listsCopyResponseTotalResultsDefault = 0;

export const listsCopyResponse = zod.object({
  "id": zod.number().optional(),
  "page": zod.number().optional(),
  "results": zod.array(zod.object({
  "description": zod.string().optional(),
  "favorite_count": zod.number().optional(),
  "id": zod.number().optional(),
  "item_count": zod.number().optional(),
  "iso_639_1": zod.string().optional(),
  "iso_3166_1": zod.string().optional(),
  "name": zod.string().optional(),
  "poster_path": zod.any().optional()
}).strict()).optional(),
  "total_pages": zod.number().optional(),
  "total_results": zod.number().optional()
}).strict()
